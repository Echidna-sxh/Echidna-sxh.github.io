{
    "version": "https://jsonfeed.org/version/1",
    "title": "Echidna的小窝",
    "subtitle": "l am the bone of my sword",
    "icon": "https://echidna-sxh.github.io/images/favicon.ico",
    "description": "",
    "home_page_url": "https://echidna-sxh.github.io",
    "items": [
        {
            "id": "https://echidna-sxh.github.io/comments/karan/",
            "url": "https://echidna-sxh.github.io/comments/karan/",
            "title": "拾枝杂谈： 空之境界",
            "date_published": "2022-12-08T13:29:28.000Z",
            "content_html": "<h2 id=\"空之境界\"><a class=\"anchor\" href=\"#空之境界\">#</a> 空之境界</h2>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/comments/2.png\" alt=\"\" /></p>\n<p>（图为主角两仪式）</p>\n<p>那里什么也没有，没有光，像夜下的海洋，一个人也没有的海洋。</p>\n<p>空之境界作为轻小说是一部神作，神到当你认真看完并理解这部作品，会有一瞬间的恐惧感促生出死亡的冲动，神到宣布制作连续电影时，大家一致不看好电影，大部分读者认为，时长加起来区区数小时的电影，不可能表现出这部作品的极其复杂的世界观和极度晦涩的主题。但制作电影的工作室叫飞碟社，出人意料的展现出了小说所想表达的大部分内容，飞碟社也再次封神，直到今日，都是业界公认的最优秀的动画工作室。</p>\n<p>小说作品创作于 1998 年。彼时的日本高速发展，但犯罪率居高不下，社会动荡不安，这也是催生出这部极为深刻的作品的源泉之一，光越亮，暗越深，这是亘古不变的主题。毫不夸张的说，这部小说所展现的病态之美，在轻小说界，前无古人后无来者。</p>\n<p>空之境界背景是复杂的型月世界，是型月三部曲（月姬、空境、fate）之一。空之境界，字面含义就是虚无的心境。更深层次讲，在道家思想中，无极生太极，太极生两仪，这也就是两仪家族姓氏的根源，无极乃空，空之境界就是主角两仪式根源的心境，表明本书所想表达的，是两仪式对自己的最深刻的思考，自己的根源就是虚无，自己的内心就是一个空洞（梵语，伽蓝之洞），接触虚无的人可以降维打击地改写世界，但这一切没有意义，因为一切最终都将重归于虚无，无所不有而一无所有。</p>\n<p>作品情节主要就是两仪式和各自奇异现象作斗争，并且同时思考生命的意义。这并非是无病呻吟，女主天生双重人格，一个相对软弱的女性人格和一个强硬的男性人格，这点在上图可以有所体现，夹克加和服，奇怪的穿搭。她的唯一爱好就是杀人。在女性人格主导的一次意外中陷入昏迷，男性人格代替她死去了，但也导致本应死亡的身体里残留了一个灵魂，她以死亡与活着的临界状态存活于世。人类的状态本只有两者，而两仪式的存在打破了这一定律，因而窥探到了世界的根源（这一概念是型月世界的核心，根源是所有魔术师的毕生追求，但没有一个人能活着到达），获得了直死的魔眼。设定上，拥有直死之魔眼的女主两仪式有着捕捉死亡的能力，在她眼中只要是活着的东西都有死线，只要挑断，那么活着的状态会被重置为死亡，并非物理上的杀死，而是抹杀生命本身，因此就算是最强大的魔术师被挑断死线也不会例外。</p>\n<p>本作主体一共有七个章节，七个章节的故事基本独立，但有先后顺序，不巧的是作者奈须蘑菇并没有打算按照时间线顺序进行铺开章节，加上文笔晦涩，掺杂大量哲学思考，我认为甚至融入了部分佛学思想，因此在剧情理解上造成了第一道障碍，简单来说，就是一个问题，我怎么看不懂？</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/comments/3.jpg\" alt=\"\" /></p>\n<p>简单来问那就简单来回答，贯穿整部作品的，其实就是两仪式对于生命实感的探索，黑暗的情节最终将复杂的哲学问题回到了最简单的童话问题，BMG，boy meet girl。毕竟连蘑菇自己也说，除去其庞大的世界观和有关【杀人】之类的哲学问题，《空之境界》也只不过是一部 “少年与少女相遇” 的童话，这也许是作者给予读者无数黑暗过后的一点点补偿吧（笑死，不可能的，自称讨厌人间的蘑菇还有这心）。</p>\n<p>诗为参考，可以直观地理解，这几章分别想表达什么。</p>\n<pre><code>【俯瞰风景 】\n    ——记巫条雾绘\n所谓坠落，\n宛若梦境的色彩,\n渲染出琥珀似的蝶裳。\n黑色的长发与白裙映出孤寂的奢望，\n用飞翔逃避这世界，\n依然走向世界的尽头，\n却如梦醒般坠入你蓝色的双眸。\n————带我走吧\n————带我飞吧\n曾经拘泥于楼宇\n只是望着心中残存的风景，\n羽化而登仙，\n挣脱肉体的禁锢，\n寻找梦境的色彩，\n我们一起飞向天际，\n任由视野俯瞰大地，\n飞啊，\n飞啊，\n飞吗？\n飞吧。\n红色的月光映在长裙，\n灿若夕阳的红花是死亡的美。\n起飞瞬时的坠落，\n只有回忆停留在起点。\n呼唤身边的飘舞，\n得到的只有更多的孤寂。\n这，\n真的是飞翔吗？\n如无形的幽灵，\n漂浮在空气无法触及。\n那指尖飞舞的蝶\n————我，\n一直静止在这里\n————我，\n一直漂浮在世界。\n最终，\n独自一人坠向大地，\n坠入纷飞的百合，\n坠向白骨，\n如梦醒般坠入深渊，\n而眼前也只有虚无的天空，\n和飘舞的长裙。\n————我，\n只是想要飞翔。\n</code></pre>\n<pre><code>《痛觉残留》\n    --记浅上藤乃 \n所谓痛觉，\n何尝不是暴雨后的幸福。\n目视着华美，\n名为日常的虚无。\n漂浮在无尽。\n孤寂的黑暗世界，\n停留在眼前，\n伸手去触碰，\n结果却如噩梦般飘缈。\n闭上双眼，\n我的世界，\n便于此泯灭，\n——我的世界，\n从来没有温度，\n——我的世界，\n从来没有色彩，\n——我的世界，\n从来没有疼痛，\n——我的世界，\n从来只是一场映画，\n我恐惧，\n我战栗，\n我祈祷，\n我奢求，\n最终却只有眼前红绿色的螺旋，\n雨夜的的痛觉炙烤出幸福的泪痕，\n温润的血泊涤洗出堕落的涅磐，\n在指间窥看他们癫狂的绝望，\n用朱唇拉下他们剧终的落幕，\n把痛觉的幸福禁锢在濒死的灵魂，\n用螺旋给世界涂上属于我的色彩！\n我还想要，\n更多的痛楚，\n不是毫无差别的扭曲，\n只是肆无忌惮的挥霍，\n挥霍这来之不易的幸福，\n挥霍这朽木将倾的生命，\n漫天的暴雨熄不灭那燃烧魂灵的火海，\n跨海的大桥也无法承起满足背后的罪孽，\n一切的结束只有你温柔，\n蓝色的双眸和那交织在一起，\n素衣的神明。\n——抱歉，\n这一切，\n痛彻心扉。\n</code></pre>\n<pre><code>《矛盾螺旋》\n    ——记胭条巴，\n哪怕一切都是虚伪，\n我也要守护那最真实的爱。\n金色的庭院，\n回荡着美满的歌。\n小小的家，\n却永远只有幸福的回忆。\n年复一年的日常，\n被意外写下歧路的悲歌。\n破碎的梦境埋没了曾经的我。\n舔着露骨的伤痕，\n逃避这一切。\n彻底沦丧，\n不停的跑，\n不停的逃，\n大声的嘲笑着虚伪的生活，\n奢望着世间都是假象，\n上帝用线提起我的躯体，\n用人偶的目光，\n冷眼世界。\n人造的轮回，\n不停地重演悲剧，\n与曾经温暖的日常，\n交织在一起。\n我本以为，\n永远失去了自己的信念。\n但却在不经意间，\n灰色的世界闪过一抹绚烂的光芒，\n提线的人偶逐渐捏出了自己的心。\n一点一点散落的齿轮，\n一点一点崩坏的发条，\n苦笑着自己人偶样的身躯，\n就算这样，\n我也不会后悔。\n去守护一切\n握紧手中的短刀\n回到一切开始的起点\n为了平凡的幸福。\n哪怕终点是注定的诀别。\n别了，\n世界。\n</code></pre>\n<pre><code>《忘却录音》\n    ——记黄路美莎夜 \n忘却，\n也意味着永恒的祭奠。\n在幽深的礼院，\n寻找你留下的足迹，\n在冰冷的教堂，\n寻找你逝去的身影。\n扑倒在冰冷长满青荇的砖地，\n却换来你浴火后的陨落。\n坚定的信念，\n虚玄的魔术，\n我却唯独，\n无法将你拯救。\n上帝在云端哀叹着迷途的羔羊，\n我决定亲手将这一切篡改，\n亲手撕下那页泛黄的日记，\n用橡皮抹去记忆的录音，\n金色的妖精编织出理想的现实，\n虚假的梦境演绎出自欺的真实。\n日复一日的思念化作理所当然的愤恨，\n一点一滴的愤恨堆积出毫无意义的疯狂，\n为了祭奠,\n我选则了永恒的忘却，\n结果，却因为忘却，\n迷失了你所失去的方向。\n伸出双手大声的呼喊，\n回答的却只有无限的沉寂，\n冰冷的现实把我重重的摔回地面，\n远去的魂灵被我抹上无法退去的的污渍，\n从来就没有什么绝对的真实，\n从来也没有什么理应得，\n拯救徘回在无边的旷野，\n只能在心中唱响曾经的旋律。\n忘却与篡改只为了当初的拯救，\n忘却与篡改也意味着永恒的背叛，\n拯救的，\n只有现在深深自责的我，\n背叛的，\n不止那时不甘堕落的你。\n到头来，一切的开始\n除了那豪言壮语,\n只剩下自责无能的逃避，\n与无法忘却的疯狂。\n</code></pre>\n<pre><code>《杀人考察 后》\n    ——记白纯里绪 \n堕落，\n只是懦弱的绝望。\n在草长莺飞的四月， \n在秋雨清凉的九月， \n在烟雾氤氲的正月， \n在温润血色的六月， \n清秀的背影穿过无边的人海， \n深邃的双眸敲响命运的时钟， \n日复一日的思念让我无法自拔，\n冰冷如刀的婉拒让我的世界崩倒于面前。 \n我软弱，\n我绝望\n我背弃，\n我疯狂，\n自甘沉浸在无边的苦海，\n黑色的长衣告诉我人类的悲哀，\n——白纯里绪，\n永远打上了过去的记号，\n——白纯里绪，\n永远成了孤独的曾经。 \n奔跑在狭窄的巷道， \n用生灵涂抹着她的日常， \n放纵着野兽的魂灵， \n用短刀削琢出她的真心，\n搭建起血色的喷泉，\n宴请在无寰的餐桌不断挑拨着她钢丝上的魂灵孤独的我，\n得到的只有沉沦。\n早已抛弃的梦境，\n不断践踏的尊严，\n那双蔚蓝的双眸，\n一直在我背后，\n默默悲痛。\n毫不犹豫的扔掉我逃避的面具，\n毫不犹豫的撕开我隐藏的伤痕，\n自甘堕落的我早已无法回头，\n背负罪孽的我也只有那唯一的归宿。\n银色的短刀宛若庄严的墓碑，\n雪夜的沉寂唱响救赎的挽歌，\n月光照在她如修女般的面庞，\n支撑起一生的背负。\n在草长莺飞的四月，\n在秋雨清凉的九月，\n在烟雾氤氲的正月，\n在那，如重逢般的雪夜，\n那是另外一个故事了，\n那便是，\n没有我的故事。\n</code></pre>\n<p>人虽然至死都是孤独一人，但若能与谁牵手并行的话，那便是幸福。虽然本作的主色调是漆黑，但未来福音作为收官之作，给我们展现了这样一个充满杀人冲动的两仪式和一个普普通通的黑桐干也牵手并行的故事，二人的女儿叫两仪未那，非常可爱，也算是给看到这里的读者的一点心理慰藉吧。</p>\n<p>无限有限则成无限，阴与阳，善与恶，因与果，相归得无，相分成万象，色即是空，空即是色，此乃根源，此乃两仪式，此乃空之境界。</p>\n",
            "tags": [
                "拾枝杂谈",
                "Anime"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/grasscutter/grasscutter/",
            "url": "https://echidna-sxh.github.io/grasscutter/grasscutter/",
            "title": "grasscutter————原神私服搭建过程",
            "date_published": "2022-08-16T08:29:28.000Z",
            "content_html": "<h1 id=\"grasscutter-使用指南androidwindowsios端均已支持\"><a class=\"anchor\" href=\"#grasscutter-使用指南androidwindowsios端均已支持\">#</a> grasscutter 使用指南 ——Android/Windows/IOS 端均已支持</h1>\n<h2 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h2>\n<p>grasscutter 是某二次元手游的开源后端，目前功能并不完整，但正在 contributers 正在全速开发中，未来可期。可以部署在 linux 和 windows 下，通过代理与各种平台的客户端进行交互。本文提供 grasscutter 的 linux 端部署（windows 端比较简单）、windows/andriod/ios 端的客户端连接指导，其中安卓提供机器 root 和非 root 两种情况下的解决方案。本文需要有一定的计算机基础，不面向小白，尽量说的详细，说明部分可能包含简单的 shell 命令，自行执行，不提供一键安装脚本，不提供已搭建完成的服务器，适合爱折腾的玩家，不希望任何人以此盈利，欢迎进行技术交流，有问题可以问。</p>\n<p>关键突破点为 mitmproxy 在安卓客户端的 ca 证书安装，安卓可以使用 vmos 获得一个 root 过的虚拟机（vmos 不要在应用商店下载，有关键功能阉割，去官网下载。root 功能需要 vip，有慈禧预付费版本，不想花钱的可以自己动手找一下）</p>\n<h2 id=\"更新\"><a class=\"anchor\" href=\"#更新\">#</a> 更新</h2>\n<p>目前 dev 版本已更新秘境和深渊，大世界支持联机。</p>\n<h2 id=\"关键词\"><a class=\"anchor\" href=\"#关键词\">#</a> 关键词</h2>\n<p>SSL、CA 证书、grasscutter、某二次元游戏、代理转发、http 注入、安卓、IOS、windows</p>\n<h2 id=\"环境准备\"><a class=\"anchor\" href=\"#环境准备\">#</a> 环境准备</h2>\n<ol>\n<li>java se 17</li>\n<li>mongodb 4.0+</li>\n<li>mitmproxy</li>\n</ol>\n<p>环境准备请自行度娘解决</p>\n<h2 id=\"linux服务端搭建centos7\"><a class=\"anchor\" href=\"#linux服务端搭建centos7\">#</a> linux 服务端搭建（centos7）</h2>\n<p>1.git 拉取 或 直接<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dyYXNzY3V0dGVycy9HcmFzc2N1dHRlcg==\">下载</span>源代码，并上传到服务器，tar -xzf 解压缩</p>\n<pre><code>git clone -b development https://github.com/Grasscutters/Grasscutter.git\n</code></pre>\n<p>注意下载的 dev 版本（如果编译不通过，又不想调试，可以改下 stable 版本）</p>\n<h3 id=\"1关闭防火墙或配置放行策略注意除了常规端口外要放行tcp和udp的22102端口\"><a class=\"anchor\" href=\"#1关闭防火墙或配置放行策略注意除了常规端口外要放行tcp和udp的22102端口\">#</a> 1. 关闭防火墙或配置放行策略（注意除了常规端口外，要放行 TCP 和 UDP 的 22102 端口）</h3>\n<pre><code>systemctl stop firewalld\n</code></pre>\n<p>我就比较直接，23333。如果是云服务器，记得去控制台配置一下安全组策略，服务端 90% 的问题来自这里。</p>\n<h3 id=\"2-启动mongodb自行百度linux下如何启动mongodb这个基本上没啥问题后续出现27017端口问题或mongodb类似的报错多半是mongo服务没起或者挂了\"><a class=\"anchor\" href=\"#2-启动mongodb自行百度linux下如何启动mongodb这个基本上没啥问题后续出现27017端口问题或mongodb类似的报错多半是mongo服务没起或者挂了\">#</a> 2. 启动 mongodb，自行百度 linux 下如何启动 mongodb，这个基本上没啥问题，后续出现 27017 端口问题或 mongodb 类似的报错，多半是 mongo 服务没起或者挂了。</h3>\n<ul>\n<li>这里提供一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8xMTA4NjkxNTU=\">教程</span>，执行到启动 mongodb 服务并验证即可。</li>\n</ul>\n<h3 id=\"3-编译需要java17环境自带gradle全自动编译脚本执行就完事了\"><a class=\"anchor\" href=\"#3-编译需要java17环境自带gradle全自动编译脚本执行就完事了\">#</a> 3. 编译，需要 java17 环境自带 gradle 全自动编译脚本，执行就完事了。</h3>\n<pre><code>sh gradlew jar\n</code></pre>\n<p>执行时间视服务器配置而定，如有报错，请检查你的 java 环境和网络环境，善用度娘</p>\n<p>编译成功后会在 grasscutter 的主目录下 生成一个 grasscutter 开头（加版本号）的 jar 文件，直接运行</p>\n<pre><code>java -jar grasscutter-1.1.0.jar #1.1.0是我下载的版本\n</code></pre>\n<p>会提示缺少资源文件，并给你创好了资源文件的目录（resources，没创的话自行创一下），里面的内容需要你自己下载。</p>\n<h3 id=\"4-下载资源文件\"><a class=\"anchor\" href=\"#4-下载资源文件\">#</a> 4. 下载资源文件</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL21lbWV0cm9sbHNYRC9HcmFzc2N1dHRlcl9SZXNvdXJjZXM=\">github 地址</span></p>\n<p>注：此仓库被 github 停掉的概率较高，注意备份，原因不多说了，dddd。</p>\n<pre><code>git clone https://github.com/memetrollsXD/Grasscutter_Resources.git\n</code></pre>\n<p>将 Resources 下的文件全部复制到 grasscutter 根目录下的 resources 文件夹中，包括 BinOutput、ExcelBinOutput、Readable、Scripts、Subtitle、TextMap</p>\n<h3 id=\"5-启动服务器\"><a class=\"anchor\" href=\"#5-启动服务器\">#</a> 5. 启动服务器</h3>\n<p>修改配置文件 config.json</p>\n<pre><code>&#123;\n  &quot;DatabaseUrl&quot;: &quot;mongodb://localhost:27017&quot;,\n  &quot;DatabaseCollection&quot;: &quot;grasscutter&quot;,\n  &quot;RESOURCE_FOLDER&quot;: &quot;./resources/&quot;,\n  &quot;DATA_FOLDER&quot;: &quot;./data/&quot;,\n  &quot;PACKETS_FOLDER&quot;: &quot;./packets/&quot;,\n  &quot;DUMPS_FOLDER&quot;: &quot;./dumps/&quot;,\n  &quot;KEY_FOLDER&quot;: &quot;./keys/&quot;,\n  &quot;SCRIPTS_FOLDER&quot;: &quot;./resources/Scripts/&quot;,\n  &quot;PLUGINS_FOLDER&quot;: &quot;./plugins/&quot;,\n  &quot;DebugMode&quot;: &quot;NONE&quot;,\n  &quot;RunMode&quot;: &quot;HYBRID&quot;,\n  &quot;GameServer&quot;: &#123;\n    &quot;Name&quot;: &quot;Test&quot;,\n    &quot;Ip&quot;: &quot;0.0.0.0&quot;,\n    &quot;PublicIp&quot;: &quot;your public ip&quot;,\n    &quot;Port&quot;: 22102,\n    &quot;PublicPort&quot;: 0,\n    &quot;DispatchServerDatabaseUrl&quot;: &quot;mongodb://localhost:27017&quot;,\n    &quot;DispatchServerDatabaseCollection&quot;: &quot;grasscutter&quot;,\n    &quot;InventoryLimitWeapon&quot;: 2000,\n    &quot;InventoryLimitRelic&quot;: 2000,\n    &quot;InventoryLimitMaterial&quot;: 2000,\n    &quot;InventoryLimitFurniture&quot;: 2000,\n    &quot;InventoryLimitAll&quot;: 30000,\n    &quot;MaxAvatarsInTeam&quot;: 4,\n    &quot;MaxAvatarsInTeamMultiplayer&quot;: 4,\n    &quot;MaxEntityLimit&quot;: 1000,\n    &quot;WatchGacha&quot;: false,\n    &quot;ServerNickname&quot;: &quot;Server&quot;,\n    &quot;ServerAvatarId&quot;: 10000007,\n    &quot;ServerNameCardId&quot;: 210001,\n    &quot;ServerLevel&quot;: 1,\n    &quot;ServerWorldLevel&quot;: 1,\n    &quot;ServerSignature&quot;: &quot;Server Signature&quot;,\n    &quot;WelcomeEmotes&quot;: [\n      2007,\n      1002,\n      4010\n    ],\n    &quot;WelcomeMotd&quot;: &quot;Welcome to Grasscutter emu&quot;,\n    &quot;WelcomeMailTitle&quot;: &quot;Welcome to Grasscutter!&quot;,\n    &quot;WelcomeMailSender&quot;: &quot;Lawnmower&quot;,\n    &quot;WelcomeMailContent&quot;: &quot;Hi there!\\r\\nFirst of all, welcome to Grasscutter. If you have any issues, please let us know so that Lawnmower can help you! \\r\\n\\r\\nCheck out our:\\r\\n\\u003ctype\\u003d\\&quot;browser\\&quot; text\\u003d\\&quot;Discord\\&quot; href\\u003d\\&quot;https://discord.gg/T5vZU6UyeG\\&quot;/\\u003e&quot;,\n    &quot;WelcomeMailItems&quot;: [\n      &#123;\n        &quot;itemId&quot;: 13509,\n        &quot;itemCount&quot;: 1,\n        &quot;itemLevel&quot;: 1\n      &#125;,\n      &#123;\n        &quot;itemId&quot;: 201,\n        &quot;itemCount&quot;: 10000,\n        &quot;itemLevel&quot;: 1\n      &#125;\n    ],\n    &quot;EnableOfficialShop&quot;: true,\n    &quot;Game&quot;: &#123;\n      &quot;ADVENTURE_EXP_RATE&quot;: 1.0,\n      &quot;MORA_RATE&quot;: 1.0,\n      &quot;DOMAIN_DROP_RATE&quot;: 1.0\n    &#125;\n  &#125;,\n  &quot;DispatchServer&quot;: &#123;\n    &quot;Ip&quot;: &quot;0.0.0.0&quot;,\n    &quot;PublicIp&quot;: &quot;your public ip&quot;,\n    &quot;Port&quot;: 14514,\n    &quot;PublicPort&quot;: 0,\n    &quot;KeystorePath&quot;: &quot;./keystore.p12&quot;,\n    &quot;KeystorePassword&quot;: &quot;123456&quot;,\n    &quot;UseSSL&quot;: true,\n    &quot;FrontHTTPS&quot;: true,\n    &quot;CORS&quot;: false,\n    &quot;CORSAllowedOrigins&quot;: [\n      &quot;*&quot;\n    ],\n    &quot;AutomaticallyCreateAccounts&quot;: false,\n    &quot;defaultPermissions&quot;: [\n      &quot;&quot;\n    ],\n    &quot;GameServers&quot;: []\n  &#125;,\n  &quot;LocaleLanguage&quot;: &quot;en_US&quot;,\n  &quot;DefaultLanguage&quot;: &quot;en&quot;,\n  &quot;OpenStamina&quot;: true\n&#125;\n</code></pre>\n<p>其实只需要修改两处 publicip 为你的公网 ip，以及如果你不想用 443 端口，修改一下 DispatchServer.port 即可，注意这里修改的话，下面的 mitmdump 的配置也需要同步修改。其他的不涉及网络的选项，你自己看着改。</p>\n<p>（我开的端口有点臭，23333）</p>\n<p>再执行一次启动命令</p>\n<pre><code>java -jar grasscutter-1.1.0.jar\n</code></pre>\n<p>显示游戏服务器在 22102 端口运行，转发服务器在 14514 端口运行，即为成功。</p>\n<p>此时参照命令表，在该 shell 窗口输入账号创建命令</p>\n<pre><code>account create echidna 114514233\n</code></pre>\n<p>会提示账号创建成功。</p>\n<h3 id=\"qa\"><a class=\"anchor\" href=\"#qa\">#</a> QA</h3>\n<ol>\n<li>java 编译失败</li>\n</ol>\n<p>列出我遇到的几种可能原因，</p>\n<ul>\n<li>\n<ol>\n<li>java 环境没配好，这属于最不太可能的错误，但还是检测一下，输入 java --version，看是不是 17 点几版本的，不是赶紧换。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>网络问题，编译过程会给你安装 gradle 和一系列 jar 依赖，看看卡在哪里了自行下载后导入。</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>内存问题，编译需要占用较多内存，实测内存 512MB 失败，2G 成功，运行时最低需要 1G 内存，（本来想用 vps 服务器的，但 vps 配置较差，没编过去，哈哈哈）</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>程序问题，dev 版本编译建失败实属正常现象，要么自己调一下，要么换 stable 版本。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>上述是我实际遇到过的问题，如依然不能解决，自行百度，本人 C++ 工程师，java 属实有点专业盲区。</li>\n</ol>\n</li>\n</ul>\n<ol start=\"2\">\n<li>程序运行失败</li>\n</ol>\n<ul>\n<li>\n<ol>\n<li>确认你的 resources 目录正常存在于编译生成的入口 jar 文件的同级目录下，并内容齐全。</li>\n</ol>\n</li>\n<li>\n<ol start=\"2\">\n<li>确认你 config.json 文件的 json 格式没有被破坏，比如手滑多删了个引号（还真有人这么蠢，是谁呢，不会是我吧？）</li>\n</ol>\n</li>\n<li>\n<ol start=\"3\">\n<li>确认你的 mongodb 的守护进程正常，ps -aux | grep mongod</li>\n</ol>\n</li>\n<li>\n<ol start=\"4\">\n<li>确认没有程序占用你的端口，netstat -tunlp  | grep &lt;你设置的端口，默认是 443&gt;，linux 下的常见犯人叫 ngnix，windows 下的常见犯人叫 vmware，重点检查。</li>\n</ol>\n</li>\n<li>\n<ol start=\"5\">\n<li>确认你的可用内存大于 1G</li>\n</ol>\n</li>\n<li>\n<ol start=\"6\">\n<li>提示密码错误的，可以把 config.json 中的 DispatchServer.KeystorePassword 改为空（原本是空的改为 123456，每个版本的 key 可能放的不一样，反正两个总有一个是对的）。</li>\n</ol>\n</li>\n</ul>\n<h3 id=\"6-配置抓包以及http注入\"><a class=\"anchor\" href=\"#6-配置抓包以及http注入\">#</a> 6. 配置抓包以及 http 注入</h3>\n<ul>\n<li>\n<p>这里我们用到 mitmproxy，我看到不少人使用 fiddler，但 fiddler 是基于.net 开发的程序，移植到 linux 并不方便。</p>\n</li>\n<li>\n<p>可以直接使用 pip3 安装，没装 python3 的 yum 装一下。</p>\n</li>\n</ul>\n<pre><code>pip3 install mitmproxy\n</code></pre>\n<ul>\n<li>\n<p>会给你安装 mitmproxy 及其命令行版本，即 mitmdump，还有其多版本的 ca 证书</p>\n</li>\n<li>\n<p>也可以去官网下载二进制版本，但不带 ca 证书，需要你自行部署完成后开启代理并访问 mitm.it 下载，但国内的云服务器不允许域名转发到未备案域名，所以会比较麻烦。</p>\n</li>\n<li>\n<p>安装完成后，我们回到 grasscutter 的主目录</p>\n<pre><code>  vim proxy_config.py\n</code></pre>\n<p>修改配置文件，如下：</p>\n<pre><code>  import os\n\n  # This can also be replaced with another IP address.\n  USE_SSL = True\n  REMOTE_HOST = &quot;your public ip&quot;\n  REMOTE_PORT = 14514\n\n  if os.getenv('MITM_REMOTE_HOST') != None:\n      REMOTE_HOST = os.getenv('MITM_REMOTE_HOST')\n  if os.getenv('MITM_REMOTE_PORT') != None:\n      REMOTE_PORT = int(os.getenv('MITM_REMOTE_PORT'))\n  if os.getenv('MITM_USE_SSL') != None:\n      USE_SSL = bool(os.getenv('MITM_USE_SSL'))\n\n  print('MITM Remote Host: ' + REMOTE_HOST)\n  print('MITM Remote Port: ' + str(REMOTE_PORT))\n  print('MITM Use SSL ' + str(USE_SSL))\n</code></pre>\n<p>注意此处的 REMOTE_PORT 要与上面你修改的 dispatchsever 的 port 一致。</p>\n<ul>\n<li>配置 ca 证书</li>\n</ul>\n<pre><code>cp ~/.mitmproxy/mitmproxy-ca-cert.crt /etc/ssl/certs # 这句是安装为根证书，未必需要\ncp ~/.mitmproxy/mitmproxy-ca-cert.pem /etc/pki/ca-trust/source/anchors\nupdate-ca-trust extract\n</code></pre>\n<ul>\n<li>\n<p>执行转发。重点来了，mitmproxy 的安卓代理存在诸多问题，需要添加一系列参数进行规避，而这部分，大部分教程并未提及</p>\n<pre><code>mitmdump -s proxy.py --ssl-insecure --set block_global=false --no-http2\n</code></pre>\n<p>允许不安全的 ssl 连接，禁用 http2 连接，以及禁用 internet 对 mitmproxy 的直接访问，。</p>\n</li>\n</ul>\n</li>\n</ul>\n<p>此时，代理服务器会在默认的 8080 端口启动，同样请确保端口不会冲突。</p>\n<h2 id=\"windows端登陆\"><a class=\"anchor\" href=\"#windows端登陆\">#</a> windows 端登陆</h2>\n<ul>\n<li>\n<p>配置 ca 证书</p>\n<p>将服务器端～/.mitmproxy 文件夹下的 mitmproxy-ca-cert.p12 文件拿到 windows 机器上，直接双击，选择给本地计算机安装，要密码直接空过，自动选择目录即可，重启机器。</p>\n</li>\n<li>\n<p>windows 端支持国服和国际服客户端登录，方法非常简单，打开网络和 Internet 设置，选择代理，打开手动设置代理选项，填写地址和端口，即为你上面设置的 publicip 和 mitmdump 的端口（默认 8080 那个）。</p>\n</li>\n<li>\n<p>打开客户端，直接用你创建的账号密码登录即可。</p>\n</li>\n</ul>\n<h2 id=\"qa-2\"><a class=\"anchor\" href=\"#qa-2\">#</a> QA</h2>\n<ul>\n<li>\n<p>为啥我客户端提示网络异常？</p>\n<p>代理端口不对，建议检查你的 mitmproxy 是否活着，端口号是否正确。</p>\n</li>\n<li>\n<p>为啥 4206 了？</p>\n<p>大抵是证书装的有问题罢，要么你没有全局安装，要么可以把上面那个 mitmproxy 目录下的另外一个 p12 文件也拉出装一下，目前未验证 grasscutter 下的证书是否需要安装，可以尝试一下安装那个 grasscutter 下的 keystore.p12 文件。</p>\n</li>\n<li>\n<p>连上去后网络非常不稳定</p>\n<p>你服务器带宽问题。</p>\n</li>\n<li>\n<p>登录进去显示 12-4301</p>\n<p>建议切换美服通道登录</p>\n</li>\n<li>\n<p>为啥我发现我 nohup 后台运行程序的服务器炸了？</p>\n<p>硬盘炸了，ssh 连不上的话，先去控制台重启一下。首先，必须重定向 nohup 到 dev/null，而且目前 grasscutter 有 bug，会往主目录的 log 文件夹里疯狂写入 latest.log，目前 config.json 中未发现相关选择，本人是懒得去代码里找，直接选择删除 latest.log。</p>\n</li>\n<li>\n<p>其他问题</p>\n<p>检查你的有没有科学上网啥的，关了。</p>\n</li>\n</ul>\n<h2 id=\"ios端登录\"><a class=\"anchor\" href=\"#ios端登录\">#</a> IOS 端登录</h2>\n<ul>\n<li>自行搜索 ios 如何安装 ca 证书，我们要安装的 ca 证书是～/.mitmproxy 目录下的 mitmproxy-ca-cert.pem，注意下载完成后要去找到这个文件，点一下，然后再执行证书安装的两个步骤（先安装再信任）。</li>\n<li>不要使用小火箭，会有 bug，原因很简单，小火箭不会转发 udp 报文，但我们的 grasscuter 是依赖于 kcp 这种 udp 协议的。</li>\n<li>IOS 端一把成功，没遇到啥问题，有问题应该和上述 windows 端差不多的解决方法。</li>\n</ul>\n<h2 id=\"android端登录\"><a class=\"anchor\" href=\"#android端登录\">#</a> Android 端登录</h2>\n<p>比上面的都要复杂，问题主要出在，Android7.0 往后，应用可以选择不信任用户证书，而很遗憾该手游 app 就是设置为不信任的那种，基于此，我想出 3 条解决方案。</p>\n<ul>\n<li>magisk，就是俗称的面具 root，不过没有备用机，不打算刷掉我的正常使用的手机，并不考虑。</li>\n<li>改包，设置为接受用户证书，然后重新打包，值得一试。</li>\n<li>使用虚拟机，也就是安卓模拟器。</li>\n</ul>\n<p>乍一看，第三点是一个非常抽象的想法，这意味着要在安卓机上装安卓模拟器，这不搞笑吗。但找了一下，真的有这种东西，vmos pro。</p>\n<p>至于这玩意咋整，应该没啥技术难度，注意我之前说的关于 vmos pro 的注意事项即可，剩下的百度解决。</p>\n<p>当我们有了一个 root 过的虚拟机的时候，我需要将 ca 证书安装到系统目录下，为此需要 openssl 进行安卓系统 ca 证书的制作。</p>\n<pre><code>\nyum install openssl\nopenssl x509 -inform PEM -subject_hash_old -in mitmproxy-ca-cert.pem -noout\ncp mitmproxy-ca-cert.pem c8750f0d.0 # 这边的c8750f0d是上一条命令的输出。\n</code></pre>\n<p>将这个文件放入 /system/etc/security/cacerts/ 下，并修改权限为 644</p>\n<p>设置中长按你所连接的 wifi，选择修改网络，设置代理，和上面的其他客户端一样的要求。</p>\n<p>连接即可，注意需要国际服客户端。</p>\n<h2 id=\"结语\"><a class=\"anchor\" href=\"#结语\">#</a> 结语</h2>\n<p>本人网络方向 C++ 工程师，本来以为可以一晚上解决的，但其实还是研究了不少时间的，毕竟要跑 dev 版本的 java 的代码（我跑的那个版本编译都有问题 2333），以及一堆 ca 证书问题，终于全客户端搞定了这玩意，搭建了一个服务器和朋友一起玩玩。为防止一切侵权隐患，以及屏蔽正义游侠，文章概不放图，但该讲到的节点都讲到了，有需要技术支持的请评论区留言，技术支持不收费，三言两语能解决的我都会回答（只要你不是小白，大部分问题属于这种），想以此盈利的请勿打扰（之前看到一个群友截图，大致说是有个卖家某宝 98 出售私服，结果买家进群，卖家说 windows 和 ios 都解决了，让大家等等安卓端的解决方案，笑死）。</p>\n",
            "tags": [
                "genshin"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/songs/secret%20base/",
            "url": "https://echidna-sxh.github.io/songs/secret%20base/",
            "title": "secret base",
            "date_published": "2021-12-03T10:29:28.000Z",
            "content_html": "<h1 id=\"secret-base\"><a class=\"anchor\" href=\"#secret-base\">#</a> secret base</h1>\n<p><img data-src=\"mianma.jpg\" alt=\"\" /></p>\n<h2 id=\"原歌词\"><a class=\"anchor\" href=\"#原歌词\">#</a> 原歌词</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>出会（であ）いは ふっとした 瞬间（しゅんかん）</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>帰（かえ）り道（みち）の交差点（こうさてん）で</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>声（こえ）をかけてくれたね “一绪（いっしょ）に帰（かえ）ろう”</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>仆（ぼく）は 照（て）れくさそうに</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>カバンで颜（かお）を隠（かく）しながら</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>本当（ほんとう）は とても とても 嬉（うれ）しかったよ</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>あぁ 花火（はなび）が夜空（よぞら）</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>きれいに咲（さ）いて ちょっとセツナク</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>あぁ 风（かぜ）が时间（じかん）とともに 流（なが）れる</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>嬉（うれ）しくって 楽（たの）しくって</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>冒険（ぼうけん）も いろいろしたね</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>あぁ 夏休（なつやす）みも あと少（すこ）しで</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>终（お）わっちゃうから</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>あぁ 太阳（たいよう）と月（つき） 仲良（なかよ）くして</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>悲（かな）しくって 寂（さみ）しくって</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>喧哗（けんか）も いろいろしたね</pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>“ありがとう” 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>涙（なみ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>突然（とつぜん）の 転校（てんこう）で どうしようもなく</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>手纸（てがみ） 书（か）くよ 电话（でんわ）もするよ</pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>忘（わす）れないでね 仆（ぼく）のことを</pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>いつまでも 二人（ふたり）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり ずっと话（はな）して</pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>夕日（ゆうひ）を见（み）てから星（ほし）を眺（なが）め</pre></td></tr><tr><td data-num=\"79\"></td><td><pre></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>君（きみ）の頬（ほほ）を 流（なが）れた涙（なみだ）は ずっと忘（わす）れない</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>君（きみ）が最后（さいご）まで</pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>大（おお）きく手（て）を振（ふる）ってくれたこと</pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>きっと忘（わす）れない</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>だから こうして 梦（ゆめ）の中（なか）で</pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>ずっと永远（えいえん）に…</pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"97\"></td><td><pre></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"103\"></td><td><pre></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"107\"></td><td><pre></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を</pre></td></tr></table></figure><h2 id=\"罗马音辅助\"><a class=\"anchor\" href=\"#罗马音辅助\">#</a> 罗马音辅助</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ki mi to na tsu no o wa ri sho u ra i no yu me</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>o o ki na ki bo u wa su re na i</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ju u ne n go no ha chi ge tsu ma ta de a e ru no wo shi n ji te</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sa i ko u no o mo i de wo</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>出会（であ）いは ふっとした 瞬间（しゅんかん）</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>de a i wa fu tto shi ta shu n ka n</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>帰（かえ）り道（みち）の交差点（こうさてん）で</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ka e ri mi chi no ko u sa te n de</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>声（こえ）をかけてくれたね “一绪（いっしょ）に帰（かえ）ろう”</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ko e wo ka ke te ku re ta ne i ssho ni ka e ro u</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>仆（ぼく）は 照（て）れくさそうに</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>bo ku wa te re ku sa so u ni</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>カバンで颜（かお）を隠（かく）しながら</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>KA BA N de ka o wo ka ku shi na ga ra</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>本当（ほんとう）は とても とても 嬉（うれ）しかったよ</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ho n to u wa to te mo to te mo u re shi ka tta yo</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>あぁ 花火（はなび）が夜空（よぞら）</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>aa ha na bi ga yo zo ra</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>きれいに咲（さ）いて ちょっとセツナク</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ki re i ni sa i te cho tto SE TSU NA KU</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>あぁ 风（かぜ）が时间（じかん）とともに 流（なが）れる</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>aa ka ze ga ji ka n to to mo ni na ga re ru</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>嬉（うれ）しくって 楽（たの）しくって</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>u re shi ku tte ta no shi ku tte</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>冒険（ぼうけん）も いろいろしたね</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>bo u ke n mo i ro i ro shi ta ne</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>fu ta ri no hi mi tsu no ki chi no na ka</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>ki mi to na tsu no o wa ri sho u ra i no yu me</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>o o ki na ki bo u wa su re na i</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>ju u ne n go no ha chi ge tsu ma ta de a e ru no wo shi n ji te</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ki mi ga sa i go ma de ko ko ro ka ra</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>a ri ga to u sa ke n de ta ko to shi tte ta yo</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>na mi da wo ko ra e te e ga o de sa yo u na ra</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>se tsu na i yo ne</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>sa i ko u no o moi de wo</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>あぁ 夏休（なつやす）みも あと少（すこ）しで</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>aa na tsu ya su mi mo a to su ko shi de</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>终（お）わっちゃうから</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>o wa ccha u ka ra</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>あぁ 太阳（たいよう）と月（つき） 仲良（なかよ）くして</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>aa ta i yo u to tsu ki na ka yo ku shi te</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>悲（かな）しくって 寂（さみ）しくって</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>ka na shi ku tte sa mi shi ku tte</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>喧哗（けんか）も いろいろしたね</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>ke n ka mo i ro i ro shi ta ne</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>fu ta ri no hi mi tsu no ki chi no na ka</pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>ki mi ga sa i go ma de ko ko ro ka ra</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>“ありがとう” 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>a ri ga to u sa ke n de ta ko to shi tte ta yo</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>涙（なみ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>na mi da wo ko ra e te e ga o de sa yo u na ra</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>se tsu na i yo ne</pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>sa i ko u no o mo i de wo</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>突然（とつぜん）の 転校（てんこう）で どうしようもなく</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>to tsu zen no te n ko u de do u shi yo u mo na ku</pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>手纸（てがみ） 书（か）くよ 电话（でんわ）もするよ</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>te ga mi ka ku yo de n wa mo su ru yo</pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>忘（わす）れないでね 仆（ぼく）のことを</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>wa su re na i de ne bo ku no ko to wo</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>いつまでも 二人（ふたり）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>i tsu ma de mo fu ta ri no ki chi no na ka</pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり ずっと话（はな）して</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>ki mi to na tsu no o wa ri zu tto ha na shi te</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>夕日（ゆうひ）を见（み）てから星（ほし）を眺（なが）め</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>yu u hi wo mi te ka ra ho shi wo na ga me</pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>君（きみ）の頬（ほほ）を 流（なが）れた涙（なみだ）は ずっと忘（わす）れない</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>ki mi no ho ho wo na ga re ta na mi da wa zu tto wa su re na i</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>君（きみ）が最后（さいご）まで</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>ki mi ga sa i go ma de</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>大（おお）きく手（て）を振（ふる）ってくれたこと</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>o o ki ku te wo fu ru tte ku re ta ko to</pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>きっと忘（わす）れない</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>ki tto wa su re na i</pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>だから こうして 梦（ゆめ）の中（なか）で</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>da ka ra ko u shi te yu me no na ka de</pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>ずっと永远（えいえん）に…</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>zu tto e i e n ni</pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>ki mi to na tsu no o wa ri sho u ra i no yu me</pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>o o ki na ki bo u wa su re na i</pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>ju u ne n go no ha chi ge tsu ma ta de a e ru no wo shi n ji te</pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>ki mi ga sa i go ma de ko ko ro ka ra</pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>a ri ga to u sa e n de ta ko to shi tte ta yo</pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>na mi da wo ko ra e te e ga o de sa yo u na ra</pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>se tsu na i yo ne</pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>sa i ko u no o moi de wo</pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を</pre></td></tr><tr><td data-num=\"167\"></td><td><pre>sa i ko u no o mo i de wo</pre></td></tr></table></figure><h2 id=\"中文翻译\"><a class=\"anchor\" href=\"#中文翻译\">#</a> 中文翻译</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>无论与你共度的夏天 将来的梦</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>还是庞大的希望 我决不忘怀</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>相信 10 年后的 8 月 我们还能够遇上彼此</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>怀着最美的回忆…</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>出会（であ）いは ふっとした 瞬间（しゅんかん）</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>邂逅是如此不经意的瞬间</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>帰（かえ）り道（みち）の交差点（こうさてん）で</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>在回家的十字路口</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>声（こえ）をかけてくれたね “一绪（いっしょ）に帰（かえ）ろう”</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>你突然对我说 「一起回家吧」</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>仆（ぼく）は 照（て）れくさそうに</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>我当时脸红心跳</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>カバンで颜（かお）を隠（かく）しながら</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>不由得用书包遮住脸蛋</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>本当（ほんとう）は とても とても 嬉（うれ）しかったよ</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>其实心里是多么多么地喜出望外</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>あぁ 花火（はなび）が夜空（よぞら）</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>啊 朵朵烟花在夜空里</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>きれいに咲（さ）いて ちょっとセツナク</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>绚丽绽放 心头些许感伤</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>あぁ 风（かぜ）が时间（じかん）とともに 流（なが）れる</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>啊 微风随着时间一同流逝</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>嬉（うれ）しくって 楽（たの）しくって</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>喜悦过 欢乐过</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>冒険（ぼうけん）も いろいろしたね</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>也曾多次冒险过呢</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>在两人的秘密基地里</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>无论与你共度的夏天 将来的梦</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>还是庞大的希望 我决不忘怀</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>相信 10 年后的 8 月 我们还能够遇上彼此</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>你自始至终 都在心里</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>呐喊着「谢谢」 我比谁都清楚</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>强忍泪水 笑着说再见</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>肯定很难受吧</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>怀着最美的回忆…</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>あぁ 夏休（なつやす）みも あと少（すこ）しで</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>啊 暑假再过一会便要</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>终（お）わっちゃうから</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>落下帷幕</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>あぁ 太阳（たいよう）と月（つき） 仲良（なかよ）くして</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>啊 太阳和月亮请和好如初啊</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>悲（かな）しくって 寂（さみ）しくって</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>悲伤难过 寂寞难堪</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>喧哗（けんか）も いろいろしたね</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>吵架也曾是家常便饭呢</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>二人（ふたり）の 秘密（ひみつ）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>在两人的秘密基地里</pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>你自始至终 都在心里</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>“ありがとう” 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>呐喊着「谢谢」 我比谁都清楚</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>涙（なみ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>强忍泪水 笑着说再见</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>肯定很难受吧</pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>怀着最美的回忆…</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>突然（とつぜん）の 転校（てんこう）で どうしようもなく</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>突如其来的转学 彼此都无可奈何</pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>手纸（てがみ） 书（か）くよ 电话（でんわ）もするよ</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>我会写信 也会给你打电话</pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>忘（わす）れないでね 仆（ぼく）のことを</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>所以千万不要忘记我</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>いつまでも 二人（ふたり）の 基地（きち）の中（なか）</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>我永远都在两人的基地之中</pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり ずっと话（はな）して</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>与你共度的夏末 无话不谈</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>夕日（ゆうひ）を见（み）てから星（ほし）を眺（なが）め</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>从观日落到望星辰</pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>君（きみ）の頬（ほほ）を 流（なが）れた涙（なみだ）は ずっと忘（わす）れない</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>划过你双颊的泪珠 我永不忘怀</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>君（きみ）が最后（さいご）まで</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>你自始至终</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>大（おお）きく手（て）を振（ふる）ってくれたこと</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>都不停向我挥手</pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>きっと忘（わす）れない</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>我一定不会忘记</pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>だから こうして 梦（ゆめ）の中（なか）で</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>所以 愿一如既往 留在我梦中</pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>ずっと永远（えいえん）に…</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>一直到永远…</pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>君（きみ）と夏（なつ）の终（お）わり 将来（しょうらい）の梦（ゆめ）</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>无论与你共度的夏天 将来的梦</pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>大（おお）きな希望（きぼう） 忘（わす）れない</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>还是庞大的希望 我决不忘怀</pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>10 年后（じゅうねんご）の 8 月（はちげつ） また出会（であ）えるのを 信（しん）じて</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>相信 10 年后的 8 月 我们还能够遇上彼此</pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>君（きみ）が最后（さいご）まで 心（こころ）から</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>你自始至终 都在心里</pre></td></tr><tr><td data-num=\"153\"></td><td><pre></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>&quot;ありがとう&quot; 叫（さけ）んでたこと 知（し）ってたよ</pre></td></tr><tr><td data-num=\"155\"></td><td><pre>呐喊着「谢谢」 我比谁都清楚</pre></td></tr><tr><td data-num=\"156\"></td><td><pre></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>涙（なみだ）をこらえて 笑颜（えがお）でさようなら</pre></td></tr><tr><td data-num=\"158\"></td><td><pre>强忍泪水 笑着说再见</pre></td></tr><tr><td data-num=\"159\"></td><td><pre></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>せつないよね</pre></td></tr><tr><td data-num=\"161\"></td><td><pre>肯定很难受吧</pre></td></tr><tr><td data-num=\"162\"></td><td><pre></pre></td></tr><tr><td data-num=\"163\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を…</pre></td></tr><tr><td data-num=\"164\"></td><td><pre>怀着最美的回忆…</pre></td></tr><tr><td data-num=\"165\"></td><td><pre></pre></td></tr><tr><td data-num=\"166\"></td><td><pre>最高（さいこう）の思（おも）い出（で）を</pre></td></tr><tr><td data-num=\"167\"></td><td><pre>怀着最美的回忆…</pre></td></tr></table></figure>",
            "tags": [
                "songs"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/songs/qingniao/",
            "url": "https://echidna-sxh.github.io/songs/qingniao/",
            "title": "青鸟（ブルーバード）",
            "date_published": "2021-12-02T10:29:28.000Z",
            "content_html": "<h1 id=\"青鸟ブルーバード\"><a class=\"anchor\" href=\"#青鸟ブルーバード\">#</a> 青鸟（ブルーバード）</h1>\n<h2 id=\"原唱吉冈圣惠\"><a class=\"anchor\" href=\"#原唱吉冈圣惠\">#</a> 原唱：吉冈圣惠</h2>\n<h3 id=\"原歌词\"><a class=\"anchor\" href=\"#原歌词\">#</a> 原歌词</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>(戻) もどらないといって</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>(目指) めざしたのは</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>(苍) あおい (苍) あおい あのそら (空)</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>(悲か) なしみはまだ (覚) おぼえられず</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>(切) せつなさは (今) いまつかみ (始) はじめた</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>あなたへと抱（だ）く この感情（かんじょう）も</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>今（いま）言叶（ことば）に変（か）わっていく</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>未知（みち）なる世界（せかい）の 游迷（ゆめ）から目覚（めざ）めて</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>この羽根（はね）を広（ひろ）げ 飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>目指（めざ）したのは</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>爱想（あいそう）尽（つ）きたような音（おと）で</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>锖（さ）びれた古（ふる）い窓（まど）は壊（こわ）れた</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>见饱（みあ）きたカゴは</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>はら舍（す）てていく</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>振（ふ）り返（かえ）ることはもうない</pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>高鸣（たかな）る鼓动（こどう）に</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>呼吸（こきゅう）共鸣（あず）けて</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>この窓（まど）を蹴（け）って</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>駆（か）け出（だ）したら</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>手（て）にできると言（い）って</pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>いざなうのは</pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>远（とお）い 远い あの声（こえ）</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>眩（まぶ）しすぎた</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>あなたの手（て）も握（にぎ）って</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>求（もと）めるほど</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>堕（お）ちていくと</pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>分（わ）かっていた</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>それでも</pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>光（ひかり）を追（お）い続（つづ）けいくよ</pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>探（さが）したのは</pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"100\"></td><td><pre></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr></table></figure><h3 id=\"罗马音对照\"><a class=\"anchor\" href=\"#罗马音对照\">#</a> 罗马音对照</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ha ba ta i ta ra</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>(戻) もどらないといって</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mo do re na i to i~ te</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>(目指) めざしたのは</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>me za shi ta no wa</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>(苍) あおい (苍) あおい あのそら (空)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>a o i a o i a no so ra</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>(悲か) なしみはまだ (覚) おぼえられず</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ka na shi mi wa ma da o bo e ra re zu</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>(切) せつなさは (今) いまつかみ (始) はじめた</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>se tsu na sa wa i ma tsu ka mi ha ji me ta</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>あなたへと抱（だ）く この感情（かんじょう）も</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>a na ta he to da ku ko no kan jou u mo</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>今（いま）言叶（ことば）に変（か）わっていく</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>i ma ko to ba ni ka wa~ te i ku</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>未知（みち）なる世界（せかい）の 游迷（ゆめ）から目覚（めざ）めて</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mi chi na ru se ka i no yu me ka ra me za me te</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>この羽根（はね）を広（ひろ）げ 飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ko no ha ne o hi ro ge to bi da zu</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>ha ba ta i ta ra</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mo do ra na i to i~ te</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>目指（めざ）したのは</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>me za shi ta no wa</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>shi ro i shi ro i a no ku mo</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>tsu ki nu ke ta ra</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mi zu ka ru to shi~ te</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>fu ri ki ru ho do</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>a o i aoi a no so ra</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>a o i aoi a no so ra</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>a o i aoi a no so ra</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>爱想（あいそう）尽（つ）きたような音（おと）で</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>a i so u ~ tsu ki ta yo u na o to de</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>锖（さ）びれた古（ふる）い窓（まど）は壊（こわ）れた</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>sa bi re ta fu ru i ma do wa ko wo re ta</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>见饱（みあ）きたカゴは</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>mi a ki ta ka go wa</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>はら舍（す）てていく</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>ha ra su te te i ku</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>振（ふ）り返（かえ）ることはもうない</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>fu ri ka e ru ko to wa mo~na i</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>高鸣（たかな）る鼓动（こどう）に</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>ta ka na ru ko do~u ni</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>呼吸（こきゅう）共鸣（あず）けて</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>ko kyu~u a zu ke te</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>この窓（まど）を蹴（け）って</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>ko no ma do o ke~ te</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>to bi ta zu</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>駆（か）け出（だ）したら</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>ka ke da shi ta la</pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>手（て）にできると言（い）って</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>te ni de ki ru to i~ te</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>いざなうのは</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>i za na u no wa</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>远（とお）い 远い あの声（こえ）</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>to o i do oi a no ko e</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>眩（まぶ）しすぎた</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>ma bu shi su gi ta</pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>あなたの手（て）も握（にぎ）って</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>a na ta no te mo ni gi ~te</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>求（もと）めるほど</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>mo to me ru ho do</pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>a o i a o i a no so ra</pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>堕（お）ちていくと</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>o chi te i ku to</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>分（わ）かっていた</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>wa ka~ te i ta</pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>それでも</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>so re de mo</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>光（ひかり）を追（お）い続（つづ）けいくよ</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>hi ka ri o o i tsu zu ke i ku yo</pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>ha ba ta i ta ra</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>mo do re na i to i~ te</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>探（さが）したのは</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>sa ga shi ta no wa</pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>shi ro i shi ro i a no ku mo</pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>tsu ki nu ke ta ra</pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>mi zu ka ru to shi~ te</pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>fu ri ki ru ho do</pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>a o i aoi a no so ra</pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>a o i aoi a no so ra</pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>a o i a o i a no so ra</pre></td></tr></table></figure><h3 id=\"中文对照\"><a class=\"anchor\" href=\"#中文对照\">#</a> 中文对照</h3>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>如果振翅高飞的话</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>(戻) もどらないといって</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>我说过不会再回来的</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>(目指) めざしたのは</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>目标是</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>(苍) あおい (苍) あおい あのそら (空)</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>(悲か) なしみはまだ (覚) おぼえられず</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>还没能记住那份悲伤</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>(切) せつなさは (今) いまつかみ (始) はじめた</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>就开始了解到了苦闷</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>あなたへと抱（だ）く この感情（かんじょう）も</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>怀着对你的这份感情</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>今（いま）言叶（ことば）に変（か）わっていく</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>现在化作千言万语</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>未知（みち）なる世界（せかい）の 游迷（ゆめ）から目覚（めざ）めて</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>从未知世界的梦中醒来</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>この羽根（はね）を広（ひろ）げ 飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>展开翅膀 飞向天空</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>如果振翅高飞的话</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>我说过不会再回来的</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>目指（めざ）したのは</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>目标是</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>那雪白的 雪白的云</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>如果能够穿越的话</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>我知道能够找到</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>如果能够竭力摆脱</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>爱想（あいそう）尽（つ）きたような音（おと）で</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>用好像爱的回忆那渐尽的声音</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>锖（さ）びれた古（ふる）い窓（まど）は壊（こわ）れた</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>打破锈迹斑斑的旧窗户</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>见饱（みあ）きたカゴは</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>厌倦了过去</pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>はら舍（す）てていく</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>那就抛弃吧</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>振（ふ）り返（かえ）ることはもうない</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>已经再也不能回头</pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>高鸣（たかな）る鼓动（こどう）に</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>剧烈的心跳</pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>呼吸（こきゅう）共鸣（あず）けて</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>与呼吸共鸣</pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>この窓（まど）を蹴（け）って</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>踢开这扇窗户</pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>飞（と）び立（た）つ</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>飞向天空</pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>駆（か）け出（だ）したら</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>如果奋力奔跑</pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>手（て）にできると言（い）って</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>我说过我一定会做到</pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>いざなうのは</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>吸引我的事</pre></td></tr><tr><td data-num=\"96\"></td><td><pre></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>远（とお）い 远い あの声（こえ）</pre></td></tr><tr><td data-num=\"98\"></td><td><pre>那遥远的 遥远的声音</pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>眩（まぶ）しすぎた</pre></td></tr><tr><td data-num=\"101\"></td><td><pre>即使看不清楚</pre></td></tr><tr><td data-num=\"102\"></td><td><pre></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>あなたの手（て）も握（にぎ）って</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>只要握住你的手</pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>求（もと）めるほど</pre></td></tr><tr><td data-num=\"107\"></td><td><pre>追寻的是</pre></td></tr><tr><td data-num=\"108\"></td><td><pre></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"110\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>堕（お）ちていくと</pre></td></tr><tr><td data-num=\"113\"></td><td><pre>渐渐坠落的时候</pre></td></tr><tr><td data-num=\"114\"></td><td><pre></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>分（わ）かっていた</pre></td></tr><tr><td data-num=\"116\"></td><td><pre>我虽然也明白</pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>それでも</pre></td></tr><tr><td data-num=\"119\"></td><td><pre>即使如此</pre></td></tr><tr><td data-num=\"120\"></td><td><pre></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>光（ひかり）を追（お）い続（つづ）けいくよ</pre></td></tr><tr><td data-num=\"122\"></td><td><pre>追逐着光芒飞翔</pre></td></tr><tr><td data-num=\"123\"></td><td><pre></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>羽（は）ばたいたら</pre></td></tr><tr><td data-num=\"125\"></td><td><pre>如果振翅高飞的话</pre></td></tr><tr><td data-num=\"126\"></td><td><pre></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>戻（もど）らないといって</pre></td></tr><tr><td data-num=\"128\"></td><td><pre>我说过不会再回来的</pre></td></tr><tr><td data-num=\"129\"></td><td><pre></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>探（さが）したのは</pre></td></tr><tr><td data-num=\"131\"></td><td><pre>追寻的是</pre></td></tr><tr><td data-num=\"132\"></td><td><pre></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>白（しろ）い 白い あの云（くも）</pre></td></tr><tr><td data-num=\"134\"></td><td><pre>那雪白的 雪白的云</pre></td></tr><tr><td data-num=\"135\"></td><td><pre></pre></td></tr><tr><td data-num=\"136\"></td><td><pre>突（つ）き抜（ぬ）けたら</pre></td></tr><tr><td data-num=\"137\"></td><td><pre>如果能够穿越的话</pre></td></tr><tr><td data-num=\"138\"></td><td><pre></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>见（み）つかると知（し）って</pre></td></tr><tr><td data-num=\"140\"></td><td><pre>我知道能够找到</pre></td></tr><tr><td data-num=\"141\"></td><td><pre></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>振（ふ）り切（き）るほど</pre></td></tr><tr><td data-num=\"143\"></td><td><pre>如果能够竭力摆脱</pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"146\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"147\"></td><td><pre></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"149\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr><tr><td data-num=\"150\"></td><td><pre></pre></td></tr><tr><td data-num=\"151\"></td><td><pre>苍（あお）い 苍い あの空（そら）</pre></td></tr><tr><td data-num=\"152\"></td><td><pre>那蔚蓝的 蔚蓝的天空</pre></td></tr></table></figure>",
            "tags": [
                "songs"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/songs/myzl/",
            "url": "https://echidna-sxh.github.io/songs/myzl/",
            "title": "转动的命运之轮",
            "date_published": "2021-12-01T10:29:28.000Z",
            "content_html": "<h2 id=\"原歌词\"><a class=\"anchor\" href=\"#原歌词\">#</a> 原歌词</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>何故なの こんなに 幸せなのに</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>水平线を见ると 哀しくなる</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>あの顷の自分を远くで</pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>见ている そんな感じ</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>アレコレ深く考えるのは Mystery</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ほら 运命の人はそこにいる</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>星空を见上げて 笑颜 (ウインク) ひとつで</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>この高い所からでも 飞べそうじゃん</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>スピード上げ 望远镜を 覗いたら</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>未来が见えるよ</pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>何処に行けば 想い出に会える？</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>青い地球の ちっぽけな二人は</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>今も 进化し续ける</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>旅立つ时の翼は bravely</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>ほら どんな时も 幸运は待ってる</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>ずっと 君を见ていた</pre></td></tr></table></figure><h2 id=\"罗马音辅助\"><a class=\"anchor\" href=\"#罗马音辅助\">#</a> 罗马音辅助</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>u n me i no ru u re tto ma wa shi te</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>zu tsu tto kimi wo mi te i ta</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>何故なの こんなに 幸せなのに</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>na ze na no ko n na ni  shi a sen a no ni </pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>水平线を见ると 哀しくなる</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>su i he se n wo mi ru to ka na shi ku na ru</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>あの顷の自分を远くで</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a no ko ro no ji bu n wo, to u ku de </pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>见ている そんな感じ</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>mi te i ru so n na ka n ji</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>u n me i no ru u re tto ma wa shi te</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>アレコレ深く考えるのは Mystery</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a re ko re fu ka k  ka n ga e ru no ha Mystery </pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ほら 运命の人はそこにいる</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>ho ra u n me i no hi to ha so ko ni i ru</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>zu tsu tto ki mi wo mi te i ta</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>星空を见上げて 笑颜 (ウインク) ひとつで</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>ho shi zo ra wo mi a ge te u i n ku hi to tsu de</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>この高い所からでも 飞べそうじゃん</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>ko no ta ka i to ko ro ka ra de mo to be so u ja n</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>スピード上げ 望远镜を 覗いたら</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>su pi i do a ge bo u e n k yo u wo no zo i ta ra</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>未来が见えるよ</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mi ra i ga mi e ru yo</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>u n me i no ru u re tto ma wa shi te</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>何処に行けば 想い出に会える？</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>do ko ni i ke ba o mo i de ni a e ru</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>青い地球の ちっぽけな二人は</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>a o i chi k yu u no chi p po ke na fu ta ri ha</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>今も 进化し续ける</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>i ma mo shi na ka shi tsu zu ke ru</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>u n me i no ru u re tto ma wa shi te</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>旅立つ时の翼は bravely</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>ta bi ta tsu to ki no tsu ba sa ha Bravely</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ほら どんな时も 幸运は待ってる</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>ho ra do n na to ki mo ko u n ha ma t te ru</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>zu tsu tto ki mi wo mi te i ta</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>ずっと 君を见ていた </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>zu tsu tto ki mi wo mi te i ta</pre></td></tr></table></figure><h2 id=\"中文翻译\"><a class=\"anchor\" href=\"#中文翻译\">#</a> 中文翻译</h2>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>命运的转轮不停旋转</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>让我永远注视着你</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>何故なの こんなに 幸せなのに</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>我为何如此三生有幸</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>水平线を见ると 哀しくなる</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>看见地平线仍会心生悲喜</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>あの顷の自分を远くで</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>远远的回首过去的自己</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>见ている そんな感じ</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>无限伤感</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>命运的转轮不停旋转</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>アレコレ深く考えるのは Mystery</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>深入思考的只有 Mystery</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ほら 运命の人はそこにいる</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>命中的亲人就在这里</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>让我永远一直守候你</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>星空を见上げて 笑颜 (ウインク) ひとつで</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>仰望星空 流露笑脸</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>この高い所からでも 飞べそうじゃん</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>真想从高处飞奔而去，加快速度</pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>スピード上げ 望远镜を 覗いたら</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>用望远镜眺望 </pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>未来が见えるよ</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>看见未来在这里</pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>转动命运之轮</pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>何処に行けば 想い出に会える？</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>哪里能找到梦想</pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>青い地球の ちっぽけな二人は</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>青色的地球上</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>今も 进化し续ける</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>小小的我们 不断进化</pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>运命のルーレット廻して</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>转动命运之轮</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>旅立つ时の翼は bravely</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>张开翅膀 Bravely</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>ほら どんな时も 幸运は待ってる</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>无论何时幸运在等你</pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>ずっと 君を见ていた</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>让我永远一直守候你</pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>ずっと 君を见ていた </pre></td></tr><tr><td data-num=\"68\"></td><td><pre>让我永远一直守候你</pre></td></tr></table></figure>",
            "tags": [
                "songs"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/llzy/llzy/",
            "url": "https://echidna-sxh.github.io/llzy/llzy/",
            "title": "零落之羽",
            "date_published": "2021-09-11T08:29:28.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<h1 id=\"同剧本游戏下载链接暂停开发exe\"><a class=\"anchor\" href=\"#同剧本游戏下载链接暂停开发exe\">#</a> 同剧本游戏下载链接（暂停开发，exe）</h1>\n<h2 id=\"author-echidna\"><a class=\"anchor\" href=\"#author-echidna\">#</a> Author: echidna</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9wYW4uYmFpZHUuY29tL3MvMTFyaXpKRWEtYmt3d1YxSkliVnNQSkE=\">百度网盘</span> 提取码：1evz</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYWxpeXVuZHJpdmUuY29tL3MvU1R3UDRvSm4zeGs=\">阿里网盘</span></p>\n<h2 id=\"第一章-决断\"><a class=\"anchor\" href=\"#第一章-决断\">#</a> 第一章 决断</h2>\n<p>白色的世界，风暴包裹着一切，凛冽的寒气撕咬着大地，这里是南极正中心的一处洞窟。</p>\n<p>洞窟内，两个人影向着深处前进。</p>\n<p>“这个世代，终究走到需要奇迹来拯救这步了吗？”</p>\n<p>一个声音从男人的脑海深处中传出，没有人听见，除了他自己。</p>\n<p>“我想试试，那最后的可能性。” 男人开口。</p>\n<p>空气凝重，除了洞外的寒风呜咽，一个女人跟在他身后，默默注视着他。</p>\n<p>“那我再重复一句，即使你获取到原初的力量，也无力改变什么，个人的力量无法阻挡世界末路的洪流。这代人性发展至此，已经彻底失去未来了。如果是我，我会放弃这个世代，等待历史重启，不做没有意义的事情。”</p>\n<p>脑中的声音在劝说自己，男人迟疑，看向身后的女人。</p>\n<p>“到了最后的决定时刻了吗，弗莱”，女人走上前，抚摸着男人的脸颊。</p>\n<p>“雪莉 ————” 男人抱住女人，轻声地喊着她的名字。</p>\n<p>“我相信阴霾终会散去，‘恶’永远不会是人类的主旋律。” 女人抬起头，“如果你要成为黑暗中的那一束光，我会陪你一起，照亮世界，哪怕只有一隅。”</p>\n<p>一丝微笑从雪莉干裂的嘴唇边挤出，渗出了一点血丝。</p>\n<p>“这就是你的选择吗”，弗莱抚摸着雪莉的额头，释怀般地叹了口气，“已经决定好要拯救一切，结果到最后，优柔寡断的反而是我啊。”</p>\n<p>是的，我在犹豫些什么？</p>\n<p>这里，有我爱和爱我的人，纵然世界依然堕落，但单单是这份羁绊，我没有理由放弃。</p>\n<p>“你在外面等我吧。” 弗莱转过身，深吸了一口气，向前了几步，“老家伙，我决定了，这个世界，我会好好去拯救。”</p>\n<p>“不过是浪费时间罢了。” 脑中的声音再次响起，“力量是无法改变人心的，这点我已经亲身经历过了。不过既然你意已决，这把钥匙就拿去吧。”</p>\n<p>弗莱的脑中浮现出一长串不属于这个时代的文字，仿佛与生俱来一般烙印在了记忆里。</p>\n<p>“向前吧，我的记忆就封印在那里，解放它吧，让这股力量为你所用。”</p>\n<p>“我去了。” 弗莱向前走着，过去几个月至今的可怕回忆如走马灯般放映在脑海中，那是极为惨烈的核战争，直到现在，每分每秒，依然有人在痛苦中死去。</p>\n<p>“虽然已经和你说过几次，但我还是要再强调一下，我的力量维系着暗能黑洞，封印着无数暗能体，解放我的力量就意味着释放这些暗能体，世界的混乱会近在咫尺。”</p>\n<p>“但我必须拿到这份力量。” 弗莱此刻十分坚定。</p>\n<p>“力量吗？用现世的说法的话，你便是潘多拉魔盒的打开者。”</p>\n<p>这是一片深邃的通道，弗莱感觉到了有股无形的威压感，越往前，这种感觉越强烈。</p>\n<p>“潘多拉的魔盒，倒是挺贴切的比喻。” 弗莱继续向前，“不过现在只能放手一搏，没有什么比现状更糟糕的了。”</p>\n<p>脑子的声音并没有接话，弗莱已经走了隧道的一大半。</p>\n<p>“你的名字叫什么？上次你没回答我的。”</p>\n<p>“不是早说过这不重要了吗。”</p>\n<p>“接下来会和你一起度过很长的时间，不能一直叫你老家伙吧。”</p>\n<p>“......</p>\n<p>“撒拉弗。”</p>\n<p>“奇怪的名字，上一个世代的人都是这种名字吗。”</p>\n<p>“我的名字本身就没有什么意义。”</p>\n<p>“那，今后请多指教了，撒拉弗。”</p>\n<p>“...... 前面就是了。这是一个负荆的亡灵最后的确认，前面是暗能黑洞，由我的力量维系着。它封印着无数暗能体，足以从零开始毁灭世界，现在你为了取回我的力量，将要解开这道封印。”</p>\n<p>“没错，只有这样才能结束世界大战的灾难，人类此刻需要奇迹。” 弗莱眼神坚定。</p>\n<p>不放手一搏，放任战争继续，人类会自取灭亡。</p>\n<p>撒拉弗沉默了一会，欲言又止。</p>\n<p>但是，寄希望于奇迹并拿到这股力量的你，真的能成为救世主吗？还是说是新的灾难？这句话，撒拉弗没有说出口。</p>\n<p>撒拉弗并不想阻止什么，因为眼前的青年选择了和自己当年背道而驰的道路，究竟谁对谁错，答案他想自己见证。</p>\n<p>“我了解了，去吧。进入这个领域，记忆里的钥匙会解开封印，后面的事情就交给我吧。”</p>\n<p>隧道的尽头，一阵光亮，但却并不刺眼。</p>\n<p>眼前是一个完全不符合任何物理学定律的房间，不均匀的光线从外向内收敛，房间的正中心是一个极小的暗点。</p>\n<p>弗莱走了进去，暗点突然散化为耀眼的光芒，房间内的一切明暗两极反转，一股仿佛要吞噬一切的威圧感扑面而来，弗莱艰难地站着，勉强保持着意识。</p>\n<p>突然一阵更强烈的晕眩感袭来，仿佛身体被什么东西入侵一般，不受控制地抽搐。</p>\n<p>几秒钟后，这种感觉渐渐平息，弗莱强忍不适，睁开了眼睛。</p>\n<p>“你的暗能中枢已经载入我被封印的记忆了，接下来就交给我吧。” 撒拉弗说，“虽然只是补救的举措，但我会尽力捕获从这里释放的暗能体。”</p>\n<p>“嗯，交给你了。” 弗莱松了一口气一般。</p>\n<p>光芒中自己的意识逐渐下沉，撒拉弗的意识接管了身体。</p>\n<p>......</p>\n<p>究竟睡了多久，弗莱完全没有印象，在威压感最强的时候失去了意识，醒来时房间已经暗淡下去，如同一个普通的密室一般，仿佛这里一切都没有发生过。</p>\n<p>“哟，你醒了。” 撒拉弗的声音传了出来。</p>\n<p>“怎么样了？” 弗莱爬起身，坐在地上，手扶着头，显然眩晕感还没有完全消失。</p>\n<p>“大部分暗能体逃逸了，但捕获的暗能体个体都很优秀。比起这个，虽然我已经尽量控制了，但你的身体第一次使用暗能中枢就被我输出这么大的功率，没问题吧？”</p>\n<p>“还好。” 弗莱站起身，扶着墙向隧道外走去，弗莱只感觉全身像是火烧一般的刺痛，神经系统一片混乱。</p>\n<p>“不过你已经是羽化者了，身体状态应该会马上恢复。有个不太合时宜的话，大概再过不久，就会有大量暗能体觉醒了吧。”</p>\n<p>“这个早就做好思想准备了不是吗，当务之急，是先结束现在的战争，以后的事情慢慢想办法。”</p>\n<p>“也是，不过我在此之前已经说过很多次了，力量无法改变人心，而且即使你结束了战争，暗能体的问题也会是巨大的隐患。” 撒拉弗说，“你现在后悔也来不及了。”</p>\n<p>“...... 我不后悔。”</p>\n<p>没有什么可后悔的，因为不这么做，人类必然走向末路。</p>\n<p>如果人类因为我的选择而重新走向毁灭，那就让我来做那个罪人吧。</p>\n<p>“弗莱，你怎么样了 ————”</p>\n<p>不知不觉走到的隧道的入口，等待着的雪莉跑到弗莱面前，焦急地询问。</p>\n<p>“没事，雪莉。” 弗莱把手搭在雪莉肩上，大口地喘着粗气。</p>\n<p>“比起这个，我们走吧，去结束战争。” 弗莱抬头望着洞窟的出口的亮光。</p>\n<p>“嗯。” 雪莉支撑着弗莱，一步一步走出了洞窟。</p>\n<p>洞外的雪地上，狂风依旧在肆虐着朦胧的世界。</p>\n<hr />\n<h2 id=\"第二章-阿斯特雷亚的少年\"><a class=\"anchor\" href=\"#第二章-阿斯特雷亚的少年\">#</a> 第二章 阿斯特雷亚的少年</h2>\n<p>天使纪元五十年十月一日。</p>\n<p>卫星区的天空总是灰蒙蒙的，太阳和月亮都变得身影模糊，更没有星星的踪迹，远方主城区高耸入云的时钟塔或许是这里唯一的方向标。</p>\n<p>钟声响起，街道上，一个少女拉着红发少年的手。</p>\n<p>“我不会再让你消失了，我要守护好你，你是我重要的家人” 红发少年注视着少女。</p>\n<p>少女笑而不答，轻抚着少年的头。</p>\n<p>清风拂过少女的脸庞，长发舞动在少年的双眸。</p>\n<p>突然，天空骤暗，一双遮天蔽日的翅膀从云端坠落下来，场景被砸的支离破碎，少女在少年眼前逐渐虚化，握着的手也逐渐失去了实感。</p>\n<p>“姐姐！”</p>\n<p>洛从梦中惊醒，睁开眼，抬起头看见了熟悉的天花板，床头柜上还放着小时候和姐姐一起拍的照片。</p>\n<p>“是梦啊。”</p>\n<p>洛摇了摇头。</p>\n<p>“哥哥，再不起床要迟到了哦！”</p>\n<p>房间门被猛的推开，一个扎着双马尾的小女孩站在门外。</p>\n<p>“别忘了，今天可是开学日呢，可不能 ———— 诶，哥哥已经醒了啊，有进步哦！”</p>\n<p>洛转头看了看日历，是啊，今天是洛入学阿斯特雷亚高中的第一天。</p>\n<p>“早安，珈娜。”</p>\n<p>“早安，哥哥。” 珈娜吐了吐舌头，“校服的话，昨天晚上已经给哥哥收拾好了，放在这里了哦。”</p>\n<p>“啊～～总是被珈娜照顾。” 洛显然有点不好意思了。</p>\n<p>洛看了看靠近房间门的桌上放着的衣服，那是一个黑色的校服，左侧用结实的细绳挂着一个指头般大小熊，是珈娜做的吧，作为装饰倒也不赖。</p>\n<p>“那珈娜先走了，哥哥不要走错路哦，高中是在左边的。”</p>\n<p>“我知道啦。”</p>\n<p>洛迅速地准备好，拿起一块吐司面包，关上了门。</p>\n<p>“左边 ——”</p>\n<p>洛朝右看了看，珈娜的背影还没有完全消失，小跑着。看来为了叫洛起床，珈娜的时间有点紧张了呢。</p>\n<p>其实，珈娜并不是洛的妹妹，只是邻居而已，但却在洛搬来的第一天就这样亲昵地叫着，久而久之，洛也便接受了这样的关系。</p>\n<p>珈娜的父母因为工作调动的缘故，目前工作地点并不在这里。作为被珈娜父母照顾了好多年的回报，洛理所当然地承担起了珈娜监护人的角色。</p>\n<p>左边的路，对洛来说有点陌生。</p>\n<p>“姐姐......”</p>\n<p>洛在路上不断回想这这个梦。</p>\n<hr />\n<p>这个叫阿斯特雷亚的地方，是一个被划作卫星区的小城，抬头可见的灰暗天气，是这里的常态，这颗星球大部分面积被六合天使开发的叫做天使之翼的装置覆盖。</p>\n<p>曾经，世界被名为国家的体制划分为了许多个小块，后来出于不知名的原因，这些国家走上了全面战争这条自我毁灭的道路。阿斯特雷亚过去也属于这些国家中的一个，不过现在是六合天使组织下的一个卫星区。</p>\n<p>据说，六合天使为了阻止战争，消灭了所有国家，阻止了人类的毁灭，建立了天使秩序。</p>\n<p>卫星区吗？在这个地方长大，洛对这个词语再熟悉不过了。所谓的卫星区，就是主城区外的部分。这里的人，除了没有任何政治权利外，发展也处处受限，所谓生来就是被统治的人。</p>\n<p>而在阿斯特雷亚，卫星区的公民想要晋升主城区，只有考入阿斯特雷亚高中的卫星区分校并毕业这一条路可走。所幸洛的智力水平很高，以卫星区文试第一名的成绩考入了这所高中。</p>\n<p>其实，洛本来应该住在主城区，不过父母在十年前的一次科研事故中遇难，自己和姐姐便被远房亲戚送来了阿斯特雷亚生活，拜托给了珈娜的父母。</p>\n<p>而姐姐，也在五年前突然失去踪迹，毫无预兆。治安队帮忙找了几个月后也不了了之，只能以失踪结案。卫星区的治安相对主城区要差不少，尽管洛一直祈求姐姐的平安，但也很清楚姐姐凶多吉少。</p>\n<p>这当然是他最痛苦的两个回忆，这两件事，让洛变得孤身一人。</p>\n<p>洛正走着，隐约从身后感觉到了视线，也许是因为自己身上的校服吧，这所高中的校服辨识度是很高的，穿在身上很显眼，会是这个原因吗？洛正困惑着，经过一个暗巷时，偶然间一瞥。</p>\n<p>“那是 ——”</p>\n<p>洛看到四五个壮汉围着一个蓝发女生，手里拿着电话，似乎在威胁女生做什么事。女生个子不是很高，手提书包紧紧地被抱在胸前，背靠着墙，双瞳散发着恐惧的气息。那个校服，看来和洛一样是阿斯特雷亚高中的学生。</p>\n<p>抢劫吗？还是说？</p>\n<p>“看来是遇到麻烦了。”</p>\n<p>见死不救可不是洛的风格，而且要是真的万不得已，打架这方面，洛也还是有点信心的。</p>\n<p>洛深呼吸了一口气，向那边走去。</p>\n<p>“虽然不清楚发生了什么，但能不能不要为难一个高中生呢？” 洛伸出手试图把蓝发女生拉了出来，立刻感觉到了来自那一伙人的阻力。</p>\n<p>其中一个高个子小混混用力推开了洛，那个蓝发女生也疑惑地看着洛。</p>\n<p>“哼，不知道你是谁，但我们今天有事要这个家伙配合，识相就给我赶紧滚！”</p>\n<p>高个子一脸不耐烦，“要是没事找事，我可不管你是谁。”</p>\n<p>看来得来硬的了。</p>\n<p>事情演变成这样，洛也有所心理准备，虽然更擅长动脑，但在格斗方面洛的身手也并不算差，要对付眼前这个高个子倒也还有机会能打赢，可是对方有四个，一个高中生对付四个壮汉，再怎么说也太夸张了，只是，这事不能不管。</p>\n<p>也只有试试了，洛握紧了拳头。</p>\n<p>蓝发女生看着眼前这个陌生的红发少年，紫色的双瞳透露出无比的惊讶。</p>\n<p>“不用担心。”</p>\n<p>洛说着，向前走去。</p>\n<p>这场架，似乎是躲不掉了。</p>\n<p>“可以麻烦各位稍微暂停一下吗？”</p>\n<p>暗巷的入口，传来了女性的声音。不是巡逻队，因为巡逻队根本不可能来这种地方，而且 ——</p>\n<p>—— 这个声音，好熟悉。</p>\n<p>洛转过了头，像是电击般的一颤。</p>\n<p>站在那的，是一个带着帽子的女生，红发顺着帽子的边缘一直延伸到腰部，帽子是四叶草款式的，帽子的前沿遮住了眼睛，嘴角带着一丝笑容，双手插在红色的风衣两边，正慢慢向这里走来。</p>\n<p>不会错的，这个感觉，尽管多年没见，洛还是一眼认出来：</p>\n<p>“姐姐 ——”</p>\n<p>洛甚至不敢相信自己的眼睛。</p>\n<p>“是姐姐吗！”</p>\n<p>红发少女微笑着渐渐加快了步伐，最后径直冲过来，一把抱住了洛。</p>\n<p>“好久不见，洛。”</p>\n<p>红发少女抬起头，“比我要高了呢，七年前，我明明是比你高一头的呀！”</p>\n<p>“澪 —— 姐姐”</p>\n<p>这次轮到洛抱住姐姐，全然不顾状况，把脸埋在姐姐的肩上，“你这些年究竟？”</p>\n<p>澪抚摸着洛的头，“我会好好解释的，我这不是回来了吗，嘛，真是的，个子都长这么高了，爱撒娇的毛病还是和小时候一样啊～”</p>\n<p>“喂，这是演的哪一出？”</p>\n<p>那边的高个子不耐烦了，冲着两人怒吼。</p>\n<p>“解释的话等会再说，洛，这里先交给我好吗？”</p>\n<p>澪拍了拍洛的肩膀，转过身站在洛的前面，把帽子的前沿稍微抬了一点。</p>\n<p>“姐姐？”</p>\n<p>虽然这么说，但姐姐看上去也只是一个柔弱的女生啊。</p>\n<p>“嘛，相信姐姐好吗？”</p>\n<p>澪说完，双手插进风衣口袋，慢慢走到那群小混混身前。</p>\n<p>“哼，又是个女人了吗，虽然不是我的风格，但可不要以为我会下不去手！”</p>\n<p>高个子一阵不屑的语气。</p>\n<p>“事先说一句，你们应该感谢我及时出现，否则你们现在应该已经是四具尸体了哦。”</p>\n<p>澪轻轻抽出右手，指着高个子说。</p>\n<p>“混蛋，敢指着老子！”</p>\n<p>高个子一个箭步猛冲了过来，右拳向着少女腹部飞去。</p>\n<p>“姐姐！”</p>\n<p>洛担心地大叫，可下一个瞬间，他便发现这算是多余的。</p>\n<p>就像高个子男人突然收力一般，拳头稳稳地停在半空，可是看他那龇牙咧嘴的表情，说他收力是不可能的。</p>\n<p>“差不多可以了吧，要是引起骚动，我会很困扰的。”</p>\n<p>“你这怪物！”</p>\n<p>高个子怒吼着，左手从兜里抽出一把匕首，往澪的腰间刺去。</p>\n<p>“嘛，这可不好，怎么能用这么危险的东西呢？”</p>\n<p>话还没说完，高个子便瞬间中了一记膝击，飞了出去，匕首落在地上，发出了一阵清响。</p>\n<p>“所以说让你们收手嘛。”</p>\n<p>澪看了看躺在地上的那个人，捡起匕首，用三根手指轻轻捏断，就好像这个匕首是泡沫做的一般，但落在地上清脆的声音证实了这是货真价实的凶器。</p>\n<p>“所以说，你们还要继续吗，我可不建议这么做。”</p>\n<p>“你，你究竟是什么东西？”</p>\n<p>“哎呀哎呀，突然问一个女孩子这种问题，还真不想回答呢。”</p>\n<p>那三个人看着澪，谁也没有胆量冲上来，那对于他们来说只有一个选择了。</p>\n<p>“可恶，下次你就没这么好运了！”</p>\n<p>那群小混混对着坐在地上的蓝发女生抛下这句话，就抬着高个子一溜烟逃跑了。</p>\n<p>“姐姐，你 ——”</p>\n<p>目睹了这一切的洛不敢相信这是自己的姐姐。</p>\n<p>“很惊讶，是吗？”</p>\n<p>澪笑着看着一脸茫然的洛，</p>\n<p>“嘛，这个以后再说，我现在还有重要的事情要办，那我们就此暂别吧”</p>\n<p>“又要突然离开了吗？” 洛摇了摇头。</p>\n<p>“对不起啊，这些年一直我没有出现，不过我也有不得不这么做的原因。”</p>\n<p>澪走近了洛，踮起脚，在洛的额头上轻轻一吻，眯起了眼，看着脸微微泛红的洛。</p>\n<p>洛感到一阵温暖，一种失而复得的满足感充斥着洛。</p>\n<p>澪看着洛，把手放到洛头上。</p>\n<p>“好了，我差不多也要走了，不过，我们马上会再见的。”</p>\n<p>澪把帽子前沿拉了下来，准备走出小巷。</p>\n<p>“今天吗。哦对，还有，那个 ——”</p>\n<p>“嗯？”</p>\n<p>“你说的那句话是什么意思啊？”</p>\n<p>“哪句？”</p>\n<p>“为什么你不阻止，他们就会变成尸体？在你眼中的我 ———— 是这样的吗？”</p>\n<p>“哦，在意那个啊，还真是和小时候一样爱较真呢，洛当然不是这样的，只是 ——”</p>\n<p>“只是？”</p>\n<p>“只是他们要是敢让我可爱的洛受伤的话，我可是会杀死他们所有人的哦～～”</p>\n<p>澪回头眯着眼，微微一笑。</p>\n<hr />\n<h2 id=\"重逢茶会\"><a class=\"anchor\" href=\"#重逢茶会\">#</a> 重逢茶会</h2>\n<p>“那个，不好意思 ——”</p>\n<p>蓝发女生看着出神的洛，用手指碰了碰他。</p>\n<p>“哦，对不起 ，把你给忘了。” 回过神来的洛赶紧整理了一下表情。</p>\n<p>“对了，还没自我介绍呢，我叫艾因伦斯。洛，刚刚那位是我的姐姐，艾因伦斯。澪。”</p>\n<p>“我叫法瑟修。露易丝，阿斯特雷亚高中的新生，初次见面，谢谢你帮忙解围。”</p>\n<p>“不用这么客气的，我也是阿斯特雷亚高中的新生，就住在附近，看样子我们是同一个学校的呢。”</p>\n<p>“不只是同一个学校哦。”</p>\n<p>“啊？”</p>\n<p>“应该是一个班的吧。你的校徽上不是有写吗？”</p>\n<p>“是吗？我还没有注意到呢。”</p>\n<p>被露易丝这么一说，洛想起来了，校徽右下角好像有一串字母，那是代指班级吗？洛转过头费力的把右肩的字母念了出来。</p>\n<p>“SMSA 316，法瑟修同学的也是这个吗？”</p>\n<p>“是啊，真是巧呢，艾因伦斯同学。”</p>\n<p>洛好像突然想起了什么，看了一下手表。</p>\n<p>“糟了，再不快点就赶不上开学了！”</p>\n<p>“对不起，因为我的事害你耽搁了。”</p>\n<p>“都说不用介意了，快走啦！”</p>\n<p>“诶！”</p>\n<p>洛拉着露易丝的手臂，在树林里小跑着。</p>\n<p>“话说你为什么会在那种地方啊？”</p>\n<p>“唔 ——”</p>\n<p>“算了，现在的当务之急是赶上上课。”</p>\n<p>“其实，也不用这么急呀，听说我们班的负责老师是拉斯老师，不会来的很早哦。”</p>\n<p>“这种传言是不是真的先不管，这种开学仪式总不能迟到嘛！”</p>\n<p>“也是哦。”</p>\n<p>洛和露易丝于是加快了步伐，终于在铃声响起时到了教室外。打开教室门，学生们基本都到齐了，讲台还空着，这都不意外，毕竟快上课了，迟到的也是少数。</p>\n<p>“拉斯老师果然没有到啊。” 洛松了口气，突然发现气氛有些不对劲。</p>\n<p>“什么情况？”</p>\n<p>洛一脸茫然，回头看露易丝时，露易丝已经满脸通红。</p>\n<p>“那个...... 艾因伦斯同学，手 ——”</p>\n<p>洛这才注意到，在往这里赶的时候，自己抓着露易丝手臂的手已经渐渐往下滑，已经到快手牵手的程度了。</p>\n<p>“可以啊，洛。” 台下传来一个声音，洛看都没看，刚听到第一个字就知道说话的家伙是韦斯考特。约翰。</p>\n<p>但这个情况果然还是解释一下比较好。</p>\n<p>“那个，我们不是 ——”</p>\n<p>“两位同学请快点找位置坐下，已经上课了。” 拉斯老师从门外进来了。</p>\n<p>“虽然本校不反对学生恋爱，但请注意场合。”</p>\n<p>“我 ——”</p>\n<p>没有办法，天大的误会，只好以后找机会解释了。洛和露易丝赶忙在后排找了个位置坐了下来。</p>\n<p>漫长的开学宣讲中，洛注意到，露易丝一直心不在焉。</p>\n<p>“...... 阿斯特雷亚高中是卫星区通往主城区的大门，这里的学生一旦毕业，就获得了主城区的工作资格，这一资格在卫星区其实也是很好用的，毕竟有不少主城区的机构会外派人员到卫星区工作，就像这所学校的老师。但毕业并不需要考试这种制度，阿斯特雷亚高中使用推荐制，获得两名老师以上的推荐名额即可毕业，希望各位同学努力表现，展现出你可以胜任主城区工作的潜力.....”</p>\n<p>宣讲和开学仪式结束后，就是第一天的自由活动时间了，阿斯特雷亚高中的社团活动还是比较活跃的，第一天的剩下的时间基本上就是在给社团招新活动让路。洛对这些没什么兴趣，但约翰却吃完饭后就兴高采烈地拉着洛跑东跑西，时间不知不觉到了下午三点。</p>\n<p>“艾因伦斯同学，可以请你陪我一起参观校园吗？” 洛正在剑道社外，等里面的约翰打入社的排位战，露易丝找到洛低着头说。</p>\n<p>“这样啊，没问题啊。” 洛也不好拒绝。</p>\n<p>不过，这样难免误会会加深，不过既然露易丝不在意，那也就无所谓了。</p>\n<p>“那个，你有什么事情要说吗 ————”</p>\n<p>两个人一言不发的逛了大半个校园后，洛率先打破了沉默。</p>\n<p>“———— 就是你之前问我的那个问题，我为什么会在那个暗巷。” 露易丝的声音很小，就算是走在他身旁的洛也只能勉强听见。</p>\n<p>“其实，我不是阿斯特雷亚的人，我的父母是亚特兰提斯市的商人，因为一次商业上的疏忽而欠下了债务，为了让我躲避追债人，把我送到了阿斯特雷亚。”</p>\n<p>“所以，你会在那个暗巷，是被抓到了吗？”</p>\n<p>“嗯，就在上学的路上。”</p>\n<p>“这样啊，那确实是没办法呢。”</p>\n<p>“艾因伦斯同学是阿斯特雷亚的人吗？”</p>\n<p>“其实，我也是几年前搬来阿斯特雷亚的，不过应该算是吧，毕竟也住在这里好久了。”</p>\n<p>“这样啊，总之，谢谢你今天救了我，我以后会想办法报答你的。”</p>\n<p>“报答什么的就不用了，而且，这应该算是我姐姐的功劳吧。”</p>\n<p>“不管怎样，艾因伦斯同学还是有帮到很大的忙的。”</p>\n<p>“是... 是吗？” 洛挠了挠头。</p>\n<p>“谢谢，说出来之后好多了，那，接下来我也没什么事情了，我就先回去了，艾因伦斯同学应该还有别的事情吧。那就明天见吧。”</p>\n<p>露易丝指了指洛的身后。</p>\n<p>“嗯，明天见。”</p>\n<p>露易丝一脸轻松的样子转过身，向洛挥挥手。</p>\n<p>洛刚想回头看看，约翰就从身后扑住了洛。</p>\n<p>“几个月不见，居然是优先约会，而不是旁观好兄弟一展身手啊。”</p>\n<p>“误会而已，别想多了。” 洛不耐烦地摆了摆手，“而且砸馆子有什么好看的，你脸皮可真够厚的。”</p>\n<p>韦斯考特。约翰是附近剑道馆的继承人，而且实力已经在现任馆主之上了。</p>\n<p>“哈哈哈，居然说我砸馆子，我可是堂堂剑道馆出身，这种事我可是做不出来，我有收敛的。”</p>\n<p>约翰拍了拍洛的肩膀，“刚刚你人不见了，我就去你座位上找你人，人没找到，找到这个。”</p>\n<p>约翰掏出一封信交给洛。</p>\n<p>信？谁写的？</p>\n<p>信上四叶草形状的封蜡有些温馨感。</p>\n<p>洛打开了信封。</p>\n<p>“东巷 119 号，艾因伦斯。澪。” 是姐姐的信。</p>\n<p>“抱歉，约翰，我要先走了。”</p>\n<p>“看来是有事情要办啊，需要帮忙记得给我打电话。”</p>\n<p>“嗯，好，明天见。” 洛转身就往信上的地址走去。</p>\n<p>学校在西巷，距离信上地址跨越了小半个卫星区。</p>\n<p>“居然在这么偏僻的地方，东巷 119 号，是这里吧。”</p>\n<p>洛抬起头，是一个废弃的民宅。“这么破旧，就算说是天使纪元之前的建筑也毫不为过。”</p>\n<p>“有人吗 ？” 洛敲了敲门。</p>\n<p>几乎在敲门的瞬间，门打开了，一个身穿黑色风衣的侍者出现在了洛的眼前，“在下埃德尔恭候多时，洛阁下。”</p>\n<p>侍者摘下了帽子，洛这才发现，这个人，面色惨白，没有一点点血色，并且看起来十分衰老，但行动却很敏捷。洛不断回忆着自己听过的传说，该说像是吸血鬼呢，还是僵尸呢～</p>\n<p>“请不要介意，以在下的外貌示人实在有些失礼，还请阁下谅解。”</p>\n<p>“不，不是那回事。”</p>\n<p>洛为自己的以貌取人感到十分抱歉，再怎么说也不能把人想成那种怪物啊。</p>\n<p>“那么请跟随在下进屋等候，” 埃德尔戴上帽子，招呼洛进去，“伊瑟芙妮大人很快就会回来。”</p>\n<p>“伊瑟芙妮大人？”</p>\n<p>洛边走边疑惑，邀请自己的，不是姐姐吗？而且，这里面不开灯的吗？黑漆漆的一片，无底的黑暗让洛很不安心。</p>\n<p>“恕在下愚钝，还望见谅，可能对于阁下来说，艾因伦斯。澪大人这个本世代的称呼更亲切一些。” 埃德尔继续向前走着，突然停了下来。</p>\n<p>“阁下就在此处稍候片刻。” 埃德尔说完，四周忽然亮了起来，弄得洛有些睁不开眼。</p>\n<p>好不容易适应了光线，却发现埃德尔已经不见了。</p>\n<p>这种环境下还能行动自如的，这个老人是猫吗？</p>\n<p>“算了，这个先不管了。”</p>\n<p>洛找了个地方坐了下来，“伊瑟芙妮，这个名字是姐姐的？还有本世代是什么意思？姐姐为什么会在这种地方？”</p>\n<p>一连串的疑问涌了上来，“说起来，这地方也太诡异了吧。” 洛看了看四周，虽然有光线，但却完全找不到光源，仿佛是这片空气本身就是发光源，而且，这里根本没有称的上是墙壁的东西，自己只是在一个十分规则的四方体的光域里而已，四周除了黑暗一无所有，这是？</p>\n<p>“这超过科学范畴了吧！”</p>\n<p>洛站起来，向光与暗的分界处走去，想看个究竟。</p>\n<p>“阁下稍安勿躁，” 埃德尔从黑暗中走来，手里端着一盘子招待用的茶水。</p>\n<p>“澪大人已经快到门外了，在下即刻出门迎接。”</p>\n<p>埃德尔放下茶水，左手背在身后，消失在了黑暗中。</p>\n<p>洛越来越怀疑埃德尔是不是人类了，不过比起这个，洛很清楚地听到了的脚步声，是姐姐吗，脚步声越来越近。</p>\n<p>“埃德尔，怎么说也不必对我的弟弟使用视域限制吧。”</p>\n<p>“对不起，伊瑟芙妮大人，在下只是谨慎起见。”</p>\n<p>“你应该清楚他不可能是六合天使的人吧，还有，我叫艾因伦斯。澪，伊瑟芙妮这个名字我并不属于我，虽然改口很麻烦，但还请你努力。”</p>\n<p>“是的，艾因伦斯。澪大人。”</p>\n<p>洛隐隐约约听到了二人在交谈，但却连大概都没听出来，只知道声音越来越近。</p>\n<p>突然，洛身边的黑暗立刻消失了，整个空间瞬间亮了起来。惊讶之余，洛这才发现，这是一个巨大的房间，刚刚自己所看见的只是冰山一角。</p>\n<p>就在洛一头雾水的时候，房间门打开了，澪正如早上一样穿着红色的风衣，跑过来抱住了洛，洛感觉一股电流一样的东西经过了自己身体，但又瞬间消失了，洛也并没有在意。</p>\n<p>“诶，姐姐......”</p>\n<p>“抱歉啦，不过早上我要办的事情，现在差不多已经结束了，接下来姐姐的时间是洛的哦 ——”</p>\n<p>澪搂着洛，把头埋在洛的胸口上。</p>\n<p>洛满脸通红，不过应该是被勒的，毕竟澪的力气，洛已经见识过了。</p>\n<p>“哈哈哈，分开好久了，得好好聊会。” 澪松开了洛，拉着洛的手，“来，坐下谈吧。埃德尔，你可以出去了。”</p>\n<p>“是，伊 —— 艾因伦斯。澪大人。” 埃德尔鞠躬之后走出房间，关上了门。</p>\n<p>“好了，现在就我们两个人了，洛现在一定有很多话想问吧，不过在那之前，” 澪端起茶，递给了洛，“埃德尔没有吓到你吧。”</p>\n<p>“稍微有那么一点点 ——”</p>\n<p>洛接过了茶。</p>\n<p>“埃德尔虽然长相吓人了一点，其实是一个很可靠的人。” 澪喝了一口茶，“不过太谨慎往往也让人头疼啊。刚刚你应该看不到这个房间的全部吧，这是一个叫做视域限制的能力。”</p>\n<p>“我也知道跟姐姐一起他肯定不是坏人，但，视域限制？那是什么？”</p>\n<p>洛仿佛听到了不属于这个时代的词汇。</p>\n<p>“对于正常的人类来说，视觉器官只能捕捉到特定波长范围内的电磁波，这个世代的人类称这段电磁波为可见光，然后人类通过将不同波长的可见光表现为各种颜色，才形成视觉这一感官。”</p>\n<p>“嗯，这我知道，可这和你说的视域限制有什么联系呢？”</p>\n<p>“如果有人可以操纵一片区域内的电磁波波长，是不是就可以限制人的视觉了呢？”</p>\n<p>“这...... 做的到吗？”</p>\n<p>洛不可思议地看着姐姐，这确实超出洛的认知太远太远。</p>\n<p>“埃德尔就做得到，基于这个前提，洛也应该能理解视域限制的原理了吧。”</p>\n<p>“这样倒可以理解，但居然能控制电磁波，如果这是真的，埃德尔还是人类吗？”</p>\n<p>姐姐所说的，洛还是不敢相信，毕竟人能随心所欲控制电磁波简直是天方夜谭，可这又似乎是自己所看见的现象最合理的解释。</p>\n<p>“不是哦。”</p>\n<p>“诶？”</p>\n<p>“最简单的一点，埃德尔的基因被人为修改过，从生物学的角度来讲，他不属于人类这个物种哦。”</p>\n<p>“这样啊。”</p>\n<p>面对这样一个震惊的事实，洛反倒表现地不是那么惊讶，多了埃德尔拥有超过人类的能力这个前提，至少这一切讲的通了。</p>\n<p>洛突然想到，坊间传闻的一些离奇的犯罪案件，莫非是有这种力量参与？</p>\n<p>可是现在问题是姐姐为什么会不告而别，又为什么会和这样的人在一起？这几年姐姐身上发生了什么？还有伊瑟芙妮这个名字是怎么回事？莫非？洛刚想着，抬头却看见了一反常态的澪。</p>\n<p>“那么，既然知道了这些，洛对于埃德尔的看法有没有什么改变？” 澪放下了杯子，注视着洛，跟之前活泼的态度截然相反，言语里带着些许不安，“比如，他这样的‘人’不该存在之类的想法？”</p>\n<p>“没有。” 洛斩金截铁，“没人可以否定他人存在的意义。”</p>\n<p>澪像是松了一口气，脸上又浮现出平时的笑容，重新拿起了茶杯。</p>\n<p>“洛还是一如既往的可爱呢！”</p>\n<p>“我...... 只是把自己的想法说出来了而已 ——”</p>\n<p>“这样的话，我就放心了。”</p>\n<p>“放心？” 洛似乎已经知道姐姐接下来想说什么了。</p>\n<p>“我想你大概已经猜到了”，澪把脸凑近了洛，“艾因伦斯。澪，你的姐姐，也是一样哦。”</p>\n<hr />\n<h2 id=\"朦胧的真相\"><a class=\"anchor\" href=\"#朦胧的真相\">#</a> 朦胧的真相</h2>\n<p>“这样啊”，尽管从现在的情况来看，自己已经猜的八九不离十，但从姐姐那里亲耳听到这样的话，洛还是感受到了惊讶。</p>\n<p>“我离开的这几年，发生了好多事。姐姐现在是作为一种名为羽化者的存在。” 澪坐回了座位上，“从刚刚到现在，我说的话，都是真的哦。”</p>\n<p>“羽化者......” 洛好像听说过这个词语，稍加思索，“那个拯救了世界的六合天使组织好像也是这么自称的。”</p>\n<p>可洛却想不起来是在哪里听说的，似乎是父母还在的时候。</p>\n<p>“拯救世界？” 澪一反常态的冷笑，“不过这也难怪，毕竟是对整个地球宣布了主权的组织，会做出这方面的宣传也很正常。”</p>\n<p>“不是吗？” 洛不解。“难道另有隐情？”</p>\n<p>“从结果上来看，六合天使确实终止了第三次世界大战”，澪叹了口气，“不过，也可以换个说法，六合天使打赢了世界大战，占领了全世界。”</p>\n<p>“......”</p>\n<p>“身在卫星区的你应该明白吧，卫星区是为了服务主城区的存在，无法进入主城区的人只是‘燃料’。”</p>\n<p>这点洛明白。</p>\n<p>“这算是拯救世界吗，这是人们想要的结果吗？” 澪坐了下来，端起了茶杯。</p>\n<p>“但，六合天使的出现阻止了战争这一点应该没有错吧，这场战争似乎确实会毁灭世界。”</p>\n<p>“那么，你有想过为什么会有这场战争吗？”</p>\n<p>“这......” 洛确实不知道，自己接受的历史从来没有提到过这一点，这方面的资料也十分稀少。洛也曾想过为什么会有这场灾难性的战争，以及这场战争为什么会有毁灭人类的能力，洛只能推测到可能是人类争夺的本性导致了战争。</p>\n<p>换句话说，历史出现了断层，毕竟胜利者拥有历史的定义权，六合天使灌输的历史可能掺杂有虚假。</p>\n<p>“我也不知道，” 澪喝了一口茶，“准确来说，我还没有准确的证据。只不过从我的角度推断，我认为这场战争的始作俑者就是六合天使，他们启动了战争，等战争发展到一定程度的时候出手结束战争，夺取了全世界。”</p>\n<p>“这样的吗......” 洛还没有想过这种可能性，只不过六合天使的执政确实让卫星区承载了太多的苦痛。</p>\n<p>“哈哈，话题不小心严肃了起来，” 澪放下茶杯，放松了表情，“回到羽化者这个话题吧。”</p>\n<p>“所以，羽化者就是所谓的超越科学的能力者吗？” 洛小时候也听说过六合天使组织成员的一些故事，包括瞬间让战场上全部炮弹哑火、用超能力中断核聚变，甚至有传言说包裹整个地球的天使之翼是来自其一个成员的能力。</p>\n<p>“羽化者确实有特殊的能力，基因也是必然会被重新编辑，但超越科学，这个说法本身是错的。” 澪纠正，“这只是这个世代的的科学还没有触及的部分而已。包括埃德尔的能力，我的能力，六合天使的能力，以及所有羽化者的能力，都是来自于科学的。”</p>\n<p>“来自未来的科学？”</p>\n<p>“来自过去的科学。”</p>\n<p>“过去？”</p>\n<p>“嘛，虽然解释起来很麻烦，但至少有一点希望洛能够明白，那就是，目前的人类文明，不是第一个人类文明，就地球的寿命而言，也不会是最后一个人类文明。”</p>\n<p>“也就是说，姐姐的能力，来自于史前文明？” 洛干脆将现有的概念抛的一干二净，这样交流起来似乎更容易，事实也正是如此。</p>\n<p>“不愧是洛，这么快就理解了，就是这么一回事。” 澪表扬似的摸了摸洛的头，“其实更深一步讲，羽化者的能力来自于叫做暗能中枢的东西，这是依托于人类大脑皮层，与生俱来却被关闭的器官，激活后可以控制各种形态的的能量传递方向，甚至可以凭依一个独立的人格，叫做暗能体。顺带一提，暗能就是能量转换的中间态，这也是羽化者能力的根本来源。”</p>\n<p>能量传递是以暗能为中间物质的，一种能量想要转化为另一种能量，必定会先解构为暗能，然后重组为其他形式的能量，这也是暗能中枢的工作原理，通过干涉能量转化的两个阶段，实现能量传递的定向化。</p>\n<p>“控制能量传递方向？这种打破热力学第二定律的技术，有可能吗？” 洛心想。</p>\n<p>可洛现在也不得不相信，毕竟埃德尔的能力就在眼前。</p>\n<p>想不到曾经的地球还有一个这样强大的文明。</p>\n<p>可是为什么那样的文明，会在地球上消失？究竟发生了什么足以摧毁这种程度文明的力量？洛很是不解，不过现在最重要的，是姐姐身上到底发生了什么。</p>\n<p>“所以，五年前姐姐不告而别，是和这个有关吗？”</p>\n<p>“是的。” 澪抬头望向窗外，“五年前，埃德尔找到了我，激活了我的暗能中枢，并给予了我暗能体。后来，我又遇到了一个叫沃卡斯的人，他是一个特殊组织的首领，是埃德尔给我引荐，他告诉了我这个世界的真相，以及 ————”</p>\n<p>澪想说，父母死亡的真相，但话到嘴边，又咽了下去。</p>\n<p>“所以姐姐就是在那之后有了这样的能力？”</p>\n<p>“差不多就是这么一回事，嘛，虽然过程没那么简单就是了，不过具体的情况现在也不必急着告诉你。”</p>\n<p>“那姐姐为什么要离开，” 洛终于问出了最想问的问题，“难道羽化者 —————”</p>\n<p>洛的话还没说完，埃德尔就敲开了门。</p>\n<p>“艾因伦斯。澪大人，菲利斯。李斯菲特小姐到了。”</p>\n<p>“知道了。” 澪慢慢站了起来，“嘛，虽然还有很多想说的话，但今天就到这里吧，时间也不早了，再待下去，那个叫珈娜的小女孩怕是要着急了吧。”</p>\n<p>“可是 ————” 洛还有很多问题。</p>\n<p>但看了看姐姐坚毅的眼神，他决定相信姐姐，那就不问了。</p>\n<p>“关于羽化者的剩余问题下次再说好吗？姐姐现在也有很重要的事情要办。” 澪拍了拍洛的肩膀，“今天的事情，不要告诉其他人，这是为了姐姐的安全。”</p>\n<p>“这倒是没问题。”</p>\n<p>“嗯，还有就是，不要过分信任六合天使。那么再见了。” 澪拥抱了一下洛，“埃德尔，送洛回去。”</p>\n<p>没办法了，不过，今天知道的事情已经够多了，而且，姐姐今天刻意向我透露出一些事情，又有些事情不愿说明，是有什么苦衷吗？</p>\n<p>洛走出房间的时候，和一个白发少女擦肩而过。这个女孩的头发几乎快到膝盖，纯净的雪白色，像是瀑布一般。洛回头时，那个少女也看了他一眼，和她那血红色的双眼对视了零点几秒，那一瞬间，洛感觉到她眼神中有着本不属于这个年龄女孩的寒意，气势上的一股威压感让洛不寒而栗，立刻把头转了回去。不过洛也没有时间多想，时间确实也不早了，再不回去，恐怕珈娜真的要担心了。</p>\n<p>“四点五十九，挺准时，我以为你会晚点到。” 澪招呼着银发少女。</p>\n<p>“这可不是我的作风。刚刚那个小鬼就是你的弟弟？” 白发少女坐在了澪的对面，恰好就是刚刚洛所坐的地方。</p>\n<p>“是的。” 澪也坐了下来，“嘛，你觉得怎么样，伊斯坦娜？”</p>\n<p>“就那个人对他的期望程度而言，我觉得没有达到我的预期程度。” 银发少女面无表情，“还有，我想我应该已经告诉你我的名字了，请你用那个称呼我。你知道我并不喜欢交换出伊斯坦娜。”</p>\n<p>“虽然原因不太一样，但我们倒是某种意义上的一致呀，” 澪递给了白发少女一杯茶，“菲利斯 - 李思菲特。”</p>\n<p>“那么废话不多说，那两件事情办的怎么样了？” 银发少女把茶杯放下，用手指轻点一下，热气腾腾的茶水瞬间失去了温度，甚至可以看到些许冰渣漂浮在表面。少女这才重新端起来，喝了一点。</p>\n<p>“哎呀，下次给你准备好冰镇的茶吧。”</p>\n<p>“无所谓，这样就好。”</p>\n<p>“那么就进入正题吧。第一件事，佯攻已经完成，调虎离山成功了，至少 12 小时内我们的人行动没有危险，不过在那之后六合天使可能会派来更大的兵力，风险会增加。另外，行动过程没有发现‘帕瓦斯’的行踪，根据线人的情报，她正在亚特拉提处理那边的反抗军问题。” 帕瓦斯是六合天使的核心成员之一，也是活动迹象最频繁的核心成员。</p>\n<p>提到‘帕瓦斯’这三个字，李斯菲特冷若冰霜的神情明显有了变化，紧咬牙关，握在手里的陶瓷茶杯明显的绽开了裂痕，茶杯里的水也瞬间完全凝固，茶杯口冒着白烟，澪甚至可以从李斯菲特周围的空气中感觉到刺骨的寒冷。</p>\n<p>“你，没事吧～”</p>\n<p>“没有，请不要介意。” 李斯菲特似乎意识到了自己的失态，“大体敌情我已经了解了，那么第二件事情，确认好了吗？” 李斯菲特周围的气温正慢慢变得正常。</p>\n<p>“确认好了。”</p>\n<p>“结果如何？”</p>\n<p>“洛..... 不能成为暗能体的适配者。”</p>\n<p>“‘不能’吗？” 李斯菲特淡淡的回应，“既然‘不能’，那样也没办法了，没想到那个人也有看走眼的时候啊，不过......”</p>\n<p>李斯菲特凑到了澪的耳边，“你这句话的意思应该是，‘我不能让我弟弟成为暗能体的适配者’吧？”</p>\n<p>“你在说什么呢，” 澪苦笑着说，“不能就是不能啊。”</p>\n<p>“知道了，那么，” 李斯菲特站起身，“告辞。”</p>\n<p>“李斯菲特真是跟外在不一样的急性子呢，不再坐一会吗？”</p>\n<p>“还不明白吗，澪小姐，阿斯特雷亚的情形十分严峻，虽然今天你的表现确实不错，但是你现在已经暴露了，从现在开始敌人可不再会是这种水平，明天还有一场佯攻，如果敌人你应付不来，你和莎莉的结局会是怎样你应该明白吧。”</p>\n<p>“这倒也是，” 澪叹了口气，和眼前这个天才少女不一样，作为不能完全使用暗能中枢的羽化者，澪的能力确实说不上很强，至少面对六合天使的唤名羽化者，是毫无还手之力的。</p>\n<p>“所以在我走之前给你两个选择，一是提高你自己的实力，这样或许可以在阿斯特雷亚站稳脚，第二个选择，想必你也很清楚吧，多一个战力，就可以多一分希望。” 李斯菲特留下这样几句话便离开了。</p>\n<p>“第二个选择 —— 吗？”</p>\n<p>听着李斯菲特仓促的脚步声越来越远，澪瞬间明白了自己的处境，怅然若失的站在房间里。埃德尔推门进来，准备把茶水端出去。</p>\n<p>回想起刚刚在这里的洛的身影，澪闭上了眼睛，下定了决心。</p>\n<p>“埃德尔，我打算立刻唤醒伊瑟芙尼。”</p>\n<p>埃德尔愣住一会儿，继而摇了摇头。</p>\n<p>“艾因伦斯大人，还不到时候。”</p>\n<p>“—————— 我知道”</p>\n<p>据埃德尔所说，澪对于伊瑟芙尼的适配度并不高，其暗能体的觉醒需要特化重构暗能中枢，这需要大量时间，目前进度刚破 80%。因此，澪一直以来都是只在沃卡斯的指导下，进行了最简单的暗能中枢的使用学习，再无法深入。</p>\n<p>没有伊瑟芙尼的协助，自己无法发挥出暗能中枢的大部分功能，只能使用最基本的身体强化和少量动能转化，而这个动能系暗能中枢所能做到的事情远不止如此。</p>\n<p>澪强忍着泪水，向地面猛地一拳，地板瞬间塌陷了一大块。</p>\n<p>前些天接到的两个任务，一个是突袭六合天使在阿斯特雷亚的分部，给组织在另一个卫星区的行动做佯攻，另一个，就是考量沃卡斯所看中的人能不能成为羽化者 ———— 那个人就是洛。</p>\n<p>刚刚拥抱的同时，澪将洛和暗能体做了匹配，结果显示，洛是完美适配体，就像是天生的容器一样，完美到理论上可以迅速容下几乎任何唤名暗能体，而作为对比，自己和伊瑟芙尼已经进行了五年的适配，依然没有完成。</p>\n<p>“居然是这样高的适配度......” 澪从怀中拿出一个小小的盒子，这是沃卡斯交给她的仪器，数据从此得来。</p>\n<p>“艾因伦斯大人对于弟弟的关心在下也理解，可是伊瑟芙尼大人就算在唤名暗能体中也是最为复杂的存在之一，倘若不完成暗能中枢的重构，唤醒的瞬间伊瑟芙尼大人的人格就会从暗能中枢溢出，挤占本属于您的人格位置，伊瑟芙尼大人的人格过于强大，您的人格将有可能不复存在。” 埃德尔冷静地分析。</p>\n<p>“可是，就算这样，要让洛放弃现在的平静的生活，来和六合天使作对，我，我做不到...... 我已经因为六合天使失去了父母，不能再失去洛了。”</p>\n<p>洛和澪，并非亲生姐弟，洛是在很小的时候被父母收养的。这点洛不知道，但澪很清楚。虽然如此，洛依然是澪在这个世界上唯一的亲人。</p>\n<p>“请相信您的弟弟，我认为可以将实情全部告诉他，由他自己来做选择。毕竟，有着这样的适配度，就算您不告诉他真相，六合天使的人也迟早发现并会找上他的。”</p>\n<p>是的，六合天使也在不断搜索潜在的羽化者，对于他们来说，是在消灭潜在的威胁吧，或许这么想，让洛获得自保能力才是上策。</p>\n<p>“我......” 澪犹豫着站了起来，“让我再想想。”</p>\n<p>“希望您可以做出最理智的判断。” 埃德尔收拾了茶具，走了出去。</p>\n<p>澪走向窗边，外面的天气依旧是灰蒙蒙的，远处的钟声响起，大概是到了晚上 6 点了。澪打开窗户，并没有风吹进来，也是，被天使之翼包裹的卫星区，很难有气压差，没有风才是正常。只是，澪也没有心情去深究这些，她现在能做的，真的很少。</p>\n<p>“洛，请原谅姐姐的无能...... 父亲，母亲，我该怎么办 ————” 澪无助地趴在窗台上。</p>\n<hr />\n<hr />\n<h2 id=\"暗流涌动\"><a class=\"anchor\" href=\"#暗流涌动\">#</a> 暗流涌动</h2>\n<p>太阳快下山了，尽管走道没有灯光，洛却觉得比来时要亮不少，是因为解除了视域限制吗？洛虽然也是见怪不怪的人，但这一天对他来说，还是太不寻常了，要立刻接受还是有些勉强。</p>\n<p>走出了大门，洛回头看了一下东巷 119 号这栋古老的建筑，落日中映衬出了一股厚重感，破旧的感觉荡然无存。夕阳西下，霞光中，洛的背影随着这栋房子一起融入了黑暗。</p>\n<p>洛的家在卫星区的北边，距离东巷不算太远，洛走在路上，不断思索着姐姐的事情。</p>\n<p>路程过半，突然，洛感觉左侧出现了一团黑影，同时脖子被从身后的某样东西击中，身体一下子麻木，向前倒向地面。</p>\n<p>失去意识的前一瞬间，洛的余光扫到了地上的影子，看起来是个女人的身形。</p>\n<p>在确认洛的状态后，一个戴着面罩的女人蹲了下来，左手拿着一把手枪一样的东西，贴紧洛的后脑，扣动了扳机。</p>\n<p>但却并没有发射出子弹，甚至没有撞针的声音。</p>\n<p>看着昏迷的洛，戴着面具的女人用手在洛的背上比划出了一句话，“一直以来，抱歉了。”</p>\n<p>说完，瞬间消失不见，就好像这里从来只有洛一人一般。</p>\n<p>时间一分一秒地过去，等洛醒来，太阳已经下山了。</p>\n<p>洛摸着脖子站起身，感觉身体有些异样，却又说不出来那里不一样，检查了一下身体，并没有哪里受伤，东西也没有少。</p>\n<p>奇怪了，难道是幻觉？也是，这几天休息确实比较差。</p>\n<p>洛仔细摸了摸脖子，没有任何痛觉，完全不像是遭受重击后的样子。</p>\n<p>“那我看到的到底是什么？” 洛对自己模糊的记忆产生了怀疑，摇了摇头，看见了断裂在地上的小熊。“我记得，这个小熊是珈娜送我的吧。”</p>\n<p>洛检查了一下校服，系着小熊的细绳不知何时断裂，“糟了，是摔倒的时候弄坏了吗？希望珈娜不要生气 ————”</p>\n<p>洛已经可以想象珈娜鼓起腮帮的样子了。</p>\n<p>“虽然有些奇怪，不过想再多也没用，再不回去，珈娜要担心了。”</p>\n<p>洛看了看时间，已经快晚上七点了。</p>\n<p>洛把小熊揣在兜里，加快脚步向家的方向。</p>\n<p>“我回来了！”</p>\n<p>洛打开自己家虚掩着的门，换上了拖鞋。</p>\n<p>“真的是太晚了，哥哥！” 客厅里看着电视的那个叫珈娜的女孩朝着洛嘟哝了一句，“肚子都饿扁了。”</p>\n<p>“抱歉抱歉，因为一些事情耽搁了，” 洛走进了厨房，打开电饭煲，盛出两盘子温热的米饭，淋上路上买的热菜，端到餐桌上，“今天没多少时间准备，就凑合着吃吧？”</p>\n<p>“也可以啦。” 珈娜从沙发上一路蹦过来，“那我不客气了。”</p>\n<p>“鸠斯叔叔和简阿姨还是没有说要回来吗？”</p>\n<p>“唔 —— 爸爸和妈妈的话，” 珈娜费力的咽下满嘴的食物，“工作比较忙，暂时都还没有回来的计划。”</p>\n<p>“真是的，慢点吃嘛。” 洛从冰箱里拿出一瓶水递给了珈娜，“喝点水吧，不够的话电饭煲里还有一些。”</p>\n<p>查理曼。鸠斯和查理曼。简是珈娜的父母，在洛刚到卫星区的时候照顾过洛一段时间，半年前突然离开了家，珈娜说是工作调动的缘故，但留下一个十二岁的小女孩独自生活，洛也实在无法理解。</p>\n<p>不过，眼前这个女孩，虽说是十二岁，但是却出乎意料地生活自理能力极强，甚至还能照顾到洛，但说她成熟吧，总是以名字称呼自己，这一点上甚至又回退到了牙牙学语的的阶段，有些许的违和感。</p>\n<p>而且，珈娜对自己父母的事情似乎也不是很关心，父母不在的这半年里，洛很少听她主动提起父母。</p>\n<p>“吃完啦！” 只过了一小会，珈娜眼前的盘子便空空如也，珈娜抽出纸巾抹了抹嘴。</p>\n<p>“都说不要吃这么快了，对消化不好的。” 洛无奈的摇了摇头，“稍微休息一会再去洗澡吧，热水还要再过一会。”</p>\n<p>洛的胃口并不好，给自己盛的饭并不多，所以也差不多吃完了。</p>\n<p>“那个，珈娜，你给我的小熊被我不小心弄断了，抱歉啊。” 洛这时才突然想起来这件事，从口袋掏出了一个略沾尘土的小熊。</p>\n<p>“唔 ————” 珈娜脸上闪过一丝难以描述的表情，但又瞬间变回了笑脸，“没事，过几天给哥哥做一个新的。”</p>\n<p>“比起这个，等热水的工夫，正好我还有功课要做呢。”</p>\n<p>“开学第一天就有功课啊？”</p>\n<p>“对啊，新老师让我们每天都要写日记，记录生活。”</p>\n<p>“日记呀，你打算写什么呢？”</p>\n<p>洛拿起桌子上自己的水杯，喝了点水。</p>\n<p>珈娜想了一会，突然露出了谜之笑容。</p>\n<p>“那 —— 就写 ——‘洛哥哥的高中生活第一天’。”</p>\n<p>“噗～” 洛差点把嘴里的水喷出来，“干嘛写我呀，写你自己不好吗？”</p>\n<p>“有什么关系嘛，反正也是写。”</p>\n<p>“那你要怎么写呀，你又没跟着我去学校。”</p>\n<p>“所以就需要哥哥配合一下了，” 珈娜拉着洛的手撒娇，“讲一讲今天的事情嘛，珈娜也很好奇高中生活是怎样的。”</p>\n<p>“日记这种东西怎么能写别人的事情呢？”</p>\n<p>“好不好嘛 ————”</p>\n<p>“真拿你没办法，” 洛摇了摇头，“那先等我把盘子之类的洗了吧。”</p>\n<p>“嗯！”</p>\n<p>珈娜蹦蹦跳跳回到了客厅的沙发上又看起了电视。</p>\n<p>其实洗盘子也只是一个借口，洛正在脑海中构思一个正常的开学第一天，这种离奇的事情，还是不要告诉珈娜比较好。</p>\n<p>不知不觉，盘子都洗了好几遍。</p>\n<p>“这里要洗的东西有点多，不过马上就好。你先洗澡吧。”</p>\n<p>“嗯 ———— 好 ————” 无人注意到的珈娜此时表情僵硬，与刚刚活泼的样子判若两人。</p>\n<p>......</p>\n<p>“哇，没想到韦斯考特哥哥也在啊。”</p>\n<p>“倒是让我很意外，没想到你会认识约翰。”</p>\n<p>“去年他不是来过哥哥家里吗，我就顺便认识他了啊。”</p>\n<p>“珈娜的记忆原来这么好啊，一直没发现。”</p>\n<p>“那哥哥也太迟钝了吧，连自己妹妹的才能都看不见。”</p>\n<p>“是是是，” 洛假装赔礼道歉的样子，“那么现在可以去睡觉了吗，外面已经快 10 点了啊，明天可不是周末”</p>\n<p>“嗯，说起来是有点困呢，那么晚安，哥哥。” 珈娜放下手中的笔，打了个哈欠，瞥了一眼洛挂在外面的校服，回到了自己的家。</p>\n<p>洛松了口气，总算是蒙混过去了。</p>\n<p>“我也差不多该洗澡睡觉了，今天确实也蛮累人的。”</p>\n<p>洛伸了个懒腰，向浴室走去。</p>\n<p>躺在床上，洛的思绪终于回到了今天发生的种种事情上。姐姐还有很多事情没有告诉自己，并不完全是因为时间来不及的关系，而是暂时不打算告诉自己。</p>\n<p>羽化者。洛现在隐约想起来，自己在小时候确实偶尔在父亲那边听到过这个词语，当时并没有在意，会和父亲的研究有关吗？洛不得而知。</p>\n<p>总之，最重要的一点，姐姐还活着。</p>\n<p>这比任何其他事都要重要。</p>\n<h2 id=\"暴风雨前的平静\"><a class=\"anchor\" href=\"#暴风雨前的平静\">#</a> 暴风雨前的平静</h2>\n<p>第二天早晨，珈娜早早的就叫醒了洛。</p>\n<p>“真是的，就不能让我多睡一会吗？”</p>\n<p>洛揉了揉惺忪的眼睛，抱怨道。</p>\n<p>昨天晚上睡的并不好，甚至有没有真正睡着过，洛都不太确定。</p>\n<p>“已经不是假期了哦。” 珈娜哼了一声，“昨天差点迟到不是吗？”</p>\n<p>昨天确实差点迟到，虽然不是出门太晚的缘故了。法瑟修的那件事昨天没有跟珈娜说，所以差点迟到这件事只能用出门晚来解释了。</p>\n<p>洛很不情愿地从床上下来，开始换上校服。</p>\n<p>奇怪，明明昨天没怎么运动，为什么会有全身酸痛的感觉？</p>\n<p>洛揉了揉脖子，感到头也有点眩晕感。</p>\n<p>“那，我先走喽。” 珈娜监督洛起床后，和昨天一样先出发了。</p>\n<p>“好，路上小心。”</p>\n<p>“嗯。” 珈娜轻巧地回应着。</p>\n<p>距离上学还有一小段时间，洛又坐回了床上，床头柜上的照片又在一次映入了洛的眼帘。洛看了看日历，把手伸到相框下面，摸出一块支离破碎的手表。</p>\n<p>洛闭上眼睛，回想起来，就在十年前的这一天，研究所的工作人员把这块手表交给了年幼的洛，因为这是父亲的遗物，他们在处理残骸善后的时候发现了父亲握在手里的这块手表，他们一定是觉得这个手表很重要，才特地派人送过来的吧。</p>\n<p>洛注视着这块手表，破碎的表面，锈迹斑斑的表带，以及刻在背面的一个奇怪而不太和谐的羽翼图案。如果父母能像姐姐一样还活着、只是没有出现该有多好啊。</p>\n<p>洛自嘲般叹了口气，这这么可能呢，毕竟这不是失踪，而是那么大的爆炸事故，这样的期望，是不可能实现了。</p>\n<p>洛收起了手表，心不在焉地走进厨房拿起小刀切面包。</p>\n<p>“啊！” 洛明显感觉切到了手，慌忙拿开面包，准备清理一下伤口。</p>\n<p>“奇怪，明明感觉......” 洛准备处理一下，但却发现只是刮到了一点点皮。</p>\n<p>洛也没有多想，没受伤总归是好事。</p>\n<p>差不多到了出发的时间，洛穿起校服，发现衣服左侧的小熊又被重新接了起来，应该是珈娜早上起床后补上去的吧。</p>\n<p>到了教室，跟坐在前排的约翰互相问好，看来到的不算太早但也并不迟。</p>\n<p>“早上好，法瑟修同学。” 洛在露易丝的旁边坐下，第一天上课并没有重新调位置，洛和露易丝也成了同桌。</p>\n<p>“早上好，艾因伦斯同学。” 露易丝看起来并没有精神，像是没睡醒一样，勉强向洛打了个招呼。</p>\n<p>“怎么了，” 洛显然发现了不对劲，“昨天晚上没睡好吗？”</p>\n<p>“唔～” 露易丝支支吾吾，“那个...... 我...... 很早就来了，一直在教室外面那个...... 等着开门，所以...... 今天起的比较早 ——，所以...... 有点困。”</p>\n<p>“那为什么要来这么早？” 洛不解，“明明没有早自习的啊。”</p>\n<p>看样子露易丝是在教室开门前好久来的，其实就算有早自习，也不用来这么早的啊。</p>\n<p>“我 ——” 露易丝越来越吞吞吐吐，蓝色头发下的脸色低落到了极点。</p>\n<p>难道说......</p>\n<p>洛回想起的露易丝昨天找他说的话。</p>\n<p>“是为了躲避那群人吗？”</p>\n<p>露易丝轻轻点了点头。“因为决定要早起，昨天晚上也没有太敢睡。”</p>\n<p>“可恶！还真是没完没了。” 洛很是气愤，“有试过拜托巡逻队的警察吗？”</p>\n<p>“有，但是 ——”</p>\n<p>“光这样没有用是吧。”</p>\n<p>“嗯。”</p>\n<p>确实，就算是警察，也不可能一直保护着露易丝，而且那群人也应该是没有什么罪名，不能直接逮捕，况且，卫星区的警察本身靠不靠得住都是个问题。</p>\n<p>真是很难办呀，洛想了一会儿。</p>\n<p>“要不，住来我家吧？” 洛脱口而出，下一秒感到了不对。</p>\n<p>“诶？” 露易丝很惊讶地看着洛。</p>\n<p>“啊，不是，” 洛急忙解释，“我没有别的的意思，就是说我可以在事情解决之前保护你，不过如果你不愿意的话，就当这是一句玩笑吧。”</p>\n<p>真是的，怎么能贸然说出让一个女同学住来自己家这种话，还是在全班面前有过误会的情况下。如果回答不愿意那也是当然的吧。</p>\n<p>“艾因伦斯同学的好意我收到了，但我还是不愿意继续麻烦艾因伦斯同学了，毕竟这是我自己的事。” 露易丝摇了摇头，“而且，这样子的话，不光是艾因伦斯同学，你的家人也会很困扰的吧。”</p>\n<p>“同学之间互相帮忙不是应该的吗？”</p>\n<p>“但是......”</p>\n<p>“而且，其实，我一直是一个人住。”</p>\n<p>“那你的父母呢？”</p>\n<p>洛摇了摇头。</p>\n<p>“对不起，谈到这个话题......”</p>\n<p>“没事，毕竟这已经是我接受的事实了。”</p>\n<p>“艾因伦斯同学很坚强啊。”</p>\n<p>“啊？”</p>\n<p>“一个人走到现在，不像我，在主城区生活的时候依赖父母，被送到阿斯特雷亚市的时候依赖风见老师，遇到那群人的时候又依赖艾因伦斯同学脱身，一个人什么也做不了。” 露易丝似乎感到有些气馁。</p>\n<p>“一个人走到现在什么的，这是没有的事，” 洛反驳，“其实，我也是一路上靠着值得信赖的人的帮助，才一步步走到今天的。没有他们的帮助，我也就不可能是现在的我。”</p>\n<p>“是这样子的吗？”</p>\n<p>露易丝松了一口气，“艾因伦斯同学很会安慰人呢。”</p>\n<p>“只是在说我自己而已..... 而且，在这种时候，互帮互助不是理所应当的事吗？”</p>\n<p>“所以说......”</p>\n<p>“所以说你要是有需要帮忙的地方尽管提出来，作为同学，我还是很乐意帮忙的。”</p>\n<p>“这样啊，不过虽然说艾因伦斯同学也是为我着想，但是要我直接住艾因伦斯同学家有一点 —————”</p>\n<p>“不对不对，我刚刚随口乱说的 ————” 洛慌忙的又解释了一遍。</p>\n<p>“那，你可以陪我一起上下学吗？我的住宅附近有巡逻队的监控，他们也是知道的，所以应该是安全的，但上学路上会穿过几个小巷子，所以......”</p>\n<p>“知道了，今天放学后我就送你回去吧。” 洛点了点头，表示认可这个方案。</p>\n<p>“那就先谢谢你了，有艾因伦斯同学陪着，我就放心多了。” 露易丝一脸感激。</p>\n<p>“不用谢，我正好也多走些路锻炼一下，最近体力感觉有些下降。”</p>\n<p>今天起床状态确实不对，洛认为是缺乏锻炼了。</p>\n<p>洛看了一下时间，拿出课本，“好了，快上课了，准备一下吧，不过，看你的样子，还是稍微去休息一下比较好吧，我之后会找来笔记借给你看的。”</p>\n<p>“嗯。” 露易丝苦笑着点了点头，这个状态看来是没法上课了。</p>\n<p>“约翰，等会老师来了帮我向他请个假，我陪法瑟修同学去一趟医务室。”</p>\n<p>洛点了点坐在前排的约翰，小声地跟他说道。</p>\n<p>“哦？有情况？” 约翰眯起了眼睛，看向洛。</p>\n<p>“想什么呢！这是有原因的，别误会啊，她只是身体不舒服而已，你刚刚多少也听到一点了吧。”</p>\n<p>“哈啊？刚刚教室那么嘈杂，你还指望我听见你们蚊子一样的说话声？”</p>\n<p>约翰摆出双手，做出一副无辜的样子，“虽然啥也不知道，但看在你是我好友的份上，就依你了，今天下课得好好给我解释你们俩这两天到底什么情况。”</p>\n<p>不知不觉间，医务室已经到了。拜托了一下这里的医生，借用了一些病床，洛就回到了教室，这时课已经上了一大半了。</p>\n<p>没办法，只好向约翰借笔记先抄一下了，顺便解释一下吧，那家伙现在误会是越来越深了。</p>\n<p>“看不出来你还很温柔的嘛！”</p>\n<p>听完整个事情的前因后果，约翰拍了拍洛的肩膀。</p>\n<p>“只不过是顺手帮个忙而已。”</p>\n<p>“帮忙吗？哈哈，不过，在这一点上，你倒是很靠得住。” 约翰拍了拍洛的肩膀，“既然误会解开了，不介意的话，我今天可以跟你一起哦。”</p>\n<p>“一起？”</p>\n<p>“一起送法瑟修同学回家啊。” 约翰说，“本来打算，开学就去你家逛逛，昨天你又有事，没机会说，今天就顺道绕个路呗。”</p>\n<p>“就算你这么说...... 法瑟修同学也 ——”</p>\n<p>“照你的说法，对方是有一伙人的吧，万一真遇到，也好搭把手。” 约翰好像带着一些开玩笑的口气。</p>\n<p>“就那几个人我还是能对付的！”</p>\n<p>“哈哈，其实我今天主要是想去你家，有件事想跟你商量一下。”</p>\n<p>“有件事吗，这样的话就没办法了，也可以吧。”</p>\n<p>洛答应了约翰的要求。其实约翰说的也没错，自己一个人确实应付不过来，约翰也一起的话，那就完全没问题了。</p>\n<p>不过，约翰要跟自己商量的事情是什么呢？</p>\n<p>算了，反正到时候就知道了，眼下还是先把这份笔记抄完吧，还得借给法瑟修同学看呢。洛想了想，决定中午吃饭的时候再去叫露易丝，让她多休息一会吧。</p>\n<p>这样的话，下面几节课节课我也得好好做笔记呢。</p>\n<hr />\n<h2 id=\"六合天使\"><a class=\"anchor\" href=\"#六合天使\">#</a> 六合天使</h2>\n<p>“还真是难懂啊，” 下课后，约翰摸着脑袋，“简直是降维打击。”</p>\n<p>“果然是四肢发达头脑简单的笨蛋吗。”</p>\n<p>“你这家伙～” 虽然约翰有点懊恼，但脑力活动确实是洛更在行。</p>\n<p>“我先下去去买点喝的，你要来点吗？” 约翰站起身。</p>\n<p>“那就帮我带一瓶咖啡吧。”</p>\n<p>等约翰出去之后，洛趴在桌上，又开始思考起姐姐的事情了。</p>\n<p>“初次见面，艾因伦斯。洛同学。”</p>\n<p>“啊？” 洛疑惑地抬起头，一个黑发女生站在他身边，这是在跟新同学打招呼吗？也对，昨天走的比较早，还没来得及认识新同学。</p>\n<p>“呃 —— 那个，初次见面，你好，请问......”</p>\n<p>“我叫卡娜。”</p>\n<p>“卡娜同学吗？” 洛仔细地看了看她，齐腰的长发可不多见，就像一道黑色的瀑布一般。</p>\n<p>“可是为什么你会知道我的名字？我应该还没有自我介绍过吧。”</p>\n<p>“因为 ——” 卡娜把嘴巴凑到洛的耳边，“我们早就盯上你了哦。”</p>\n<p>“！” 洛背脊一阵发凉，“请不要开这样的玩笑。”</p>\n<p>“没有开玩笑。” 卡娜微微一笑。</p>\n<p>“抱歉我听不懂你在说什么，” 洛确实摸不着头脑，“你认错人了。”</p>\n<p>“是么，那么就这么希望吧，” 卡娜转过身，又回头说了一句，“希望你小心行事，不然会死哦。”</p>\n<p>“借你吉言。”</p>\n<p>“那么，告辞。” 卡娜回到了座位上。</p>\n<p>“刚刚那个又是谁？” 约翰把一瓶罐装咖啡丢到洛的面前，“头发可真长。”。</p>\n<p>“好像叫卡娜，不知道哪里来的，刚刚应该是认错人了，说了些奇怪的话。” 洛打开咖啡。</p>\n<p>“奇怪的话？”</p>\n<p>“至少我是没听懂。”</p>\n<p>“那就不必理会了。对了，法瑟修那边你不过去看看吗？”</p>\n<p>“拜托过那边的老师了，有事情会给我打电话的，就让她再休息一会吧。”</p>\n<p>“那也行，现在马上要上课了，下课再聊吧。”</p>\n<p>“下一课是，拉斯老师的课啊，那应该不会那么早来的。” 洛想。</p>\n<p>下课后要不要找机会和拉斯老师说一说露易丝的情况呢？</p>\n<p>“请各位同学回到座位，准备开始上课。” 进来了一个女老师，“自我介绍一下，我叫希尔娜，拉斯老师身体不适，今天由我代课一天。”</p>\n<p>“刚开学就出状况吗，还真是稀奇。” 约翰转过头来悄悄跟洛说。</p>\n<p>“后面那边的同学希望可以稍微尊重一下我的课堂。” 希尔娜老师说。</p>\n<p>“抱歉。” 约翰把头转了回去，双手合十。</p>\n<p>“那么，就开始我们今天的课吧，关于这个宇宙的能量表现形式，有......”</p>\n<p>......</p>\n<p>“下课，关于这节课的内容有不理解的可以私下找我解决，课后作业已经发给大家了，下一节课会由拉斯老师来讲解，请按时完成。”</p>\n<p>“我的天，又是一节听不懂的课。” 约翰叫苦不迭。</p>\n<p>“有那么点意思。” 洛收起笔记，看来还在他的接受范围之内。</p>\n<p>“诶等等，发给我的这份有点奇怪。” 洛翻开了刚发下来的作业，第一页上写着 “速来 E3 实验室 艾因伦斯。洛”</p>\n<p>“嗯？不会吧？” 约翰拿起来翻来覆去看了几遍，“没什么奇怪的吧。”</p>\n<p>“第一页上有莫名其妙的字。”</p>\n<p>“第一页是空白的啊。”</p>\n<p>“怎么可能？！”</p>\n<p>洛又拿过来一看，果然没有。</p>\n<p>“刚刚明明有字的啊。”</p>\n<p>“总感觉你这两天神经兮兮的，你真的还好吗？”</p>\n<p>洛忽然想到了昨天的事情，“难道说这也是 ————”</p>\n<p>“如果和那个有关的话，也只有去看看了。” 洛想道。</p>\n<p>“我出去一下。”</p>\n<p>“你要去哪，等会不是要去叫法瑟修同学的吗？”</p>\n<p>“那边就麻烦你了，我等会打电话给你。”</p>\n<p>“是什么急事吗”</p>\n<p>“也不是，你去法瑟修同学那边吧。” 洛跑出了教室。</p>\n<p>“我和她不熟啊 ———— 喂”</p>\n<p>“真会使唤人。” 约翰摇了摇头，往保健室走去。</p>\n<p>......</p>\n<p>“E3 实验室，应该就是这里。” 洛看了看门牌，这个时间实验室自然是不开的，但是门却虚掩着，“果然叫我来吗。”</p>\n<p>实验楼距离教室并不近，洛一路奔跑过来，却完全没有累的感觉。</p>\n<p>约翰这家伙也许说的对，自己的状态确实有点不对劲，洛联想到了早上的事情。</p>\n<p>说起来，这才刚下课吧，希尔娜老师比我早走没多久，脚程这么快的吗？</p>\n<p>洛推开门，希尔娜老师在试验台上摆弄着一堆实验器械，烧杯，里面漂浮着一些碎渣一样的东西，下面是一盏酒精灯，微弱的火焰随着洛的到来而左右摇晃。</p>\n<p>“那个 ———— 打扰了，希尔娜老师，您叫我来有什么事情吗。”</p>\n<p>“艾因伦斯。洛，” 希尔娜抬起头，拿着玻璃棒搅动着烧杯，碎渣却并没有溶解，只是使得烧杯里的液体变得更浑浊了，“好久不见。”</p>\n<p>这种场景，恐怕只能用诡异一个词来形容。</p>\n<p>“好久不见的意思是？” 洛突然困惑到了，“我们之前认识吗？”。</p>\n<p>“没什么，果然不记得啊，” 希尔娜拿起轻微沸腾的烧杯，轻嘬一口，“那就当我们重新认识吧。”</p>\n<p>“抱歉，我实在想不起来 ————” 洛努力在回忆有关于这张脸的一切信息，但却一无所获。</p>\n<p>希尔娜半坐在实验台上，注视着洛，许久才轻叹一口气。</p>\n<p>“我有个同事，叫艾因伦斯。卡特。” 希尔娜把容器放回了桌面，“这个名字至少你不会忘记的吧。”</p>\n<p>母亲的同事？</p>\n<p>但是无论洛如何在记忆中检索，都没有这个人的信息。</p>\n<p>这个人，和母亲的研究所有关。</p>\n<p>“你究竟是谁？” 洛的语气变得严肃了起来。</p>\n<p>“我说过了，我是卡特的同事。”</p>\n<p>“那个研究所的吗？”</p>\n<p>“你猜的没错。” 希尔娜微微一笑。“你下一句就是要问那场事故的真实原因了吧，真是很可怕的事故，不过很抱歉，我也不知道。”</p>\n<p>这不是一场普通的事故，洛一直有这样的直觉。那场巨大的爆炸，将整个研究所夷为平地，事后的搜救结果也是无人幸存，这个人，真的很可疑。</p>\n<p>洛咬紧牙关，“你是说发生了在一起工作的同事都不了解的事故吗？”</p>\n<p>“如果真的当时是在一起工作的话，或许会知道的，不过如果那样的话，我估计也没有办法站在这里了。” 希尔娜苦笑。</p>\n<p>“不在现场，是吗？”</p>\n<p>但是后续调查结果是，研究所所属的研究员是先被全员召集，据说是观摩实验，后发生了意外，登记在册的所有研究人员无一生还，这个人，真的很可疑。</p>\n<p>“是的。” 希尔娜，点了点头。</p>\n<p>“这样啊 ————” 洛转头看向希尔娜，“我相信你了，那么你现在找我有什么事吗？”</p>\n<p>“真是有意思的孩子。” 希尔娜看向窗外，“不过，与其问我有什么事，不如说说你心里的疑惑吧，除了你父母的事情外，应该还有不少你在意的事情，毕竟你那个姐姐应该没有全部告诉你吧。”</p>\n<p>“你到底是 —————— 什么人，应该不止我母亲的同事这么简单吧。” 洛没想到连姐姐的事情她也知道。</p>\n<p>毕竟，自己和姐姐的接触，不过是昨天的事情。</p>\n<p>“很不巧的是，我确实只是你母亲的同事哦，时间宝贵，我还是建议你不要在我的身份上继续浪费时间了。” 希尔娜目不转睛地盯着窗外，似乎在注意着什么。</p>\n<p>确实，洛现在是满肚子的疑惑，虽然有很多问题，包括她的身份、研究所的事故、姐姐的事情、还有她做隐瞒的事情，但是洛决定直切要害，“希尔娜老师，你是羽化者吗？”</p>\n<p>希尔娜并不吃惊，“我是哦。”</p>\n<p>“果然吗 ——————”</p>\n<p>希尔娜站了起来，“关于羽化者，说来话长。不过比起你现在在这里悠闲地和我聊天，你姐姐的处境或许在一步步变得危险哦。”</p>\n<p>“危险？究竟发生什么事了？”</p>\n<p>“你知道你姐姐昨天做了什么吗？” 希尔娜把桌上的烧杯重新放到架子上。</p>\n<p>“做了什么？”</p>\n<p>姐姐昨天匆忙告别，果然是有别的事情要办。</p>\n<p>“她利用打入六合天使的一个线人的情报，袭击了六合天使在阿斯特雷亚的一个武装基地。”</p>\n<p>洛想起来姐姐好像对六合天使在极大的敌意，只是直接袭击六合天使基地未免有点......</p>\n<p>“但那是一个陷阱，为的就是清扫阿斯特雷亚的威胁。”</p>\n<p>“陷阱？”</p>\n<p>“不错，简单来说，就是抛出一堆假的诱饵，并给出几个特定的假消息，澪的行动已经直接暴露出了谁是内鬼。”</p>\n<p>“那岂不是姐姐她们已经暴露了？”</p>\n<p>“是的，恐怕现在那个线人已经被抓起来了吧，或者，已经被处死了 ———— 你的姐姐今天会去做第二次佯攻，目的是未了让六合天使调集力量到阿斯特雷亚防守，以便她的同伴发动在亚提拉提的集中进攻，估计快到时间了。”</p>\n<p>“可恶，姐姐为什么要做这种危险事情 —————”</p>\n<p>“她有她的理由，我很理解她。”</p>\n<p>“因为憎恨六合天使吗？” 洛只能想到这些。</p>\n<p>“算是结论吧。”</p>\n<p>“那我也给出一个结论，你，是六合天使的人吧，但是，你有你的目的。” 洛突然朝着希尔娜抛出了自己的推断。</p>\n<p>“哦？何以见得？” 希尔娜显然有些惊讶，但神情又不那么意外。</p>\n<p>“对上层的六合天使的动向如此了解，很难相信你没有一点关系，其次，我有充足的理由确定，研究所的事故你不可能没有经历，不过你不愿透露原因。而且，你向我透露这么多对六合天使的不利的信息，这一点过于反常。”</p>\n<p>“就凭这些的话，我矢口否认，你也没有办法继续反驳吧。”</p>\n<p>“确实如此，我没有进一步的证据，但故意给我透露这么多信息，你从一开始就没有打算隐瞒，根本不需要证据这种毫无意义的东西。”</p>\n<p>“哈哈哈，有意思。” 希尔娜一反之前平和的态度，大笑了起来。</p>\n<p>“那么，为什么要告诉我这些，你到底想要什么？” 洛很清楚，眼前这个人，一定是带有其他目的的。</p>\n<p>“很冷静嘛，我确实是六和天使的人，隶属于统领之一的基路伯。”</p>\n<p>“基路伯？”</p>\n<p>基路伯听说是最不活跃的统领之一，为什么会找自己？</p>\n<p>“所以你的目的是什么？”</p>\n<p>希尔娜看着面前这个少年，“如我刚刚所说，我隶属六合天使的基路伯，目的就是希望你加入六合天使，成为‘代行人’。”</p>\n<p>&quot;‘代行人’是什么？为什么想要我加入，我怎么看也只是一个普通的高中生吧。&quot;</p>\n<p>“呵呵～‘代行人’是什么后面再说，不过，你到现在都还没有蜕变为为羽化者的感觉吗？明明已经全部完成了，真是不可思议。”</p>\n<p>“什么？我 ————” 洛突然醒悟，自己的身体确实有点异样，原来是这样的吗，可究竟是什么时候 ————</p>\n<p>怪异的事太多，洛完全没有头绪。</p>\n<p>“羽化者吗？” 洛还真没想到事情会变成这样。</p>\n<p>“刚刚也说了，留给你的时间并不多，这个时候艾因伦斯。澪估计已经快落入陷阱了吧。”</p>\n<p>“所以你是来拿这个作为谈判筹码的？” 洛十分冷静。</p>\n<p>‘代行人’是什么，洛并不清楚，但对方既然带着这样的情报，必然有解救姐姐的办法。</p>\n<p>一边是姐姐的安危，自己需要放在天平的另一边的，是什么似乎已经无关紧要了。</p>\n<p>“可以这么理解，” 希尔娜微笑，“不过还是希望你不要曲解我的本意，我是很想解救艾因伦斯。澪的，这个立场和你一致。”</p>\n<p>“我会加入你的组织，不过关于‘代行人’，这次事情结束后，我需要知道这个身份的意义。” 洛毫不犹豫，“那么我现在该做什么？”</p>\n<p>“没问题”，希尔娜走到洛的身边，“那么，该介绍一下你自己了。”</p>\n<p>“欸？”</p>\n<p>洛正疑惑着，希尔娜突然弯腰从靴子里抽出一根钢针，以极快的速度射向洛的脑门。</p>\n<p>洛甚至没有来得及做出任何躲闪动作，钢针瞬间和洛拉近了距离。</p>\n<p>但钢针稳稳的停在了额头前方，洛甚至能感受到针头散发出的热量。</p>\n<p>那是这么短的距离下和空气摩擦产生的温度吗，可怕的速度，如果没有停下，毫无疑问自己的脑袋会被贯穿。</p>\n<p>“希尔娜老师，你这是想干什么？” 洛一脸惊恐。</p>\n<p>钢针清脆地落地。</p>\n<p>“这样就可以了。” 仿佛一切正在希尔娜的意料之中，希尔娜稍作停顿，“那么，已经做到这个地步了，还不打算出来打个招呼吗？神秘的暗能体。”</p>\n<p>一阵微微的眩晕感向洛袭来，洛扶了扶头。</p>\n<p>“真是头疼，本来还在想怎么向你说明情况，没想到是以这样的方式见面。”</p>\n<p>洛的脑中传来了声音。</p>\n<p>“谁？” 洛抬起头，但这间实验室里，除了希尔娜之外别无他人。</p>\n<p>是刚刚希尔娜说的暗能体吗？身体有一种沉重的感觉，这种感觉，还真是有点微妙。</p>\n<p>“......” 洛很快冷静了下来，“你就是那个暗能体吗？”</p>\n<p>“是的，叫我米斯凯尔吧。”</p>\n<p>“你为什么会在我身体里？”</p>\n<p>“很抱歉，关于这点我也不是很清楚，我一醒来就发现自己身处你的暗能中枢了。”</p>\n<p>“卡利斯集团总部工厂旧址，目前已经废弃，位于阿斯特雷亚北巷郊区的核污染区。虽然初次见面很想让你们多聊几句，但还是抓紧时间吧，艾因伦斯。澪或许撑不了多久。”</p>\n<p>“还有，一切结束后，打这个电话，会有人来帮你的，祝你们好运。” 希尔娜留下一张纸条，径直离开了实验室。</p>\n<p>“看来时间确实紧迫，要抓紧了。” 洛心想，“可是，我真的可以吗 ————”</p>\n<p>“刚刚的事情，我也都听到了。” 米斯凯尔说，“如果她说的是真的话，那么确实要赶快了，虽然你是刚认识我，但请相信我，我可以帮助你。”</p>\n<p>“抱歉，拜托你了。” 洛此时只能选择相信这个叫做米斯凯尔的暗能体，收起了纸条，转身冲出了实验室，向着北巷方向冲去。</p>\n<p>“核污染区吗？可恶，为什么姐姐要去那种地方。”</p>\n<p>“看她的说法，用跑的话，会来不及的吧。”</p>\n<p>“那还能怎么办，难道还有别的方式吗？”</p>\n<p>“让我来吧。”</p>\n<p>“让你来是指？而且你知道在哪？” 洛难以理解。</p>\n<p>“简单来讲，人格交换，我来接管身体。”</p>\n<p>“...... 我相信你。” 到了这个份上，已经没有拒绝这个选项了。</p>\n<p>洛渐渐感觉到了脱力感，伴随有眩晕，接着仿佛身体不属于自己般行动了起来，意识逐渐变淡，是要这样睡过去了吗？</p>\n<p>“交给我吧。”</p>\n<p>这是洛陷入昏睡前听到的最后一句话。</p>\n<p>原生的人格无法凭依在暗能中枢中。将身体交由暗能体操控，意味着自身意识将被冻结，无法像暗能体一样在后台保留意识。</p>\n<p>“嘛，叫艾因伦斯。洛啊，沟通方面还是很顺利的。”</p>\n<p>米斯凯尔飞身一跃，跳到了附近的屋顶，开始在屋顶间飞速移动。</p>\n<p>“这个距离的话，大概需要十分钟的样子，拜托了，一定要赶上！” 米斯凯尔心中默念。</p>\n<p>米斯凯尔心中浮现出朦胧的记忆，那是自己绝望哭泣时的样子，似乎是因为失去了某个重要的人。</p>\n<p>实验室的门外，希尔娜叉着手倚靠在墙上，闭着眼睛，似乎在等待什么。突然，一个人影瞬间出现在了她的右手边。</p>\n<p>“怎么样了，希尔娜。” 身边的女人说话，摆弄着她齐腰的长发，正是卡娜。</p>\n<p>“‘原初’的状态似乎还不错。”</p>\n<p>“不过，就算这样，我也依然不看好这个愣愣的家伙，真的不用过去帮他一下吗，帕瓦斯可不是会手下留情的人。” 卡娜侧过脸，端详着希尔娜的表情，“他可是重要的种子，弄坏了，你可就难办了。”</p>\n<p>“明明知道我没办法出手，就不要在这里冷嘲热讽了。” 希尔娜一脸不屑，“况且，帕瓦斯这次出动身上带有最大程度的‘天使缚锁’，这是基路伯大人做出的最大努力了。身为‘原初’的他，并非没有机会。”</p>\n<p>亚斯特雷亚是基路伯的管辖领地，但天使议会为了应对四起的反抗军，通过了帕瓦斯的提案，使其在剿灭不力的的亚斯特雷亚行使短时间的治安权。同时也通过了基路伯依据《天使秩序公约》第三条第二款，“非辖区天使进行军事行动时，所属辖区天使有权对其使用天使缚锁进行能力限制” 的提案，对其施加了最大限度的‘天使缚锁’，使其在亚斯特雷亚的作战能力大打折扣。</p>\n<p>希尔娜作为六合天使基路伯的代表，行为代表着她的意志，眼下和天使议会的决策直接作对显然不是正确的决断。</p>\n<p>“就算是‘原初’，初次觉醒就要面对天使统领，你似乎对他有点信心过头。” 卡娜回过头，“总之，不要忘记赌约哦。”</p>\n<p>卡娜说完，瞬间从希尔娜身边消失了。</p>\n<p>“哼 ————” 希尔娜抬头仰望天空。</p>\n<h2 id=\"再见再见\"><a class=\"anchor\" href=\"#再见再见\">#</a> 再见，再见</h2>\n<p>午后的阿斯特雷亚，并没有阴云散去的迹象。东巷一座古老建筑的窗边，一个红发少女呆呆的看着窗外，少女的长发搭在肩上，一动不动，因为阿斯特雷亚的卫星区很少有风。</p>\n<p>远方主城区的钟声响起，仿佛被四散开的钟鸣拨乱了心弦，少女的身体微微一颤，紧接着慢慢转身，眼角还残留着一抹泪痕。</p>\n<p>“埃德尔，时间到了，我要去了。”</p>\n<p>“已经准备好了。” 埃德尔端上来一个盘子，上面是一个精致的金属盒子。</p>\n<p>澪穿上一件黑色的风衣，走到埃德尔身边，打开盒子，拿出了两支药剂。</p>\n<p>“两倍剂量的话，恐怕身体会撑不住的。”</p>\n<p>“先带着备用，根据莎莉的情报，对方有数十人，如果情况更糟的话，这就不是我惜命能完成的任务了，我会看情况使用。”</p>\n<p>澪打开其中一支药剂的保险栓，弹出针头，注射进了手臂，一股火辣的刺痛感沿着手臂延伸到了心脏，随后迅速扩散到了全身。</p>\n<p>“呃啊 ————” 澪痛苦地喊出声，扶住了身边的埃德尔。</p>\n<p>“艾因伦斯。澪大人，您还好吗？”</p>\n<p>“嗯，没问题。”</p>\n<p>澪稍微缓了一会，痛苦的感觉也渐渐如潮水般褪去。</p>\n<p>事实上，并不是副作用结束了，而是药剂中的镇痛成分起作用了。</p>\n<p>这是高浓度的激发性氧化剂溶液和活化暗能中枢的信号激素，可以随着血液内的能量消耗逐渐起效，在一段时间内大幅提高能量释放效率和暗能中枢的输出功率，但副作用是会大量消耗血液中的活性物质。</p>\n<p>一支就足以让人事后躺倒在床十数天不能动弹。两支，是接近于致死量的剂量。</p>\n<p>但是，暗能体无法觉醒的她，暗能中枢的使用效率很差。要想完成这种任务，只能依赖这种药剂。</p>\n<p>澪将另一支药剂放收进了口袋，走到门前，拿起架子上的四叶草帽子，戴在了头上，打开门，犹豫了一下，又脱了下来，交给了跟随而来的埃德尔。</p>\n<p>“我出发了。”</p>\n<p>“在下静候您的凯旋，希望不会用到第二支。”</p>\n<p>“嗯，我当然也不想死。” 澪向着北巷的方向望了一眼，骑上了门外的摩托，“洛，等我回来！”</p>\n<p>......</p>\n<p>北巷卡利斯集团总部工厂内，一个穿着六合天使执行队制服的女人倚靠在一处墙角，双手背在身后，闭着眼睛，似乎在等待什么。</p>\n<p>一阵脚步声接近，女人睁开双眼，准备转身离开，却没想到直接和对方打了给照面。</p>\n<p>“你就是上个月调过来的执行警员吧？” 站在人群前面的头领戴着面具，“怎么样，这里的工作还顺利吗？”</p>\n<p>这副面具，这个声音，不会错的，女人后背瞬间感受到的一丝丝凉意，冷汗直流。</p>\n<p>“托帕瓦斯长官的福，工作很顺利，昨天也参与了击退了叛军。” 女人尽量使自己冷静下来，“话说回来，帕瓦斯长官不是去亚提拉提市执行公务了吗，怎么？”</p>\n<p>“工作顺利就好，” 面具下的声音让人听了不寒而栗，“不过，消息是假的哦，卡丽警员，还是说，叫你海伦尼尔。莎莉比较好呢？”</p>\n<p>“假 ———— 假的？！” 海伦尼尔。莎莉双瞳突然散发着恐惧的神情，“你知道我的名字？什 ———— 什么时候？”</p>\n<p>不对，潜入应该很顺利才对，到底是什么时候身份暴露的？！</p>\n<p>“你以为六合天使的是这么容易被渗透的吗？那你可太天真了。” 面具女走到海伦尼尔。莎莉面前，左手托住她颤抖的下巴，“那么，可不可以请你告诉我，今天会有几只不自量力的家伙上钩呢？”</p>\n<p>“居然 —————” 海伦尼尔。莎莉想说话，但却一个字也说不出来，双腿瘫软，跪坐在地上。</p>\n<p>不行，完蛋了，不要来啊，澪，这个人在这的话，你会 ————</p>\n<p>我没救了，但，至少要把这个消息告诉澪，可是眼前这个人，会给我机会吗？</p>\n<p>莎莉握住手上用来通信的手机，颤颤巍巍的站了起来。</p>\n<p>也只有试试了，争取出通知澪的间隙，莎莉鼓起勇气。</p>\n<p>“要上了。”</p>\n<p>“交给我吧。” 莎莉脑中的声音回应。</p>\n<p>瞬间，莎莉四周的空气开始出现电弧。</p>\n<p>“羽化者，倒也不意外，毕竟是那个组织的。不过还想垂死挣扎吗？放弃的话，可以给你个不错的死法。”</p>\n<p>“别看我这样，我对自己的能力还是有点信心的，就算你是帕瓦斯，说不定也会输的很难看呢。” 莎莉勉强挤出一丝笑容。</p>\n<p>电弧越来越大，空气被电离出大量火花，但并没有经过很久，几声爆破声后，这片角落便又重归安静。</p>\n<p>卡利斯集团总部工厂门外，一阵摩托引擎声由远及近。</p>\n<p>“约定的地方是这里吧。” 澪把摩托停在路边，躲在工厂左边的墙后。</p>\n<p>“可是很奇怪啊，一路上没有莎莉的消息，这里也有点古怪，居然一个六合天使的人都没有，难不成临时更换地点了吗？”</p>\n<p>再等等吧，没有莎莉的消息，还是不要贸然攻进去。</p>\n<p>时间过去了十分钟，依然没有任何消息，难道说莎莉那边出了什么差错？</p>\n<p>澪正要转身出去，突然一个身影落在了澪的身后，用手捂住了她的嘴，把她拉了回去。</p>\n<p>“谁？” 澪想要挣脱，但却发现使不上力气。</p>\n<p>“嘘 ————” 澪转过身，身后的人用食指竖在了澪的嘴巴前。</p>\n<p>“洛，你怎么在这里！” 澪定睛一看，很震惊，但显然更着急，“这里不是你该来的地方，快回去。”</p>\n<p>“你是想就这样打进去吗？艾因伦斯。澪姐姐。”</p>\n<p>“洛？你怎么知道，不对，你是谁？” 澪察觉到了异常，洛的样子不太对。</p>\n<p>“居然能一眼就看出来，该说不愧是姐弟吗？”</p>\n<hr />\n<p>“该死，这到底是怎么回事！” 澪向左撤出一步，摆出了战斗的架势，“你到底是谁？”</p>\n<p>“别急嘛，等我说完。” 米斯凯尔看着情况不对，赶忙解释，“情况有些复杂，但我是受你弟弟拜托，来救你的。”</p>\n<p>“救我？”</p>\n<p>“我是洛的暗能体，米斯凯尔。”</p>\n<p>“暗能体？到底是怎么回事 ————”</p>\n<p>“小心！”</p>\n<p>还没等澪说完，米斯凯尔拉着澪的手一跃而起。</p>\n<p>与此同时，一阵爆炸声从身边响起。</p>\n<p>“欸？” 澪看着原先作为掩体的那面墙浓烟滚滚，爆炸的碎片四散在路边。</p>\n<p>米斯凯尔和澪落在街道的路上，烟雾逐渐散去。</p>\n<p>“来了啊。” 米斯凯尔看向爆炸的地方，迎面走来一个戴着半副面具的女人。</p>\n<p>“你是 ————” 澪回过身神，瞬间惊出一身冷汗。</p>\n<p>“这下麻烦了，这家伙，比想象中要难对付。” 米斯凯尔自言自语。</p>\n<p>暗能系羽化者可以通过自己特殊的的暗能中枢大致了解对方的信息，这个女人，不是个简单角色。</p>\n<p>“你为什么会在这里，你不是应该在 ————”</p>\n<p>“很吃惊是吗，这还要感谢你那可爱的伙伴哦。” 帕瓦斯轻蔑一笑，“居然愚蠢到想要打入六合天使内部，不得不佩服你们这些人的勇气呢。”</p>\n<p>“难道说！” 澪仿佛能够听到自己急促的心跳声。</p>\n<p>帕瓦斯伸出左手示意了一下，身后的随从便将一个血肉模糊的尸体抛到澪面前。</p>\n<p>“真是可怜，直到最后还在挣扎着想要给你发送讯息。” 帕瓦斯邪魅的笑容浮现在了脸上，“可惜她没能做到哦，这就是可悲的反抗者的下场。”</p>\n<p>躺在地上的女孩的金发已经被鲜血大片染红，干结成絮状，瞳孔扩散的双眼已然是失去生命的表现，身体上无数窟窿中溢出的血染湿了地面，右手摔在地上后散落在一旁，左手折叠在身后，断裂的骨刺刺破了皮肤。</p>\n<p>“不过不用担心，马上你就能见到你可爱的同伴了。”</p>\n<p>“莎莉！” 澪歇斯底里的怒吼，发了疯般，准备冲上去，却被米斯凯尔一把拉住。</p>\n<p>“放开我！莎莉！你居然敢这么对待莎莉！我要干掉你这家伙！”</p>\n<p>“冷静点！” 米斯凯尔环顾四周，就在帕瓦斯吸引两人注意时，执行队已经包围住了他们，所幸这些人里面大概没有厉害的羽化者。</p>\n<p>帕瓦斯看着米斯凯尔，“可惜，只来了两个人吗？稍微有点失望，本来想着多剿灭几个反抗军的。”</p>\n<p>“可恶，我要杀了你！” 澪试图挣脱米斯凯尔，却没能成功。</p>\n<p>“澪！” 米斯凯尔握着澪的手臂，“我们先走！”</p>\n<p>“走？” 帕瓦斯冷笑，“你们不会以为见到我还能走吧，可恨的蛀虫，居然胆敢挑战天使的权威，准备接受审判吧。”</p>\n<p>执行部队大约二三十人，手持轻武器，再加上眼前这个人不是个一般的羽化者，这种情况要逃走也确实不简单。</p>\n<p>“我答应了洛，要救你回去。” 米斯凯尔握紧澪的手。</p>\n<p>“不甘心，但 ———— 我确实不是她的对手。” 澪使不上半点力气，虽然澪没有米斯凯尔一样的洞察能力，但澪知道，就刚刚那种破坏力的攻击，如果不是米斯凯尔，自己恐怕已经被炸成碎片了。</p>\n<p>“我知道了，我不会冲动的，松手吧。” 澪紧咬牙关。</p>\n<p>米斯凯尔松开了手，“我来拖住她，你趁机逃走。”</p>\n<p>“这样的话，我也留下来。” 澪握紧了拳头，“对面这个人是帕瓦斯，天使统领，很危险，不能留你一个人。”</p>\n<p>“如果是担心你弟弟的身体的话，我会注意的，毕竟这也是我的身体。” 米斯凯尔说，“如果是想为那个叫莎莉的女孩报仇的话，现实情况并不允许。”</p>\n<p>&quot;可是 ————&quot;</p>\n<p>“自顾自的说话，不把我放在眼里吗”，帕瓦斯的嘴角露出一丝不忿，“看来要教教你们这些目中无人的反抗军毛贼，什么叫做六合天使的恐怖。”</p>\n<p>帕瓦斯抬起右手，瞄准了澪。</p>\n<p>“危险！” 米斯凯尔一把把澪拉开，瞬间一股气流从澪刚刚的位置呼啸而过，伴随着爆裂的声音，击中了后面的墙壁，墙壁被轰开了如同马蜂窝般的口子。</p>\n<p>“反应不错，居然能躲开这一下。” 帕瓦斯的脸上闪过一瞬间的惊讶，“看来反抗军里也有不错的羽化者嘛。”</p>\n<p>“居然有音爆？超音速的空气弹，好险。” 澪擦了擦额头。“难道莎莉就是被这招给 ——————”</p>\n<p>“要小心，这家伙是动能系羽化者，刚刚是把指尖的空气加速。” 米斯凯尔说，“这个破坏力，远超一般的枪械。”</p>\n<p>“动能系的吗？” 澪虽然知道，作为天使统领，帕瓦斯的实力十分强，但对于她能力的本质还是第一次听到，而且居然还是和自己一样的动能系，真是望尘莫及。</p>\n<p>“光是这一下，就解析出这么多信息吗，你这小子到底是什么人。”</p>\n<p>“我想我没必要告诉你吧。” 米斯凯尔镇静地说。“只能说你的动作我看的一清二楚。”</p>\n<p>“呵呵，原来如此。” 帕瓦斯脱下面具，露出了像是经历过重度烧伤的半边脸，“本来只想杀杀反抗军无谓的自信，没想到居然是第二个‘原初’的羽化者。你是天使秩序巨大的威胁，准备好受死吧。”</p>\n<p>那张可怕的脸上浮现出更加可怖的笑容。</p>\n<p>“‘原初’？” 澪愣住了。</p>\n<p>沃卡斯曾经对澪说过，有一类羽化者可以直接控制暗能，叫做‘原初’的羽化者。世界上仅有两个暗能体可以做到，其中一个是六合天使的撒拉弗，号称最强天使，另外一个，此刻正在洛的身体里吗？这个叫米斯凯尔的暗能体？</p>\n<p>“知道我是‘原初’的话，可以放我们走吗？你打不赢我的。” 米斯凯尔说。</p>\n<p>“这可说不准，小看天使的人，会死得很难看。”</p>\n<p>帕瓦斯抬起双手，瞄准着米斯凯尔，发射出数以万计的细小的高速空气针，巨大的音爆震耳欲聋。</p>\n<p>米斯凯尔灵敏地闪开了几个身位，躲开了攻击。</p>\n<p>“在后面！” 澪大喊。</p>\n<p>帕瓦斯将自己瞬间加速到了米斯凯尔身后，对准头部踢出一脚，米斯凯尔早已回身伸出右臂挡下了这一击，帕瓦斯挥出右拳对着太阳穴，米斯凯尔用左掌接下了重拳。</p>\n<p>“这样就结束了。” 帕瓦斯左手食指顶在米斯凯尔左胸前，“‘原初’不过如此！”</p>\n<p>“洛！” 澪还没喊出来，便发现担心是多余的。</p>\n<p>“怎么会？” 帕瓦斯的技能没能放出空气针，反而是米斯凯尔一记膝击顶到了帕瓦斯的右腹上。</p>\n<p>“啊 ————” 帕瓦斯迅速后撤，但显然受了点伤，扶住了刚刚踢中的地方。</p>\n<p>“趁现在，快走！” 米斯凯尔想趁此机会让澪脱身。</p>\n<p>“可恶，没办法了，你要小心！” 这种等级的战斗，自己在这里确实也作用不大。</p>\n<p>澪使用能力将自己加速，冲向了包围他们的执行队，子弹如暴雨般袭来，但这种程度的子弹，对于澪来说，并不是什么问题。</p>\n<p>要用吗？现在还不是使用那个的时候，只能选择相信洛和他的暗能体了，可恶，要是伊瑟芙尼能够觉醒的话......</p>\n<p>“休想！” 帕瓦斯瞄准澪，准备发射空气弹，但却被米斯凯尔加速到眼前的一脚飞踢阻止了。</p>\n<p>“不是动能系羽化者居然还能有这个速度，不愧是‘原初’。” 帕瓦斯闪开了攻击。</p>\n<p>刚刚的动能加速，是米斯凯尔在这场短暂的较量中立刻学到的，这是暗能系羽化者的能力。</p>\n<p>澪成功突围，骑上了摩托。</p>\n<p>“给我拦住她！” 帕瓦斯一声令下，执行队也骑着车追了上去。</p>\n<p>米斯凯尔抬起右手瞄准了帕瓦斯。</p>\n<p>“难道说？” 帕瓦斯也抬起手。</p>\n<p>“和撒拉弗大人一样的复制能力吗？居然忘了这回事。”</p>\n<p>两人发射出的空气弹碰撞的双重音爆瞬间炸开，两人中间的场地上扬起了巨大的灰尘团。</p>\n<p>米斯凯尔加速向着反方向离开，帕瓦斯见状也加速追了上去。</p>\n<p>“别想跑！” 帕瓦斯怒吼。</p>\n<p>显然帕瓦斯的速度更快一些，很快就拦在了米斯凯尔的前面。</p>\n<p>“嘁。” 米斯凯尔重新摆好战斗架势。</p>\n<p>“虽然你的复制能力确实很好用，但你没有办法做到原版的水平，这点你和真正的‘原初’还有不小差距。” 帕瓦斯狡黠一笑，“还有，刚刚我的能力失效，是因为肢体接触后你的逆向运算能力导致的对吧，吃了点信息差的亏，虽然棘手，但也不是完全不能对付。”</p>\n<p>“嘁，这么快就被看透了吗，真难缠。”</p>\n<p>帕瓦斯慢慢收起笑容，烧伤的半边脸颊变得更加可怖了起来，“那么，我要上了哦！”</p>\n<p>帕瓦斯张开双手，一股巨大的气流包围住了战场，原本就阴沉的天气突然间更加压抑了起来，路边的树叶被这股气压差吸附了过来，却在碰到气流壁的瞬间被绞碎，被染绿的风暴之壁包裹着战斗中的两人。</p>\n<p>洛想加速逃出去，但却发现为时已晚。</p>\n<p>“这样你就逃不出去了，就算你是暗能系羽化者，也别想动摇坚如磐石的天使秩序，想用逆向运算无效我的能力就尽管试试吧，哈哈哈 ————”</p>\n<p>帕瓦斯在狂笑，被烧伤而扭曲的脸变得更加可怖了起来。</p>\n<p>“虽然本没想在基路伯的辖区里这么大动干戈，但似乎现在不是省力气的时候了，现在开始，我要用上这次的全力来歼灭你，受死吧，‘原初’。”</p>\n<p>“暗能中枢的功率居然大到这种地步？！” 米斯凯尔有些动摇，“该死，这下糟糕了。”</p>\n<p>暗能系羽化者可以无效对手能力的本质就是，在对手将能量分解为暗能后，可以通过自身对于暗能的元操作，将对手的暗能打回原能量，但这需要至少相等的暗能中枢的运算能力作为基础，使用对象离自身的距离越高，运算的功率需求便指数增长，这点和普通羽化者并无二样。</p>\n<p>面对眼前这种程度的对手，恐怕第一次使用暗能中枢的洛的身体会撑不住。</p>\n<p>没办法，只能走一步看一步了。</p>\n<p>帕瓦斯加速自己，瞬间冲到了米斯凯尔的后方。</p>\n<p>“想学就尽管学吧！” 帕瓦斯握紧双拳，向米斯凯尔的后背挥来。</p>\n<p>米斯凯尔侧过身，并不躲开，而是用右臂挡在胸前，试图挡下这一击后反击。</p>\n<p>米斯凯尔的暗能中枢飞速运算，将攻击的动能全部逆向回去，但在下一瞬间，米斯凯尔便发现这是一个错误的决定。</p>\n<p>帕瓦斯在接触前的瞬间，将拳头周围布满了高速流动的空气将米斯凯尔瞬间弹开。</p>\n<p>“啊 ————” 被弹开的米斯凯尔撞到了风壁后又被弹了回去，高速的气体将米斯凯尔的身体划的伤痕累累，用来防御的右臂被割破了无数道伤口，鲜血浸湿了衣服。</p>\n<p>“该死，居然中的这么简单的戏法。” 米斯凯尔爬起身。</p>\n<p>简单评估了一下身体状况，肋骨断了四五根，右臂骨折，十多处肌肉撕裂，使用暗能中枢进行治疗也得要一会时间，真要命。</p>\n<p>“是我高估你了，你也不过如此。” 帕瓦斯轻蔑地一笑，“看来你的能力局限性也不少，真遗憾啊。”</p>\n<p>刚刚那一下，洛的体力和身体能力下降不少，再这样下去，情况会很更糟糕。</p>\n<p>“抱歉了，洛，要稍微粗暴一点了。”</p>\n<p>米斯凯尔一直保持暗能中枢的功率不超过洛的身体承受范围，但现在看来再这样下去会不妙。</p>\n<p>帕瓦斯又一次加速到洛的身后，打算故技重施，用包裹着高速气流的双拳向洛袭来。</p>\n<p>洛和上次一样没有躲开，而是准备接住攻击。</p>\n<p>“愚蠢！” 帕瓦斯想，但很快发现是自己错了。</p>\n<p>在成倍提高暗能中枢功率的前提下，米斯凯尔扩大了逆向运算的感知域，帕瓦斯的小动作也被一起无效了。</p>\n<p>洛稳稳的接住了两拳，把帕瓦斯拉向自己，用膝击正中帕瓦斯的腹部。</p>\n<p>“啊 ——————” 帕瓦斯被踢中，难以呼吸，不停的想用能力拉开距离，但发现就是使不出来。</p>\n<p>米斯凯尔并不打算就此放手，而是不断的攻击帕瓦斯，似乎是想一口气结束战斗。</p>\n<p>帕瓦斯这种等级的羽化者，身体机能也是怪物级别的，但面对这种暴风骤雨般的攻击，还是受到了大量伤害。“可恶，使不出能力。”</p>\n<p>“咳 ————” 米斯凯尔突然松手，将帕瓦斯踹开并后退拉开了距离，同时嘴角流出了一丝鲜血，半蹲在地上。</p>\n<p>“居然敢这么对待六合天使的统领。” 帕瓦斯爬起身，大口的喘着粗气，显然受到的伤害不轻，“胆子不小。”</p>\n<p>“打到这种地步，还不肯认输吗？” 米斯凯尔强忍着刚刚超负荷使用能力带来的痛苦。</p>\n<p>刚刚短短几秒钟内，帕瓦斯尝试使用了无数次能力，米斯凯尔感受到洛的身体实在撑不住了，这才停止攻击。</p>\n<p>“认输？你可真敢说。” 帕瓦斯站了起来，“卑微的反抗者，无知之徒。”</p>\n<p>“不妙 ———— 居然还有战斗能力。” 米斯凯尔想。</p>\n<p>刚刚的攻击算是破釜沉舟，但没能决出胜负，反而消耗太大，洛的身体别说继续战斗了，现在已经麻痹到了无法动弹的地步。</p>\n<p>对方只要再攻过来，就结束了。</p>\n<p>“哼，看来你的消耗也不小。” 帕瓦斯重整旗鼓，准备再一次进攻。</p>\n<p>“到此为止了吗？”</p>\n<p>突然，包围着米斯凯尔和帕瓦斯的风暴迅速变小，最后消失了。</p>\n<p>“这是？” 米斯凯尔看着消失的风暴外，澪站在一堆倒下的执行队中间，向这边走了过来。</p>\n<p>“澪？”</p>\n<p>“居然破除了我的风暴，你这家伙 ————” 显然帕瓦斯也对澪的表现感到惊讶。</p>\n<p>澪一步步的逼近帕瓦斯，右手甩出了一支药剂一样的玻璃容器，打碎在地上，并不说话。</p>\n<p>“究竟是怎么回事？” 帕瓦斯怒吼。</p>\n<p>“你这副伤痕累累的身体，要同时对付我们两个人吗？” 米斯凯尔硬撑着站了起来。</p>\n<p>“少罗嗦！”</p>\n<p>帕瓦斯举起右手，指向澪。</p>\n<p>“快躲开！” 米斯凯尔很想阻止帕瓦斯，但身体却动不了。</p>\n<p>高速的空气弹向澪飞去，但却在接触到澪的瞬间失去了速度。</p>\n<p>“无效了？” 帕瓦斯咬紧牙关，“还是说，和我同系？能够抵消我空气弹的动能系羽化者，这和情报差的太多了。”</p>\n<p>“抵消了？” 米斯凯尔也感到不可思议。</p>\n<p>刚刚见面的时候有偷偷感知过澪的暗能中枢的情况，数据上并不是很强，或者说算是很弱的。</p>\n<p>澪应该做不到抵消帕瓦斯子弹这种程度才对，刚刚到底？</p>\n<p>不过此刻的洛的身体已经完全无法使用暗能中枢，米斯凯尔没办法使用感知能力。</p>\n<p>“难道说，是‘撒旦之力’吗？” 帕瓦斯脑中闪过一个念头，“这家伙居然是唤名羽化者？”</p>\n<p>澪此刻主动加速接近了帕瓦斯，用极快的速度挥出一拳，帕瓦斯用手臂勉强招架住了，但还是伴随着骨头断裂的声音被打退了一段距离。</p>\n<p>眼神涣散的澪冷漠地注视着帕瓦斯的眼睛。</p>\n<p>“好重的攻击。这种状态，果然是‘撒旦之力’吗。可恶，要不是‘天使缚锁’————” 见到这种被逆转的局势，帕瓦斯终于放弃了，“‘原初’加上一个唤名羽化者，这次是我失算了，倒也确实让我看到了不少意外。下次见到你们，会连今天的帐一起算！”</p>\n<p>说完，便飞速远离了两人，向着相反方向加速离开了。</p>\n<p>“终于结束了”，米斯凯尔僵硬地转向澪，“说是来救你，结果最后关头反而被你救了。”</p>\n<p>澪并没有回应，而是矗立在原地不动。</p>\n<p>一段时间后，很快米斯凯尔发现了澪的状态不对，“澪 ———— 小姐？你没事吧？”</p>\n<p>澪回过头，双目失神，倒了下来。</p>\n<p>米斯凯尔拖着沉重的身体，走到了澪的身边。</p>\n<p>“你没事吧？” 米斯凯尔焦急的询问。</p>\n<p>“你 ———— 叫米斯凯尔 ———— 对吧？” 倒在地上的澪脸色煞白，“帮我转告洛，把你卷进来，真的很对不起 ————”</p>\n<p>“不，这究竟是怎么回事？” 米斯凯尔感觉到澪的呼吸渐渐微弱。</p>\n<p>“———— 也要拜托你 ————— 保护好洛了 —————” 澪说完便失去了意识。</p>\n<p>是刚刚那个吗？米斯凯尔突然想到澪打碎的那支药剂。</p>\n<p>不管怎样，得先把她带回去，可是现在洛的身体，做的到吗？而且，带回去了，谁又能救她？</p>\n<p>米斯凯尔突然想到了希尔娜临走时那张纸条。</p>\n<p>“还好，手机还能用。” 米斯凯尔从胸前的口袋里掏出了一个手机，拨通了纸条上的号码。</p>\n<p>“真是意外。” 不等米斯凯尔说话，电话的那头的声音便传了过来。</p>\n<p>“你是？”</p>\n<p>米斯凯尔发现，洛的记忆中，有过这个声音。</p>\n<p>“卡娜，你应该有过印象。”</p>\n<p>话音刚落，一个齐腰长发的女生从天而降，落在了米斯凯尔的面前。</p>\n<p>“说实话，虽然有‘天使缚锁’的存在，但没想到你们真的能击退天使统领。” 卡娜拨了拨散开的长发，“刮目相看，不过看你们的情况，也不容乐观呢。”</p>\n<p>“能麻烦你帮忙的，对吧？”</p>\n<p>卡娜弯下腰背起澪，向米斯凯尔伸出左手，“抓紧。”</p>\n<p>米斯凯尔看着卡娜背上气若游丝的澪，握住了卡娜的手。</p>\n<p>“还算听话。” 卡娜微微一笑，米斯凯尔能感受到卡娜正在运转暗能中枢。</p>\n<p>过了十几秒，周围的场景突然变成了室内，场景布置的像一个医学实验室。</p>\n<p>“空间转移的能力吗？势能系的羽化者。”</p>\n<p>“不愧是‘原初’，不过夸奖也到此为止哦。” 卡娜把澪放在这个房间中间的一张床上，“直觉告诉我，受伤很严重。”</p>\n<p>“怎么回事？”</p>\n<p>卡娜从口袋里拿出一个塑料袋子，里面是一个个的玻璃碎片。</p>\n<p>“在现场发现了这个，需要分析一下这个东西才行。”</p>\n<p>“什么时候？” 米斯凯尔完全没有她捡起碎片的印象。</p>\n<p>卡娜并不回答，“手臂上有两个相同的针孔，之前可能已经使用过一次这种东西了。”</p>\n<p>“这东西是什么？”</p>\n<p>“不清楚，但可以猜测，这孩子可能依靠这个东西获得了暂时匹敌帕瓦斯的力量。” 卡娜转身给澪插上了各种仪器，随后将塑料袋中的碎片倒出一部分在一个试管里。</p>\n<p>“在分析完成之前，只能依靠这些来维持一下生命了。”</p>\n<p>“为什么要帮我们？你们的目的是什么？就仅仅是向让我加入你们的组织吗？” 米斯凯尔质疑。</p>\n<p>“目的吗？” 卡娜微笑，“姐姐可能有这种东西，但我没有哦。”</p>\n<p>“什么意思？”</p>\n<p>“我只是打赌输了，履行赌约而已，是真的哦。”</p>\n<p>米斯凯尔愈发不能理解，“赌约？”。</p>\n<p>“我和姐姐赌你们和帕瓦斯那个家伙谁会赢。” 卡娜一边往试管中注入溶剂，一边说，“顺带一提，我是赌你们会输的哦。”</p>\n<p>“姐姐是指那个叫希尔娜的女人吗？”</p>\n<p>“嗯，没错。” 卡娜熟练地摇匀试管，将溶液分成数份，分别加入各种试剂。</p>\n<p>“难怪都是怪人。”</p>\n<p>“承蒙夸奖。” 卡娜将处理完的试管组放进了一个仪器内。</p>\n<p>“不过话虽如此，亲眼看过你有趣的能力后，我对你们产生了很大的兴趣，这点倒是真的哦。” 卡娜背对着米斯凯尔。</p>\n<p>“有兴趣的话，刚刚不过来搭把手吗？在我答应加入你们组织的情况下，你应该算是友军吧。” 米斯凯尔不满。</p>\n<p>“啊啦，这你可真是难为我了，兴趣归兴趣，我从一开始就没有参与的打算哦，况且我的能力可不是那么方便使用的东西。”</p>\n<p>卡娜走到另一台仪器的控制面板前，操作了起来。看起来是连接着澪那张床的仪器。</p>\n<p>“在动手解决问题方面，需要好几秒计算坐标才能发动能力的我，可不能和你这种‘原初’相提并论。”</p>\n<p>“这样的话，那确实是强人所难。” 米斯凯尔显然也注意到了这个空间转移能力的致命缺点。</p>\n<p>“血氧浓度居然还没有缓和，明明已经输送了这么长时间氧气了。” 卡娜看着眼前的仪器，感到不可思议。“难道说 ————”</p>\n<p>“真是乱来的孩子，” 卡娜看了看另一块显示屏，显然药剂的分析结果已经出来了，“果然，这种药剂的副作用比我想的还要糟糕。”</p>\n<p>“澪怎么了？”</p>\n<p>“血红细胞大量坏死，同时羽化者的失血保护没有触发，说明暗能中枢也有受损，供氧系统已经全面崩溃了，再这样下去会窒息而死。”</p>\n<p>“那要怎么办？” 米斯凯尔意识到了问题的严重性。</p>\n<p>卡娜并没有立刻回答，而是快步走进里面的房间，拿出了一支注射器和一小瓶药水，熟练地注射进了澪的体内。</p>\n<p>“肾上腺素。” 卡娜抬头对着米斯凯尔说，“这样能够稍微缓解一下。”</p>\n<p>“重塑供氧系统。” 卡娜略加思考，“要想保住性命，只能如此。”</p>\n<p>“怎么重塑？”</p>\n<p>“移植骨髓、更换血液。” 卡娜看着米斯凯尔，“虽然你的身体状况也不太好，但 ————”</p>\n<p>“没问题。”</p>\n<p>“事先说一下，因为是整个系统的重塑，会用掉你身上一半多左右的血液和骨髓，这可是够正常人死几次。” 卡娜长呼一口气，“从你现在的状况来看，能不能成功还是未知数，这样也没问题吗？”</p>\n<p>羽化者的身体依托于暗能中枢建立了各种保护机制，包括失血保护，洛作为‘原初’的宿主，当然也不例外。</p>\n<p>“如果这样是最有效的办法的话，值得一试。” 米斯凯尔说。</p>\n<p>米斯凯尔隐约记得，自己在还是人类的时候，曾经有一瞬间的绝望感，所爱之人死在了自己眼前，自己却无力回天。至少这次，不要再度留下遗憾。</p>\n<p>“死了我可不管哦。” 卡娜打开澪身边一个床位的开关，“做好决定就躺上去吧。”</p>\n<p>米斯凯尔慢慢躺了上去，“开始吧，越拖澪就越危险。”</p>\n<p>“我知道了。” 卡娜迅速做着准备。</p>\n<p>随着机器低沉的声音渐渐响起，一阵阵暖流从米斯凯尔的手臂缓缓流出，钻头也扎进了米斯凯尔的肋骨。</p>\n<p>尽管在暗能中枢的运转下，骨髓细胞正以最快的速度分化，但米斯凯尔本身就疲惫的意识还是逐渐变得模糊。</p>\n<p>周围的声音、眼前的事物，都渐渐变得糅合了起来，思考也变得缓慢，这是暗能中枢正在降低身体机能来维持生命。</p>\n<p>沉闷的房间里，一个安静运转的机器连接着两边的生命，一个黑发少女正全神贯注地操作着眼前的仪表盘，时间一分一秒的流逝。</p>\n<p>“可以了，” 不知过了多久，卡娜从仪器后走了出来，“亏你用这种身体状况坚持到现在，就算在羽化者里，这也是个奇迹了。”</p>\n<p>“这里是 ————” 洛从沉睡中醒来，“哪里？”</p>\n<p>“果然还是有点迷糊了吗？” 卡娜擦了擦额头的汗。“嘛，不管怎么样，先和你说下吧，虽然有些曲折，但结果来说还算顺利。”</p>\n<p>“是吗？” 洛扶了扶头，突然想起来了什么，“这么说，姐姐得救了啊，谢谢你，卡娜同学。”</p>\n<p>“这个语气，是洛吧，人格切换倒是挺自然的。” 卡娜坐在了洛的旁边，“不必客气，毕竟你也算是我们‘代行人’中的一员了，我可不希望新成员刚加入就哭丧脸哦。”</p>\n<p>洛看了看澪，面色显然有所好转，松了口气。</p>\n<p>“‘代行人’吗？具体要做什么？”</p>\n<p>洛此时对米斯凯尔的所作所为完全没有实感，但这些确实无比真实的记忆。</p>\n<p>从把身体交给米斯凯尔起，到现在的所有事情，洛都清楚地记得，仿佛当时就是自己一样，这种微妙的割裂感，实在难以用言语描述。</p>\n<p>“没和你说过啊，姐姐还是老样子。” 卡娜摆了摆手，“我也不擅长解释这种东西，总之就是根据命令做事，没多复杂。”</p>\n<p>“有点笼统啊。”</p>\n<p>“比起这个，那个叫米斯凯尔的暗能体状况怎么样？刚刚他的消耗可不小。”</p>\n<p>“刚刚他说要休息一会。” 洛苦笑，“不过这种附身的感觉还真是有点奇妙，好像是自己，又好像不是自己，总有一种不真实感。”</p>\n<p>“附身吗？其实并不是。你所感受到的，是暗能体导致的获得性解离症。” 卡娜一字一句地说道。</p>\n<p>“获得性 ———— 什么？”</p>\n<p>“获得性解离症。” 卡娜解释道，“暗能体是外来的独立人格，就比如米斯凯尔，和主人格，也就是你自己共用一个身体，这会让你对自身的认知出现偏差，导致出现这种解离症的症状。”</p>\n<p>“也就是说，羽化者和暗能体不是简单的附身关系，而是双重人格是吗？” 洛听说过双重人格的概念，这是一种后天性的精神疾病。</p>\n<p>“类似，不过有一定的区别，自我衍生的双重人格之间不共享记忆，无法交流，无法控制身体的主导权。但暗能体和主人格由于暗能中枢的引导可以共享主人格的记忆，并且只要当前的人格愿意，可以随时切换人格。羽化者就是这样的存在，话虽如此，本质上还是两个人格使用一个身体，长久以往会导致很严重的精神类并发症。” 卡娜在说最后一句话时，语气明显加重了一些。</p>\n<p>“这样啊。那只要接受对方的存在，那么认知就不会出现偏差了，对吧？”</p>\n<p>“理论上说是这样的，毕竟导致解离症的不是暗能体本身，但接受不是说说这么简单，人格层面的认同感的产生是不可控的。”</p>\n<p>“我会努力的。”</p>\n<p>“完全没听懂啊。” 卡娜叹了口气，“算了，还是说说这个叫澪的孩子的情况吧。”</p>\n<p>“刚刚的治疗不是成功了吗？”</p>\n<p>“但是由于缺氧而导致已经损伤的神经细胞是没有办法修复的，因为神经细胞的形态坏死不可逆，现在只是保住了性命而已。” 卡娜摇了摇头，“目前损伤程度还不清楚，但已经进行了这种程度的修复，多少也应该有点清醒的迹象，但现在 ————”</p>\n<p>“还不能放下心来是吗，为什么姐姐要用这么危险的东西？” 洛显得很沮丧，“到底为什么姐姐要去做这么危险的事情。”</p>\n<p>“你问为什么？” 卡娜抬头望向窗外，“是啊，为什么呢？为了反抗六合天使的秩序，需要做到这个地步吗？我不理解。”</p>\n<p>洛显然注意到了卡娜说话时表现出的对六合天使的态度。</p>\n<p>“卡娜同学，对你来说，六合天使，究竟是什么样的存在？”</p>\n<p>“对我而言，六合天使的是秩序的化身，终结人类的战争，守护人类的未来，就是这样的存在。”</p>\n<p>“那么，为什么要帮我们，我刚刚是在和六合天使为敌吧。” 洛抛出疑问，“这和你对六合天使的看法是矛盾的。”</p>\n<p>“并不矛盾，我信仰的是六合天使的意志，并不代表我要维护六合天使所属的一切。</p>\n<p>“天使秩序的前提是建立在管理者有着绝对的压制力和绝对的纯洁性上的，两者只要有一个出现问题，那么秩序本身将荡然无存。” 卡娜突然变得认真起来。</p>\n<p>“什么意思？”</p>\n<p>“六合天使的秩序不管是在过去、现在、还是将来，都以确保人类的生存为第一要义，所以我会毫不犹豫的维护它。”</p>\n<p>卡娜顿了顿。</p>\n<p>“但是，说到底，并不存在真正的天使，六合天使的统领也都是人类，是人类就会犯错，至少帕瓦斯的做法，我不能认同，这只会让人类重回纷争。”</p>\n<p>“在我看来，虽然已经生活在六合天使的统治之下，但似乎大家对六合天使依然所知甚少，是因为六合天使的刻意封锁消息吗？”</p>\n<p>“本来完成结束世界大战和统一战后世界的事迹，应该能够让六合天使的统领名字如雷贯耳是吗？” 卡娜笑了笑，“不过这是‘原初’的天使统领的意思，而且据说他似乎有类似的能力可以降低普通人对于六合天使的观测实感。”</p>\n<p>“‘原初’的天使吗？米斯凯尔也是‘原初’，是指的同一个东西吗？”</p>\n<p>“是的，‘原初’是指能力基于直接控制暗能的羽化者，据说世界上只有两个，依据现况看指的应该就是天使统领撒拉弗和米斯凯尔了。如同六合之名，天使统领一共六个，一个是‘原初’的天使，代号是炽天使撒拉弗，剩下的五位代号分别是智天使基路伯、座天使托罗努斯、主天使托米尼恩斯、能天使卫尔特斯、力天使帕瓦斯，顺带一提这些代号全部来自暗能体名。”</p>\n<p>“第一次听说，那么，你的行动动机是缘于六合天使内部出现了问题是吗？” 洛突然话锋一转。</p>\n<p>“这一点无可奉告哦。” 卡娜收起严肃的表情，又回到了令人捉摸不透的微笑状态。</p>\n<p>“我知道了，最后问一句，‘代行人’的命令来源，是六合天使统领吗？”</p>\n<p>“没错，姐姐应该跟你提过，来自智天使基路伯。”</p>\n<p>“天使秩序吗？” 洛砖头看着昏睡中的澪，他的疑惑并未完全得到解答。自己这边先不提，姐姐之前提到的，那个叫沃卡斯的人，是反抗军的领袖吗？反抗军是因为对六合天使的秩序不满起义，还是另有他因？</p>\n<p>洛想知道，值得姐姐拼上性命的，到底是什么？</p>\n<p>得去问一问了，那个可能知晓答案的人。</p>\n<p>突然，洛想到一个一开始就应该问的问题。</p>\n<p>“卡娜同学，所以这里到底是哪里？”</p>\n<p>“噗嗤 ————” 卡娜突然笑了出来，“忘了还没和你说这个啊，这里是阿斯特雷亚高中的地下基地，虽然一开始是姐姐为了自己方便才搭建的，但现在几乎都是我在使用。”</p>\n<p>“在学校里面，不过倒也不是很意外，我要出去一下，是用那边的电梯吗？”</p>\n<p>“那个啊，那个用不了，有一次不小心被姐姐搞坏了，走那边的楼梯吧，出门是实验室的储物间。”</p>\n<p>“那我去去就回，澪姐姐可以继续拜托你吧？”</p>\n<p>“放心吧，只要你还是‘代行人’，我就是你的伙伴。” 卡娜面露微笑。</p>\n<h3 id=\"代行人\"><a class=\"anchor\" href=\"#代行人\">#</a> 代行人</h3>\n<p>天使纪元五十年十月十五日。</p>\n<p>天空灰蒙蒙的，洛打开窗户，一阵微风夹杂着清晨的湿气扑面而来。</p>\n<p>“真是少见，卫星区的风。” 希尔娜坐在沙发上，喝着茶。</p>\n<p>坐在旁边的一个外表叫做澪的红发女孩，躯体里的，是一个叫伊瑟芙尼的暗能体。</p>\n<p>“这么急着找我来，是有什么新的发现吗？” 洛坐到了沙发对面，双眼注视着如同人偶一般的红发女孩。</p>\n<p>“澪的脑前额叶部分虽然有受损，但是，就算对于一般人类，这种程度也不至于导致这么长时间无法苏醒。”</p>\n<p>希尔娜看着身边的女孩，“况且，对于羽化者而言，这种损伤完全可以自动修复。目前来看，已经恢复的差不多了。”</p>\n<p>“那么，到底是什么原因？” 洛双眼暗淡。</p>\n<p>“据我所知，恐怕是‘人格’的根本受到了严重损伤。” 希尔娜放下了茶杯，表情凝重。</p>\n<p>“‘人格’的根本？”</p>\n<p>“是用以保持自我的力量，或者，用更通俗的说法，叫做灵魂。” 希尔娜说，“灵魂是由暗能组成，而暗能可以通过暗能中枢转化为可以使用的任何形式的能量。”</p>\n<p>“所以，灵魂，是可以作为能量消耗的？”</p>\n<p>“没错，羽化者消耗用以维持自我的暗能可以获得远超平常的力量，但是同时，灵魂也会因此变得稀薄，暗能是具有负压强的物质，越是稀薄，越是难以维持本来的形态，当灵魂的形态出现松弛，人格便也难以维系。”</p>\n<p>洛想起来，米斯凯尔好像也说过类似的推断。</p>\n<p>“这样啊。” 洛黯淡的双眼，又似乎失去了几分神采，“姐姐那个时候......”</p>\n<p>“没错，用灵魂换取力量，就像是一场和‘恶魔’交易。” 希尔娜，“撒旦之力，在六合天使中，是这么称呼这种力量的。而且，澪消耗的灵魂量十分巨大，几乎已经不可能自然恢复了。”</p>\n<p>“那，还有办法补救吗？”</p>\n<p>“灵魂的构成十分复杂，外部重构灵魂十分困难。使用过撒旦之力，却还依然清醒的，我所知道的只有一例，炽天使撒拉弗。”</p>\n<p>“撒拉弗？”</p>\n<p>“是的，曾经为了终结战争，使用了‘撒旦之力’，灵魂却没有想澪一样被稀释，但在稳固住天使秩序之后就很少露面，所以现在六合天使实际上只有五个统领在进行管理。如果是他的话，应该会有办法。”</p>\n<p>“唯一的办法就是去找炽天使吗？” 洛感到了又一阵失落。</p>\n<p>“不过，目前而言，你是没有资格见到炽天使的。”</p>\n<p>“可恶，要是我能早点发现的话，说不定情况还没这么严重。” 米斯凯尔自责的说，“抱歉，明明有我在。”</p>\n<p>“不怪你，用我这副身体和六合天使的统领对抗，你已经做的很出色了，是我没有体会到姐姐当时的想法，明明已经察觉到了姐姐的不对劲，我却什么都没有做。”</p>\n<p>那天去姐姐的藏身之处找埃德尔询问情况，却发现那边已经变成了一片废墟，埃德尔也不见了踪影。</p>\n<p>现在让姐姐恢复的唯一希望是六合天使的最高统领，既然如此，确实有必要和六合天使走的更近一点。</p>\n<p>洛看向窗外，“你应该还有别的事情要找我吧。”</p>\n<p>“‘代行人’的第一个任务。最近出现攻击亚特兰提斯市议会大楼的恐怖分子，你也听说了吧。”</p>\n<p>“最近的大爆炸案里，炸毁了亚特兰提斯市议会政府的那个吗？是和羽化者有关的案件吧。”</p>\n<p>“没错，羽化者造成混乱是六合天使尤其不希望看到的，人物很简单，在最小的代价下解决这个问题，方式不限。” 希尔娜放下茶杯，“因为某些原因，以后这种委托会越来越多。如果希望见到炽天使，就展示你对六合天使的价值吧，毕竟你可是‘原初’，能者多劳。”</p>\n<p>希尔娜说完，递给了洛一张卡片，“这是六合天使的通行证，用这个你可以自由进出各种地方。”</p>\n<p>“明白了。”</p>\n<p>洛起身就要离开，转身看了看伊瑟芙尼，“你叫伊瑟芙尼吧，以后请多指教了。”</p>\n<p>对着姐姐的身体叫其他名字，洛感觉到不小的违和感。但记得卡娜说过，其实移植治疗刚开始并不顺利，伊瑟芙尼在关键时刻接管了身体，才阻止了身体的继续崩坏。</p>\n<p>伊瑟芙尼并没有回应，只是点了点头。</p>\n<p>“其实，我在治疗的时候就发现了，澪并不适合做羽化者。因为她的暗能中枢容量过小，难以直接作为人格的凭依点，需要针对人格进行特化，并且应该早就在进行了。这也导致伊瑟芙尼如果想要觉醒只能去和原生的人格抢夺空间，但她没有选择这么做。” 卡娜突然出现在了洛的面前，“在和帕瓦斯战斗的时候，澪的暗能中枢容量短时间提高了运算能力，迅速完成了这一步骤。”</p>\n<p>“所以现在澪的人格是被交换到了暗能中枢里去了是吧。”</p>\n<p>“没错，一般来说羽化者的暗能中枢会优先特化暗能体的人格，但澪的暗能中枢特化的是澪自己的而不是伊瑟芙尼的人格，也就是说她本来的计划就是将身体全盘交给伊瑟芙尼。” 卡娜接着说，“顺带一提，当时匹敌帕瓦斯的，恐怕就是伊瑟芙尼的人格。”</p>\n<p>“我回房间了。” 伊瑟芙尼依然面无表情，径直往里面的房间走去。</p>\n<p>“你们非要当着面说吗？” 希尔娜没好气地说道。</p>\n<p>“抱歉抱歉。” 卡娜吐了吐舌头，“麻烦帮我和伊瑟芙尼道个歉，我们走吧，洛。”</p>\n<p>“嗯。” 洛看着伊瑟芙尼的身影消失在阴影中。</p>\n<hr />\n<p>亚特兰提斯市主城区的大街上并没有日常的繁华，路上行人并不多，显得有些冷清。看来是市议会发布的关于炸弹犯的通缉令，造成了不小的恐慌。</p>\n<p>“这里就是爆炸现场吗？” 洛搭着卡娜的肩膀，出现到了议会政府的前面的绿化带旁。</p>\n<p>即使是在亚特兰提斯市的市中心，议会政府都是最为华丽的一栋建筑，但是眼前的景象仿佛时间回退到了五十年前的世界大战一般，甚至可能比那还要惨烈。整个建筑被炸成了碎渣，残存的瓦砾以发散状散落向四周，地上有些还没有来得及清理的几近炭化的白骨，空气中还弥漫着一股淡淡的焦味。</p>\n<p>“爆炸的时候，议会的议员基本都集中在最中间的大堂里，在准备审议某个案件，因此伤亡情况很严重。”</p>\n<p>“爆炸物是什么？”</p>\n<p>“没有线索，这就是为什么这个案件被交到我们手上的原因。” 卡娜背过手，“议会的所有技术手段全部用上了，连爆炸物是什么都没有查出来，现场完全没有任何称得上是证据的东西。”</p>\n<p>“没有爆炸物的爆炸啊。” 洛看着这一片废墟，“所以才怀疑是羽化者吗？”</p>\n<p>看来事态在往六合天使所不希望的方向加速发展，因此，才需要同为羽化者的 ' 代行人 ' 介入啊。</p>\n<p>不过‘代行人’小队，算上洛也不过才五个人，听希尔娜说，其余两个人正在调查沃卡斯的事情。</p>\n<p>“但是即使是擅长热控制的内能系羽化者，要想凭空产生这种程度的爆炸，也不是一件很容易的事情，”</p>\n<p>从上次和帕瓦斯交手到现在，洛也在米斯凯尔的帮助下逐渐熟悉自己暗能中枢的使用，也了解了相关知识。正是因此，洛深知制造这起案件的人，并不简单。</p>\n<p>“而且要在爆炸的安全距离之外引爆的话，说他有全盛状态的天使统领级别的实力都不过分。” 卡娜补充，“这种级别的羽化者继续进行大规模暴动的话，后果不堪设想。”</p>\n<p>“爆炸波及的范围大概在方圆两百米，暗能中枢要想在这个距离下输出这么庞大的功率，从现状来看，完全不现实。” 洛冷静的分析。</p>\n<p>“或者不一定要考虑安全距离，如果对方不在乎自身，近距离甚至以自身为中心引爆也不是不可能。” 卡娜若有所思，“这场爆炸的死伤者名单，我去拿一下，稍等。”</p>\n<p>“嗯，我留在这里调查，分头行动吧。”</p>\n<h2 id=\"复仇的焰火\"><a class=\"anchor\" href=\"#复仇的焰火\">#</a> 复仇的焰火</h2>\n<p>洛在周围环视几圈后，翻过警戒线，向爆炸的中心点走去。中心是一个规则到诡异的圆形坑，铺满了散落的烟尘。</p>\n<p>“一块完整的建筑结构都看不到，就连大楼的钢筋都被燃烧殆尽了吗，真是恐怖的威力。” 洛感叹，“应该是使用了那种叫做‘撒旦之力’的东西吧。”</p>\n<p>“先不急着下定论，” 米斯凯尔缓缓地发出声音，“以正常人体的能量密度而言，确实只有把灵魂的暗能直接转化为能量，才有可能制作出如此大的爆炸，但我并不认为策划这起爆炸案的人会如此做，或者说，无法理解。”</p>\n<p>“为什么这么说？”</p>\n<p>“我问你一个问题，我并没有告诉过你，但可能你认为自己已经知道答案了，你知道暗能体是什么吗？”</p>\n<p>“来自暗能中枢的人格？就像你一样？”</p>\n<p>“并不完全对，我确实是凭依在你的暗能中枢的人格，但在成为暗能体之前，我和你一样是一个完整的人类。”</p>\n<p>“你说什么？” 洛显然对这个答案感到了惊讶，洛一直认为，暗能体是人造的。</p>\n<p>“即使人类的科技水平到达顶峰，即使人类已经可以将人格从肉体剥离，即使人类已经明白人格就是暗能组成的特定编码，也依然无法完整解析出人格本身的编码方式。” 米斯凯尔说，“其实所有的暗能体都是上一世代被剥离出肉体的人格。人无法直接创造人格，暗能体就是人类的人格，只不过被提前写入了各种暗能中枢的使用记忆罢了。”</p>\n<p>“原来是这样，很意外。” 洛刚刚才明白了暗能体的本质。</p>\n<p>“‘暗能体’按照能力类别分为各种系，同系同源。但就本质而言，源只有一个，那就是暗能。暗能的使用过于复杂，并且能承载这种记忆量的人格凤毛麟角，于是上个世代的人类将这种信息拆分开来，按照特定的使用方式进行封装，然后再把这些封装的记忆写入人格，就变成了子系的能力，从这方面讲，所有能力的本质都是暗能系，因此暗能系的暗能体被称为‘原初’。”</p>\n<p>“有点难懂，所有的能力都是来自暗能系吗？”</p>\n<p>“是的，暗能体之间除了关于暗能中枢的记忆量以外，并没有绝对的区别。并且，记忆容量大的人格在被制作为暗能体时会被赋予名字，用来代表他们有余力写入或多或少的暗能操作记忆，虽然由于写入不完整，不能像‘原初’一样使用自如，但可以以自身灵魂为燃料使用能力，被称为唤名暗能体，与之对应的便是无名暗能体。”</p>\n<p>“所以你是被写入了完整的暗能操作记忆？” 洛听到这里，突然再次感觉到米斯凯尔的独特性。</p>\n<p>“没错，至少我醒来后的记忆是如此，但是我几乎回忆不起来我变成暗能体前的记忆，只剩下一些模糊的碎片。” 米斯凯尔叹了口气，“或许我在被制作时出了点什么问题。”</p>\n<p>“所以，这些和刚刚你说的有什么关系吗？”</p>\n<p>“使用撒旦之力，必然会涉及暗能的原生操作，这就需要对方是唤名暗能体。可我想不到身为唤名暗能体这么做的理由。”</p>\n<p>“理由吗？” 洛表示疑问。同时，想到了姐姐，这么说，姐姐的撒旦之力，是伊瑟芙尼使用的吗？为了救自己？但自己和伊瑟芙尼没有什么关系，难道是和米斯凯尔有关？</p>\n<p>“因为没有必要。我刚刚也提到过，唤名羽化者的脑容量普遍很高，战斗智商不会很低，使用这种爆炸去杀人完全是低效做法。” 米斯凯尔若有所思，“除非有什么非这么做不可的理由。”</p>\n<p>“有点道理，但是如果被杀的人里也有唤名羽化者，必须使用这种夸张的威力呢？”</p>\n<p>“那倒也是，毕竟由于灵魂的结构过于复杂，” 米斯凯尔说，“以灵魂保护下的肉体为能力对象，基本是无法进行运算的，因此羽化者很难对拥有灵魂的其他个体直接使用能力，只能通过干涉周围的环境进行战斗。对手如果确实很强，做到这种地步也是有可能的。”</p>\n<p>“那是不可能的 ———— 啊 —————”</p>\n<p>不知什么时候，卡娜突然出现在了洛的身后，但却一个踉跄差点没站稳。</p>\n<p>卡娜本想突然出现在洛的背后抱住洛吓他一跳，但位置却差了一个身位。</p>\n<p>“真是过分，居然用能力干扰我的运算。” 卡娜不满。</p>\n<p>其实，卡娜的能力看似是瞬间移动，但并不是这么好用，其本质是在短时间进行预计算好的无数次的短距离位移。</p>\n<p>“所以你是说什么不可能？”</p>\n<p>“议会的议员，六合天使都会进行详细的调查，其中不可能有唤名级别的羽化者。” 卡娜掏出一个文件夹，“我去拿到了受害者的资料，你们有什么进展吗？”</p>\n<p>洛回过头，看到了卡娜手里的文件夹。“动作挺快的，我这边还没看出什么头绪。”</p>\n<p>“还行，和上面多聊了一会，这是刚刚整理的案件相关资料。” 卡娜递过文件夹，“事发时在场 42 人，死亡 41 人，受伤 1 人。”</p>\n<p>“基本没有幸存的啊，连尸体也被燃尽。” 洛看了看厚厚的一叠资料，“不过，这种爆炸，倒不如说那个只是受伤的人才是奇迹吧。”</p>\n<p>“还有这个，我向上头要了过来。” 卡娜递过一个手机，里面是案发时，议会大楼各个角落的摄像机传出来的最后的景象。</p>\n<p>洛一个个看了过去，所有视频都是无一例外地突然四处爆燃，像是几处空气本身被点燃一般，爆燃的时间完全一致。</p>\n<p>“这种情况，看来是内能系的羽化者没错了。” 米斯凯尔默默地说道。</p>\n<p>由于受伤的只有一个，自然是从这里先下手。</p>\n<p>“劳伦斯。拉妮。” 洛念出来受伤者的名字，“亚特兰提斯市的律师，为什么律师这个时候会出现在议会政府？”</p>\n<p>“事发是在上午，其实当时议会正在处理一宗特殊的案件，原定下午开始正式进行审判，拉卡夫作为辩护律师提前去和委托人做辩护内容的最后的确认。”</p>\n<p>“特殊的案件？”</p>\n<p>“九年前的特大杀人案，亚特兰提斯的市长带着亲信和家眷出巡时遭遇袭击，凶手把在场的所有受害者分尸了。时间发生在白天，最后仅剩随行的市长秘书一人活着，因此这个秘书被列为重点嫌疑人接受调查。他的名字叫温迪卡。萨尔。”</p>\n<p>“动机呢？政变？仇杀？情杀？”</p>\n<p>“当时完全没有动机，并且证据链极其不完整，因此当时并没能定罪，这个案件被拖到了现在。”</p>\n<p>“所以现在的这宗特殊案件，就是关于这件事的？”</p>\n<p>“没错，议会的执法部门宣称找到了新的决定性证据，重启了这个案件，据说是发现了这个秘书在那时的犯罪日记。”</p>\n<p>“日记这种东西也可以是决定性证据吗？” 洛表示疑惑。“而且日记这种东西，是怎么弄到的？”</p>\n<p>“有人匿名检举。笔迹吻合，手法吻合，并且附带了最重要的作案动机。” 卡娜把洛手中的文件夹翻到最后，露出了一个手写稿，“这是复印件。”</p>\n<p>洛看着密密麻麻的字，不由得叹了口气。</p>\n<pre><code>天使纪元41年 七月十一\n    你一定很享受为万人所景仰的感觉吧，所谓的市长。\n    因为你努力扮演为亚特拉提市民而战的政客，我曾经以为你是正义的伙伴，就像大多数人一样。但直到那个时候我才知道，你风光无限的背后，有一个多么龌龊的人格。你暴虐，你荒淫，你无度，你人性泯灭，你将你罪恶的魔爪伸向了无数无辜的孩子。\n    我是一个失败的父亲，为了这可笑的体面，我竟没有勇气去面对我自己的女儿，仅仅因为她无名无份，是妓女的孩子，也是我的私生女，让她从小在孤儿院长大，我只敢远远地看着她，以市长秘书这一冠冕堂皇却又无比遥远的身份去接济孤儿院，并借口送给了她一个蓝色的吊坠。\n    她的笑容，是我心中的太阳。\n    但，这一样也是噩梦的开始。\n    我并未注意到孤儿院的孩子在不断地无故减少，直到有一次，我忐忑的目光没有搜寻到我的太阳。\n    我一度认为她被人领养，但我在孤儿院没有找到关于她的任何资料。\n    仿佛，她从未存在过这里。\n    为了市长的各种日程，我过度工作导致身患疾病，已经不可能再有孩子了。我快疯了，她是我在这个世上唯一的希冀。\n    就在我陷入绝望，准备放弃的时候，你车库门前的吊坠又再次将我推入了真相的深渊。\n    蓝色的吊坠，像她的眼睛一样清澈的蓝色，此刻正陷身泥泞。\n    我疑惑，我愤怒，我颤抖，我不愿相信。我在你身上装上了微型摄像头，而结果是，我看到了你走进车库的暗门，而结果是，我在屏幕后见到了我女儿的最后一面。\n    那是一个多么可怕的场面，无数孩子被悬挂在半空，我亲眼看到你拿出一把小刀，向着其中一个走去，缓缓割开她的喉咙，满地的鲜血倒映出了你狞恶可怖的脸，满地的鲜血倒影出太阳的陨落，满地的鲜血倒影出屏幕后无能狂怒的我。\n    那一天，我永生不会忘记。明天就是你和你家人出巡的日子了，这是我千载难逢的机会，我势必要撕破你虚伪的面皮，我势必要让你丧失至爱，我势必要让你感受同样的痛苦，最后带着绝望去向我女儿忏悔！\n    你的灵魂将永远不能安息，而我也同样如此。\n</code></pre>\n<p>“真是一个悲伤的故事。” 洛合上了文件夹，“这就是九年起案件的真相吗？”</p>\n<p>“未必，得到这份证据后，执法队对前任市长的住宅进行了地毯式搜查，并没有发现有类似的房间。调查过那个秘书曾经资助过的孤儿院，也是一无所获，但也不排除证据都被销毁的可能。”</p>\n<p>“那个市长的资料呢？我认为这个事件是案情的关键点。”</p>\n<p>“我也这么认为，所以刚刚详细了解了一下。” 卡娜表示同意，“这个市长叫菲利斯。尼特，遇害的同时还有他的两个双胞胎女儿，菲利斯。李斯菲特和菲利斯。丽兹，以及妻子菲利斯。罗拉。”</p>\n<p>“菲利斯。李斯菲特？” 洛对这个名字有些印象，但又想不起来在哪里听过这个名字。</p>\n<p>“怎么，你认识？”</p>\n<p>“没有，只是觉得在哪里听过。”</p>\n<p>“按照执法记录来看菲利斯。李斯菲特的尸体没有被找到，但现场也比较混乱，很多尸体被压成了肉泥，混杂在一起，还有些被烧掉了，无法断定身份，考虑到当时她也就是 12 岁，不太有能力在这种情况下逃命，所以她也被暂定为了死亡。”</p>\n<p>“这样啊。” 洛拼命回想，自己究竟在哪里听过这个名字。</p>\n<p>“不过有一点很奇怪，根据六合天使的档案，这个市长是无名羽化者，但秘书是普通人，加上市长周围还有不少护卫，暗杀的话倒是有可能，但记录显示，案发现场并非暗杀而是几近于屠杀，身为普通人的他做不到这一点。” 卡娜自言自语，“说不好是反抗军的极端主义者干的，只有他们那边才有人能做出这种事情。”</p>\n<p>“反抗军！对了 ————” 洛一拍脑门，“是反抗军的人。”</p>\n<p>“不不不，我只是说个可能。”</p>\n<p>“我的意思是，这个名字，是我之前听到的反抗军的人的名字，菲利斯。李斯菲特。”</p>\n<p>“被害市长的女儿是反抗军的成员吗？这可真是意外。” 卡娜表示不可思议。</p>\n<p>“这个人来找过我姐姐，不过具体内容我就不知道了。” 洛回忆，“她给人一种非常冰冷的感觉，感觉很不好接近。”</p>\n<p>“不管怎么说，先把这些线索连在一起看看。” 卡娜掏出一支记号笔，拿过洛手上的文件夹开始整理线索。</p>\n<p>“所以说，菲利斯市长杀死了萨尔的女儿，萨尔为了复仇，杀死了菲利斯一家，然后被发现证据后，炸毁了整个议会大楼。” 洛口头理了理时间线。“那么那个律师又是什么来头？”</p>\n<p>“不清楚，审理这个案件的人员都在爆炸中丧生，萨尔本人也不例外，议会政府保留的纸质材料也被一同烧毁。” 卡娜边写边说。“只知道他是个人工作室的律师，并且是主动找到萨尔为他辩护的。”</p>\n<p>“主动找上来的？他们两个是朋友吗？”</p>\n<p>“从后期的调查来看，完全看不到他们两个在这之前有什么交集。” 卡娜停下了笔，抬头看着洛，“而且，拉妮有一个奇怪的举止，就是她爆炸前似乎在议会大楼内四处寻找什么，这是执法队调取爆炸前监控发现的，这是刚刚给你的视频里没有的。”</p>\n<p>“那么，案件的疑点就是，第一，萨尔是否是这两起案件的凶手，第二，拉妮为什么要主动为毫无关系的萨尔辩护。第三，拉妮在寻找什么。” 洛又看了一边这几个短小的视频，想了想，说道。</p>\n<p>“没错。不过拉妮目前还处于重症监护室，想要从她口里问出消息恐怕还要过一阵子。目前线索实在太少，只能寄希望于‘原初’特殊的洞察力了。” 卡娜收起记号笔，把整理好的线索递给了洛。“那么，拜托咯，大侦探。”</p>\n<p>“第一次有人这么叫我，还真是受宠若惊。” 洛接过文件夹，“我再去周围看看，有没有什么遗漏掉的线索。”</p>\n<p>“那么我先去调查一下九年前的那个案子，说不定可以有新的发现。”</p>\n<p>“嗯，继续分头行动吧，这样效率比较高。” 洛也表示赞同。</p>\n<p>“不过就算遇到凶手也不要乱来，这次可没人帮你兜底哦。一会见。” 卡娜说完便又消失了。</p>\n<p>“明明刚认识没多久，真是爱操心。” 洛自言自语。“事情变得复杂了起来啊。”</p>\n<p>“看来这就是极力想要暗能系羽化者加入的原因之一吧，确实这种情况只有暗能感知，才能找到突破点。” 米斯凯尔淡定地说。</p>\n<p>“这么说，你是有什么发现吗？”</p>\n<p>“是的，刚刚你说话的时候，我详细感知了一下周围的环境，发现了一点细微的线索。” 米斯凯尔顿了顿，“现场有两种微弱的能量干涉痕迹，一种是内能，另一种是势能。”</p>\n<p>“连这也可以做到吗？”</p>\n<p>“当然，能量干涉留下的痕迹在我面前可没那么容易彻底消除，感知能力是暗能系最基础的能力。” 米斯凯尔语气渐渐上扬，“现场的圆形爆炸中心和监控显示的爆炸场面极度矛盾，既然并不是一个点发生爆炸进而波及整栋建筑，那么这个圆形巨坑存在的理由也就荡然无存，也就是说，这个巨坑不是爆炸造成的，而是由于其他原因产生的，这和我的感知是一致的。”</p>\n<p>“什么意思？”</p>\n<p>“有人故意制造这个圆形坑，伪造出由内而外爆炸的虚假现场，想要隐瞒什么。” 米斯凯尔解释道，“制作这样的巨坑，很显然是某种势能系的羽化者的特长。我认为其原理是作用于外物的斥力，因此才能生成这样的规则形状。”</p>\n<p>“你的意思是是多人作案吗？” 洛思考，“既然有势能系的羽化者存在，是不是可以认为存在其使用能力到达议会并作案，又使用能力逃逸的可能？”</p>\n<p>“不太现实，势能系羽化者的转移能力是基于积分原理的，需要叠加无数次微小位移，运算维度高于其他羽化者，这也导致长距离转移极其耗费时间。” 米斯凯尔解释，“从这里转移到安全地带，按照现场的暗能痕迹估算，对方的暗能中枢功率很弱，至少需要 10 秒的运算时间，爆炸瞬间想转移走几乎是不可能的，而且这也不能解释巨坑存在的原因。”</p>\n<p>“这么说，卡娜算是相当优秀的势能羽化者了。” 洛回想起和帕瓦斯一战后，卡娜似乎只用了十几秒运算时间就从战场将三人转移到了学校，这当中的距离可是有小半个城市。</p>\n<p>“这并不是最大的问题。目前的最大的疑点就是，要同时释放这种程度的能量，这个内能系的羽化者是怎么做到的。” 米斯凯尔继续说，“我原本以为对方是分几次炸毁大楼，但从视频的时间水印来看，所有的能量输出时刻完全重合，这也意味着 ————”</p>\n<p>“意味着对于羽化者来说，正常手段引爆需要同时承受所有爆炸点的输出功率。” 洛显然也想到了这点。</p>\n<p>“没错。” 米斯凯尔叹了口气，“这种功率完全超出了人类的极限。”</p>\n<p>“再调查一下吧，说不定会有新的发现。”</p>\n<p>“我也是这么想的，先去执法队的档案室问一下具体情况吧，看有没有遗漏的信息。”</p>\n<h2 id=\"线索浮现\"><a class=\"anchor\" href=\"#线索浮现\">#</a> 线索浮现</h2>\n<p>洛走出废墟，向执法局的方向飞奔。</p>\n<p>一路上的街道上并没有多少人走动，周边的商店全部大门紧闭，一副萧条的景象。</p>\n<p>“影响比想象中大呢。” 洛边跑边说，“已经好几条街了，完全没有一点点城市的感觉。”</p>\n<p>“毕竟一座城市的政府在瞬间被消灭，人人自危也是人之常情。” 米斯凯尔叹了口气说，“比起这个，我更关心作案的那个内能系羽化者，如果他还活着，并且继续作案，很难想象他会有多大的危险性。”</p>\n<p>“所以尽快查明真相吧。”</p>\n<p>路程并不算近，但洛的速度非常快，不到半小时，洛便到了执法局的门口。</p>\n<p>“你好，我是接手议会爆炸案的调查员。” 洛把希尔娜给的身份证明递给了接待的警务人员，“我想看一下完整的监控录像。”</p>\n<p>“里面请。” 接待员满脸疲惫，但在核实完身份证明后，又打起精神把洛带到了资料室。</p>\n<p>洛跟在接待员后面，发现眼前矮小的女人走路时身体微微颤抖。</p>\n<p>走进接待室，洛坐在了屏幕前，接待员开始调取监控。</p>\n<p>监控开始放映，洛和米斯凯尔聚精会神地盯着屏幕，生怕遗漏一些细节。</p>\n<p>时间一分一秒的过去，一共七百多个监控的数据，洛才看了一半左右。视频的时间都很短，不断切换的画面上，一个个鲜活的生命无一例外地被爆燃的空气吞噬，洛的表情异常严肃，这是他第一次见到这么多人丧生的场面。</p>\n<p>“还有所有有关拉妮行动的监控，从她进入议会大楼开始。”</p>\n<p>“我知道了。”</p>\n<p>洛仔细盯着拉妮看着，同时也注意着视频上的时间水印。</p>\n<pre><code>08：30，拉妮提着一个手提包，戴着一顶帽子，进入了议会大楼。她是一个有着齐腰长发的女人，发色为纯白色，十分浓密。\n\n08：32，拉妮打开手提箱接受安检，视频中可以清晰地看到，拉妮手提包的东西全部被翻出来摆放在一旁，一份文件，一套长而白的假发，一支口红，一支笔，一把梳子。安检员检查没有问题后又重新放了回去。\n\n08：36，拉妮向议会法庭方向走去。\n\n08：52，拉妮进入萨尔的候审室，两人并没有身体接触，拉妮翻出文件，递给萨尔。\n\n09：27, 萨尔似乎情绪有些波动，把拉妮的文件摔在地上。\n\n09：33，拉妮走出候审室，走进了卫生间。\n\n09：41，拉妮开始在议会大楼内四处走动，好像确实在找什么，值得注意的是，随着走动，拉妮齐腰的长发渐渐变成了齐肩的短发。\n\n10：57，拉妮重新回到候审室。\n\n11：02，画面出现了剧烈的爆燃。\n</code></pre>\n<p>“有注意到什么吗？” 洛询问米斯凯尔。</p>\n<p>“这个叫拉妮的人经过的点，全部都是最先开始爆炸的点。” 米斯凯尔说，“几乎可以断定，拉妮和这起案件密切相关。”</p>\n<p>“我说一个可能，拉妮是假名字，她的真名叫做菲利斯。李斯菲特。” 洛思考了一会，一字一句地说，“虽然只见过她一面，没仔细看过她的脸，但从这一头雪白的长发来看，我完全有理由相信她们两个是同一人。”</p>\n<p>“你是说，李斯菲特为了复仇，专程来杀萨尔的吗？” 米斯凯尔显然有点怀疑，“暂定李斯菲特是犯人，既然她拥有这样的能力，直接用这个来杀死萨尔不是更方便吗？”</p>\n<p>“除了复仇，应该还有其他目的，比如震慑六合天使，别忘了她是反抗军的成员。”</p>\n<p>“这么说也有点道理，不过我总感觉有那里不对。” 米斯凯尔暂时也想不出其他的可能。</p>\n<p>“艾伦先生，请你一定要找到凶手！” 突然，接待员带着哭腔向洛请求。</p>\n<p>“那是当然，请问一下，难道说，你是受害者的家属吗？” 洛这才反映过来，眼前这个人从刚刚开始的不正常行为。</p>\n<p>“———— 是的，我爱人在议会大楼里任职，他是那么好的一个人，谁曾想居然会发生这种可怕的意外 ————” 接待员强忍着泪水，调取了另外一段监控。</p>\n<p>屏幕里，一个男人站起来伸了个懒腰，桌上还摆放着一张两个人的合影，但只在瞬间，火舌便淹没了他，监控随之中断。</p>\n<p>只有几秒钟的工夫，这个年轻的少妇便永远失去了她的爱人。</p>\n<p>“请你放心，我一定会查明真相。” 洛表情严肃，“继续给我看其他摄像头的监控吧，我需要更详细的信息。”</p>\n<p>“好的，谢谢你！艾伦先生！” 接待员向洛深鞠一躬。</p>\n<p>走出执法局，时间已经来到了傍晚。即将落下帷幕的夕阳洒落余晖，洛重新认识到了自己身上所肩负着什么。身为一个高中生，洛完全没有想过自己有一天会看到如此惨烈的生离死别。在接下‘代行人’身份的那一刻，本以为已经做好了面对黑暗的准备，但却发现自己依然难以接受眼前的残忍。</p>\n<p>“清除秩序的破坏者，这就是‘代行人’被赋予的使命吧。” 米斯凯尔淡淡地说，“为了达成自己的目的，不惜一切，人类的自私自利的本质，自始至终没有变过。看似庞大坚固的天使秩序，在这面前，仿若蝼蚁。”</p>\n<p>“为了复仇，把无辜的人拖下水，我绝不原谅！” 洛握紧了拳头，“不管你是谁，我都一定会找到你！”</p>\n<p>“继续刚刚的讨论吧。” 米斯凯尔把洛从愤怒中叫了回来，“你真的就那么肯定，这个叫拉妮的就是你曾经遇到过的李斯菲特吗？我也看过你的这段记忆，事实上，完全靠头发这种弱特征来识别是不够准确的。”</p>\n<p>“我并不确定，所以才说是一种可能。”</p>\n<p>“况且，菲利斯。李斯菲特看上去也就二十岁左右的样子，拉妮可是完完全全的中年人的形象。” 米斯凯尔逐步分析，“再提一点，从记忆中的情况来看，拉妮要比李斯菲特高不少，而且拉妮的头发明显要比李斯菲特的更浓密。说实话，她们之间的差异点还是不少的。”</p>\n<p>“不管怎么说，这件事的线索已经有了，不知道卡娜那边调查的怎么样了。”</p>\n<p>洛拿出手机，准备给卡娜发条消息，却发现卡娜在自己研究监控期间前给自己发过消息。</p>\n<pre><code>（二十分钟前）\n“我在遇害市长的旧宅发现了一个可疑的家伙，我在盯着她，位置发给你了。”\n\n（十五分钟前）\n“这个家伙似乎在找什么，我继续跟踪她。”\n\n（七分钟前）\n“她可能察觉到我”\n\n</code></pre>\n<p>“七分钟前的消息，” 洛急忙点开位置，“这个时间点会出现在那里的，说不定真的是作案者，难道说除了拉妮另有其人？”</p>\n<p>洛立刻回复了一条消息，并开始查看地图。</p>\n<p>“卡娜可没有作战能力，” 米斯凯尔插嘴，“如果对方真的是凶手，是能够引发那种爆炸的羽化者，卡娜就有危险了。”</p>\n<p>“我知道。” 洛向着地图上标注的位置飞速前进，“可恶，别再出事啊。”</p>\n<p>最后一条消息并没有打全，洛情不自禁地往坏的方向想。</p>\n<p>但洛已经不希望再看到有人牺牲了，尤其是自己身边的人。</p>\n<h2 id=\"菲利斯李斯菲特\"><a class=\"anchor\" href=\"#菲利斯李斯菲特\">#</a> 菲利斯。李斯菲特</h2>\n<p>“快到了。” 洛看了眼地图，又抬头往前方看去。</p>\n<p>旧宅在亚特拉提市的郊区，但好在距离其实并不远，不到十分钟，洛便发现自己可以看到目标点的轮廓了。</p>\n<p>“有人 ————”</p>\n<p>转角处，米斯凯尔突然看见有一个披着披风的人，方向和自己相反，距离大概只有五十米的样子。</p>\n<p>那是一个灰色的身影，并不高，帽子盖着头，整个身体大部分被覆盖在披风中，步行前进。</p>\n<p>是卡娜吗？不，明显不是。这个点在这种地方，是什么人？</p>\n<p>“能判断对方是不是羽化者吗？” 洛停下脚步，退回墙角后，并掏出手机，发现卡娜并没有回复消息。</p>\n<p>“不行，对方没有使用能力的情况下，我是感知不到的。”</p>\n<p>“不过， 卡娜说的就是她吧，这个人就差把可疑两个字写在脸上了。难道说卡娜已经被她 ————” 洛探头出墙，发现对方也在盯着自己，距离已经是十米不到了。</p>\n<p>冷漠的眼神，仿佛要吃人一般，让人毛骨悚然。</p>\n<p>“被发现了？” 洛立刻进入备战状态。</p>\n<p>但对方并没有要攻击自己的意思，只是站在原地。</p>\n<p>“凶手就是她吗？”</p>\n<p>“只能说有可能。” 米斯凯尔冷静分析，“如果这样，那么那个拉妮的行动又是为了什么？”</p>\n<p>这时，这个灰色的身影向自己的方向移动，很显然是冲着自己来的。</p>\n<p>“先撤退吧，眼下找到卡娜要紧。” 洛想。</p>\n<p>“可恶，动不了。”</p>\n<p>洛刚想挪动脚步，却发现不知何时脚已经被死死地冻在了地面上，洛透过鞋底感受到了刺骨的低温。</p>\n<p>“对方使用了能力，感知到了，是内能系羽化者，而且恐怕是唤名级别的。” 米斯凯尔将感知结果告知了洛，“这是把空气凝结成冰了吗？”</p>\n<p>洛进行了尝试，但暗能的逆向运算并不起作用，对方的暗能中枢明显高出自己一个量级，逆向速度完全跟不上重新冻结的速度。而且对方似乎发现了洛的举动，加大了能量的输出，洛的整个身体被凝结成冰的空气包裹，稍有动弹便会碰到刺骨的空气凝冰。</p>\n<p>对方越走越近，直到走到洛的身前。</p>\n<p>洛这才注意到，这双红色的冷酷的眼睛，自己似乎见到过。</p>\n<p>难道说？</p>\n<p>“你是菲利斯。李斯菲特？”</p>\n<p>“我记得你，但没想到你还记得我，更没想到你能认出我，艾因伦斯。澪的弟弟，你在这里做什么，这可不是什么有趣的地方。”</p>\n<p>显然，对方完全还不清楚自己的底细，洛暗自松了口气。</p>\n<p>“你是姐姐的朋友吧，又见面了。” 洛挤出笑容，“我来这里调查议会爆炸案，我有一个朋友的家人在这次事故中去世了，我想帮他调查清楚。”</p>\n<p>对方是反抗军的成员，此刻绝不能暴露自己和六合天使的隶属关系。</p>\n<p>此刻她应该对自己还没有什么坏的印象，不能在这个时候引起冲突。</p>\n<p>“这样啊，刚刚在对我的冰使用能力的就是你吧。” 李斯菲特解开了束缚住洛的凝冰，“说起来，你的能力确实有趣，但是看起来力量远远不足，就是因为这样才没能保住澪。”</p>\n<p>“没保护好姐姐，确实是我的责任。” 洛这点没有说谎。</p>\n<p>但是不知为何李斯菲特好像对自己是羽化者这件事接受地理所当然。</p>\n<p>不过她似乎以为澪已经牺牲了，并且认为自己是和她同阵营的，这样应该好说话很多。</p>\n<p>洛四周的凝冰突然升华，李斯菲特解除了能力。</p>\n<p>“力量这种东西，不赌上生命去战斗，是没有办法提升的．” 李斯菲特翻开帽子，露出了红白相间的短发，“回去吧，这不是你应该调查的事情。”</p>\n<p>&quot;我记得你是很长的白发的。&quot; 洛发问，突然发现周边空气突然降温，洛又感受到了刺骨的寒冷，与此同时，李斯菲特的一部分红发的发根渐渐变成了白色。</p>\n<p>“时候很不巧，我现在有事要办。重申一遍，回去吧，如果还想活命就不要继续深入这个案件了，这座旧宅也没有你们想要的线索。我自会调查清楚的。” 李斯菲特把帽子重新盖上，从洛的身边擦肩而过。</p>\n<p>“真是性格可怕的家伙。” 米斯凯尔说。</p>\n<p>“能看出她能力的原理吗？”</p>\n<p>“周围环境的能量急剧下降，造成冻结，同时李斯菲特头发的能量急剧上升，表现就是由红转白。” 米斯凯尔冷静地分析，“给环境降温的能力吗？如果只是这样的话，倒也还好。”</p>\n<p>“只是这样？”</p>\n<p>“只不过逻辑上来说，这种能量的积攒不可能是无意义的。” 米斯凯尔说，“如果她还有第二个能力，是将头发中储存的能量释放出来的话，说她是一个行走的核弹也毫不过分。”</p>\n<p>“行走的核弹？” 洛自言自语，“按你的意思，引爆议会大楼的最大嫌疑犯就是她了，可是为什么？”</p>\n<p>“也未必，没有展现的能力我也没办法感知，只是推测而已。” 米斯凯尔话锋一转，“还不能下结论，毕竟目前行动上最可疑的依然是拉妮。”</p>\n<p>“对了，卡娜！” 洛突然想起此行的目的，又转头向旧宅方向飞奔而去。</p>\n<p>不一会，洛便到了旧宅的门口，洛看了看手机，依然没有卡娜的回信。</p>\n<p>“糟了，里面有两种明显的能量干涉的痕迹，内能系和势能系。” 米斯凯尔焦急地说，“可能有过冲突，卡娜怕是有危险了。”</p>\n<p>“别死啊，卡娜。” 洛也同样焦急，“你在哪？”</p>\n<p>旧宅的门锁全部被破坏，大门敞开，一阵阵阴冷的风从里向外吹来。</p>\n<p>洛冲进了旧宅，四处寻找。</p>\n<p>“卡娜 ————”</p>\n<p>洛尝试拨通电话，但却显示对方已关机。</p>\n<p>旧宅里一片狼藉，院子久未打扫一件积攒了厚厚的一层落叶，房屋的一切都被笼上了浓重的灰尘，走道上有几个旧花瓶被打碎在地上，从裂口来看，应该是刚打破的。</p>\n<p>“可恶，卡娜，你在哪？”</p>\n<p>洛找遍了每个房间，才在一间杂物室的角落找到了受伤的卡娜，她蜷缩在角落，几乎虚弱到不能动弹。</p>\n<p>“全身浮肿，看起来是被冻伤了。” 米斯凯尔分析着受伤情况。“不过对于羽化者来说，不算致命伤。如果是和那家伙起的冲突的话，结果还算能接受。”</p>\n<p>“我来了。” 洛俯下身，轻声说。</p>\n<p>“洛 ————” 卡娜微弱的声音传来，“是你啊，得救了。”</p>\n<p>洛把衣服脱下来，披在卡娜的身上，将她抱了起来。</p>\n<p>眼前的卡娜完全没有了之前的活力，在洛的怀中微弱地呼吸着。</p>\n<p>“先找个地方休息吧。”</p>\n<p>洛抱着卡娜，眼下也没有别的好去处，没办法使用卡娜的能力转移的话，黑夜赶路并不是明智的举动。</p>\n<p>只能在这里先过一宿了。洛抱着卡娜走进了旧宅的客厅，将卡娜安置在沙发上，从院子里收集了一捆枯树枝，点燃了壁炉，生火取暖并照明，毕竟这边并没有能亮的灯。</p>\n<p>“幸好这里还有一个能用的壁炉。” 洛说。</p>\n<p>“那么，果然卡娜说的可疑的人，就是李斯菲特吧。” 米斯凯尔见洛也坐了下来，开始和洛聊天。</p>\n<p>“说好让我不要乱来，自己却这么拼命。” 洛小声埋怨。</p>\n<p>本来加入‘代行者’的目的是很单纯的想救姐姐，但在执行任务的过程中，洛已经渐渐地将自己代入了这个角色。</p>\n<p>不知为何，洛天生无法对他人的痛苦置之不理，也正是如此，洛在今天见到无数人葬身火海的场景时，内心已经产生了巨大的波动，下定决定要解决这起案件。</p>\n<p>“虽然她确实很可疑，但是。” 洛整理了下情绪，“我认为李斯菲特不是凶手。”</p>\n<p>“这么说有点武断，不过如果李斯菲特就是作案者的话，卡娜就是有可能证明其嫌疑的人，已经杀了无数人的她，没有理由放卡娜一条生路。” 米斯凯尔说。</p>\n<p>“并且刚刚从李斯菲特的眼神中可以看出来，她依然是那种尖锐的眼神，和我第一次见到她的时候一样，” 洛逐步分析，“如果萨尔是九年前案件的凶手，既然真凶已死，李斯菲特不可能完全没有变化，况且她最后说了一句‘我会调查清楚的’，我能听出来，这起案件连同之前的那起，都没有那么简单。”</p>\n<p>“你是说？”</p>\n<p>“没错，我认为九年前的案件同样并非萨尔所为。”</p>\n<p>“所以李斯菲特才要调查这件事的吗？”</p>\n<p>“很有可能。” 洛稍微想了想，“米斯凯尔，问你一个问题，双胞胎的话，有可能出现复制暗能中枢的能力的情况吗？”</p>\n<p>“这点倒是从没想过，毕竟双胞胎出现的概率只有百万分之一，但双胞胎的灵魂构成几乎一致，理论上要复制能力，只需要复写对应的记忆到相同位置即可。”</p>\n<p>气温渐渐地升起，天色也逐渐暗了下去，卡娜的脸色也逐渐好转。</p>\n<p>“洛 ————” 卡娜坐起身，“这是哪？”</p>\n<p>“我们还在旧宅里。” 洛站起身，坐到了卡娜旁边，“你感觉怎么样了？”</p>\n<p>“有点使不上力气。” 卡娜勉强笑了笑，“没想到刚过没多久，我们两个的身份就换了过来啊，这样我们就扯平了。”</p>\n<p>“没必要这么算，我们是同伴不是吗？”</p>\n<p>“同伴 ———— 吗？” 卡娜扶了扶头，“这么说，也是呢。”</p>\n<p>“所以，你和李斯菲特到底发生了什么？为什么她会攻击你？”</p>\n<p>&quot;原来那个红白头发的家伙就是李斯菲特吗？咳咳 ————&quot; 卡娜咳嗽了两声。</p>\n<p>“还没恢复好吗？”</p>\n<p>“没关系，我们接着说吧。” 卡娜擦了擦嘴角，“我定位到这个建筑里，并转移过来，当时还什么人都没有。</p>\n<p>“我在找萨尔所说的那间地下室的时候，突然发现门口有动静，我躲了起来，发现是一个红白头发的女孩，也就是你们说的李斯菲特。</p>\n<p>“她在门口确认没人跟踪她后，走了进来。她就坐在我们坐的这个房间，和什么人打了通电话，内容我没太听清，但她好像很愤怒的样子。</p>\n<p>“然后我打算靠近一点的时候，不小心打碎了墙边的花瓶 ————” 说到这里，卡娜有些不好意思，“虽然我立刻把身子藏了回去，但她也注意到我了。”</p>\n<p>“于是比起逃命，你还优先给我发了条信息？”</p>\n<p>“我以为我躲的挺好的，没想到被她几秒钟就找到了，我都来不及转移走。”</p>\n<p>毕竟是在人家自己家里，洛心想。</p>\n<p>“所以被找到后就成这样了？”</p>\n<p>“虽然有点不甘，但她的能力实在是太强了，我有一瞬间都以为死定了。” 卡娜舒了口气，“命被别人捏在手里的感觉真不好。”</p>\n<p>“所以她是放过你了？”</p>\n<p>“从结果来说是这样吧，不过真的感觉死过一次了。这个家伙从空气中变出了一大堆冰，冷的不像话，完全没法对抗。”</p>\n<p>“和刚刚一样啊。” 米斯凯尔若有所思，“而且，如果是一大堆冰的话，至少需要瞬间将局部空气冷却到零下 210 度，这种能量输出功率，即使在唤名羽化者里都算得上是佼佼者。”</p>\n<p>“她有说什么吗？” 洛接着问。</p>\n<pre><code>“我不会杀你，你是无关者。”\n</code></pre>\n<p>“她是这么说的。” 卡娜复述着李斯菲特的话，“我不会杀你，你是无关者。”</p>\n<p>看来李斯菲特的目的性的确很强。</p>\n<p>“果然是在复仇吗？” 洛往壁炉里加了点树枝，“并且，对象不是，或者不只是萨尔。”</p>\n<p>“没错，根据六合天使的人员档案，九年前的案件，萨尔当时就是个普通人，并且暗能体的适配度几乎为零，不可能有那种犯罪能力。” 卡娜把脚从沙发上挪了下来，放在了壁炉边上，“入选行政和司法体系的人，都会被暗中调查，这也是我之前确认议会成员没有唤名羽化者的原因。”</p>\n<p>“还有什么信息吗？比如李斯菲特电话里说了什么？”</p>\n<p>“有些想不起来，或者根本就没听清，但我注意到一个熟悉的名字，‘托米尼恩斯’。”</p>\n<p>“托米尼恩斯吗？我记得，是六合天使之一吧。” 洛好像想起来卡娜曾经提到过这个名字。</p>\n<p>“没错，因此我才会对这通电话这么感兴趣，想靠近些，不过也因此遭了殃。” 卡娜无奈地笑了笑。“托米尼恩斯是亚特拉提市的执政天使，李斯菲特的电话里提到他，难可能和案件有关系。”</p>\n<p>“这个人你有了解吗？”</p>\n<p>“我对这种级别的上层了解也很有限，只知道他和‘基路伯’、‘帕瓦斯’一样是坚定维护的天使秩序的派系，不同于温和派的‘基路伯’、激进派的‘帕瓦斯’，他似乎处于两者之间。天使的资料是受严格保护的，我也无法知道更多。”</p>\n<p>“那也没办法了，从别的方向进行吧。”</p>\n<p>看来李斯菲特说的没错，这边确实没有我们想要的线索。</p>\n<p>洛把自己对现场和监控的调查发现，以及遇到李斯菲特的事情告诉了卡娜。</p>\n<p>“所以目前最大的线索就是拉妮的可疑行为，有关于拉妮是羽化者的信息吗？”</p>\n<p>“并没有，即使是六合天使也没有办法进行大范围的羽化者排查。” 卡娜突然站了起来，却又双腿一软。</p>\n<p>“小心。” 洛扶住了卡娜，“身体还没修复完全，不要乱动。”</p>\n<p>“不过换句话说，也没有拉妮不是羽化者的证据。” 卡娜喘着粗气，“毕竟现在除了被植入暗能体成为羽化者外，更多的羽化者还是凭依游荡的暗能体而成的，这点是谁都没办法预测的。”</p>\n<p>“这么说来，目前的情况看起来有点复杂，果然突破点还在拉妮那边。”</p>\n<p>“拉妮目前还处于昏迷中，审讯工作得等她醒才行。” 卡娜又坐会沙发上，“不过如果单纯检查她是否是羽化者，‘原初’的能力可以派上用场吗？”</p>\n<p>“恐怕有点难度，暗能感知依赖于其对环境的能量干涉留下的痕迹。” 洛复述米斯凯尔的话，“对方不使用能力便无法感知，更别提昏迷状态下了。”</p>\n<p>“看来局限性不小，原本抱有更大的期望的。” 卡娜笑着说。“不过比起正常手段需要长期观察来说，还算好使点。”</p>\n<p>“所以她现在在哪？” 洛发问，“如果她是羽化者的话，极有可能苏醒后逃脱，毕竟大概率是势能系的羽化者。”</p>\n<p>“这点你就不用担心了，作为首要嫌疑人，她现在被严密监控着。” 卡娜摇了摇头，“亚特拉提市的特制监狱，有干扰暗能中枢运算的装置，就算是我也没办法逃出去哦。”</p>\n<p>“那么可以见到她吗？我有些事情挺在意的，想近距离确认一下。”</p>\n<p>“现在的话应该不行，明天白天用六合天使的调查官证明，应该可以进到监狱内，不过你要确认什么？”</p>\n<p>&quot;到时候你就知道了，是非常关键的线索。&quot;</p>\n<p>“神神秘秘的。” 卡娜嘟了下嘴，打了个哈欠。</p>\n<p>“你先休息吧，我来守夜。”</p>\n<p>“那就麻烦你了。” 卡娜眼睛一闭，朝着沙发倒了下去。</p>\n<p>“理论上羽化者可以连续几天不进入休眠。看来这是暗能中枢为了快速修复损伤，强制降低了卡娜的身体机能，就和我那时一样。虽然李斯菲特手下留情了，但卡娜受的伤比看上去要严重的多。” 米斯凯尔看出了端倪。</p>\n<p>“虽然不愿意这么想，但如果她是敌人的话，” 洛自言自语，“有办法对付吗？”</p>\n<p>“交给我来的话，应该勉强有一战之力，但估计没办法打赢。” 米斯凯尔想了一会说。</p>\n<p>“也就是说可以对抗？” 洛有点不信，“刚刚遇到的时候，我感觉完全不是对手，毫无还手之力。”</p>\n<p>洛会这么想完全有他的道理。洛的身体经过这几天的自动调整，已经将身体机能的相关基因全部强化了一遍，正常使用暗能中枢已经几乎没有负担感了，但洛还是在面对李斯菲特的时候被完全压制。</p>\n<p>“老实说，你的学习能力已经很惊人了，短短几天学会最困难的暗能系能力，要知道暗能操作的信息量几乎可以撑爆正常人类大脑的脑容量。”</p>\n<p>米斯凯尔接着说，“不过，会用和熟练还是两码事，我可以发挥出暗能中枢 100% 的能力，即使考虑到身体承受能力，现阶段也至少能到 50%，而你目前大概只有 10% 左右。比如刚刚的冰冻，只是李斯菲特的试探而已，我完全有信心逆向，但对方并没有恶意，我也没必要出手，那种情况示弱是最好的选择。”</p>\n<p>“原来如此。” 洛摇了摇头，“那后面要是非得与她为敌，就交给你了。”</p>\n<p>“其实我并不希望有这么一天。”</p>\n<p>“我当然也是这么想的。”</p>\n<p>洛突然想起来给珈娜发个消息，今晚不回去了。</p>\n<p>窗外的夜渐渐酝酿出浓郁的死寂，壁炉的火苗翩然舞动着热浪，熟睡的少女依偎在少年的身旁，等待着天明，还有尘封的真相。</p>\n",
            "tags": [
                "轻小说",
                "零落之羽"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/comments/fate/",
            "url": "https://echidna-sxh.github.io/comments/fate/",
            "title": "拾枝杂谈： fate zero",
            "date_published": "2021-09-10T08:29:28.000Z",
            "content_html": "<h2 id=\"fate-zero\"><a class=\"anchor\" href=\"#fate-zero\">#</a> Fate Zero</h2>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/comments/1.jpg\" alt=\"\" /><br />\n这是 fate 系列的前传，讲解的是一个试图借助圣杯的力量拯救世界的人最终梦想破碎的故事。</p>\n<p>故事的背景是型月世界，这是一个魔术师的世界，为了追求能够实现愿望的圣杯，在冬木市开展一场七个魔术师之间的圣杯战争，被授予御主之名的魔术师分别可以召唤出一个历史上的英灵来帮助自己。</p>\n<p>主角卫宫切嗣是魔术师的支脉，冷血杀手，曾经梦想做正义的伙伴，尽管爱着所有人，但也有着为了正义 “杀掉任何一个人” 觉悟。其代表妻子所属家族，爱因兹贝伦家族参与圣杯战争，英灵搭档是传说中的亚瑟王，阿尔托莉雅。潘德拉贡。</p>\n<p>小时候的青梅竹马夏莉因为父亲的死徒魔术变成了吸血鬼。在她还能控制自己的时候，她请求切嗣了结自己，但切嗣没能下的去手，结果导致夏莉失去理性，把整个村庄同化为了死徒，最终魔术协会为了防止事态扩散剿灭了村庄。</p>\n<p>摆在切嗣面前的，其实就是一个变种的哲学问题：电车难题。当牺牲少数人可以拯救大多数人的时候，你会如何选择。</p>\n<p>那时的切嗣选择了不杀夏莉，但导致了更多人的牺牲。这是切嗣人生的第一个转折点，也是最重要的转折点，因为切嗣此刻错误的认识到，要拯救世界，就一定要在必要的时候舍弃一些东西。于是切嗣杀死了这场灾难的始作俑者，也就是自己自己的父亲，随后被职业杀手娜塔莉亚收养，得到了母亲一般的照顾，随后不断的杀死坏人，拯救好人。最终娜塔莉亚在飞机上暗杀死徒魔术师失败，切嗣毅然使用重型武器将飞机击落，这是切嗣第二次舍弃自己的至亲去拯救‘多数人’。</p>\n<p>后续剧情也就继续展开，切嗣参与圣杯战争，企图使用圣杯的力量实现正义，拯救堕入黑暗的世界，在此期间杀死了无数对手，作为代价，牺牲了追随自己多年的伙伴、妻子，失去了一切可以失去的东西。</p>\n<p>但圣杯并不是万能的，实现正义这个愿望，如果连他自己都不知道如何实现，只能依赖圣杯的话，那么这种奇迹也不可能实现，圣杯拯救世界的方式，只会同样是不断的杀戮。最后得知真相后，他背叛自己的英灵，命令其摧毁了圣杯，却因为圣杯的威力又烧毁了半个城市，正义的伙伴又亲手将无数人推入了深渊。</p>\n<p>fate 一词的本意是不可违背的命运，多指厄运，指代使得这个世界堕落的不可阻挡的力量。zero 是 0，既指代这部作品在这一系列中的时间线地位，同样指代作品剧情，即主角做的事情毫无意义。卫宫切嗣的名字同样有特殊含义，切嗣即为斩断起源的意思，“起源” 是型月世界观的一个哲学的概念。又作「混沌冲动」。概念上类似原始本能，也类似宿命论。指所有事物、包括生命，在其起始之时已经有其方向性（因），然后必然会向者这方向发展（果），男主贯穿剧情的思想提炼出来就是斩断因果。结合主作全名，fate stay night，个人译为命运常夜，我们可以知道，这是不可能的，命运之所以被称之为命运，就是因为它的不可违抗性，即使使用因果论武器，也无济于事，命运会向洪水一般，将世界向前推进。</p>\n<p>这部作品并不是我三言两语就能概括的，我也做过这部作品的 mad 剪辑，也是我唯一一个影视作品，主角就是卫宫切嗣。虚渊玄对于整部作品的把握非常到位，虽然这个人是个常年收刀片以至于可以卖废铁致富的致郁作家，并且他的有些作品我确实不太喜欢，但是不得不说 fate zero 这部作品相当成功，<strong>这也许是我目前认定的最优秀的作品，没有之一</strong>。作品全集 25 集，标准的半年番，除了主角之外，也塑造了一大批相当饱满的人物、英灵，如征服王伊斯坎达尔（历史上的亚历山大大帝），英雄王吉尔伽美什（人类的第一个英雄，来自古巴比伦文明）、枪兵迪卢木多、魔法师吉尔德雷、韦伯、远坂时臣（都是时臣的错，出处）、间桐雁夜等，这些人物人设丰富到几乎全部可以单独拿出来作为独立作品，事实上有一部分也这么做了，比如韦伯，是后续独立作品君主埃尔梅罗二世的主角。</p>\n<p>一言以蔽之，这部作品作为 b 站镇站作 fate stay night 的前传，无论是精彩程度还是作品深度都不逊于本作，其展现的人性本恶论很有虚渊玄的特点，在能够实现愿望的圣杯面前，一切人性的遮羞布都被毫不留情地扯下，膨胀的欲望促使御主之间不择手段地自相残杀，徒弟为了愉悦感杀死自己的师傅、御主为了活命命令自己的英灵自杀、杀人魔引起众怒被集火、为了御主坦然赴死的英灵、为了没有血缘关系的侄女燃尽最后一丝生命火花但无济于事的叔叔，还有经典的骑士王、英雄王、征服王三王论王道的名场面。圣杯战争的最后，七名御主只有切嗣作为人类活了下来，但心却已经死了。为了圣杯抛弃了一切的人最终发现自己丢失的远比得到的要多，其实人无法阻止世界的走向，比起螳臂当车，最重要的永远是珍惜自己身边的人，可惜切嗣意识到这一切的时候，已经是一无所有、孑然一身了。</p>\n",
            "tags": [
                "拾枝杂谈",
                "Anime"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/hyperscan/hyperscan-demo/",
            "url": "https://echidna-sxh.github.io/hyperscan/hyperscan-demo/",
            "title": "section3--hyperscan的示例程序及其编译",
            "date_published": "2021-08-17T08:29:28.000Z",
            "content_html": "<h1 id=\"单模\"><a class=\"anchor\" href=\"#单模\">#</a> 单模</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;errno.h></span> </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 用于生成错误代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;limits.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 用于确定在本机整数所占字节数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;sys/time.h></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;hs.h></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 包含 hyperscan 库</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>time<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> time<span class=\"token punctuation\">.</span>tv_sec<span class=\"token operator\">*</span><span class=\"token number\">1000000</span><span class=\"token operator\">+</span>time<span class=\"token punctuation\">.</span>tv_usec<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">eventhandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> from<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags<span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"from:%d to%d\"</span><span class=\"token punctuation\">,</span>from<span class=\"token punctuation\">,</span>to<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token number\">0</span>   </span><span class=\"token comment\">// 注释作用</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argc<span class=\"token operator\">!=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"error input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pattern <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>inputdata <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">char</span> pattern<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"样本\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">char</span> inputdata<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"测试样本\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token class-name\">hs_database_t</span> <span class=\"token operator\">*</span>database<span class=\"token punctuation\">;</span><span class=\"token comment\">// 声明 hs 的模式数据库</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token class-name\">hs_compile_error_t</span> <span class=\"token operator\">*</span>compile_err<span class=\"token punctuation\">;</span><span class=\"token comment\">// 编译报错指针</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">// 宏定义编译模式数据库时使用的标志位</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RULES_HS_FLAGS</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>HS_FLAG_CASELESS <span class=\"token operator\">|</span> HS_FLAG_SINGLEMATCH <span class=\"token operator\">|</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                        <span class=\"token expression\">HS_FLAG_DOTALL<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">// 单一匹配模式，与下面的选项不兼容</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">define</span> <span class=\"token macro-name\">RULES_HS_LEFTMOST</span> <span class=\"token expression\"><span class=\"token punctuation\">(</span>HS_FLAG_CASELESS <span class=\"token operator\">|</span> HS_FLAG_DAOTALL <span class=\"token operator\">|</span></span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                        <span class=\"token expression\">HS_FLAG_LEFTMOST<span class=\"token punctuation\">)</span></span></span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">// 附带返回匹配结果的起始位置，即 from</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">// 编译模式数据库</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hs_compile</span><span class=\"token punctuation\">(</span>pattern<span class=\"token punctuation\">,</span> RULES_HS_FLAGS<span class=\"token punctuation\">,</span> HS_MODE_BLOCK<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>database<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>compile_err<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>HS_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%s error compiled,err->%s\\n\"</span><span class=\"token punctuation\">,</span>pattern<span class=\"token punctuation\">,</span>compile_err<span class=\"token operator\">-></span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">// 创造草稿空间，用于后续匹配</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token class-name\">hs_scratch_t</span> <span class=\"token operator\">*</span>scratch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hs_alloc_scratch</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>scratch<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> HS_SUCCESS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"error,can not allocate scratch space!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token comment\">// 记录匹配开始时间，用于计算匹配用时.</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> start_time<span class=\"token operator\">=</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">// 开始匹配</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hs_scan</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">,</span>inputdata<span class=\"token punctuation\">,</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>inputdata<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>            scratch<span class=\"token punctuation\">,</span>eventhandler<span class=\"token punctuation\">,</span>pattern<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> HS_SUCCESS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"can not scan the data.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token function\">hs_free_scratch</span><span class=\"token punctuation\">(</span>scratch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    <span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"str:%s\\n pattern:%s\\n spend %lu(us)\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                    inputdata<span class=\"token punctuation\">,</span>pattern<span class=\"token punctuation\">,</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre><span class=\"token comment\">// 释放内存</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token function\">hs_free_scratch</span><span class=\"token punctuation\">(</span>scratch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre><span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>编译：<br />\n使用 g++ 编译，链接 hs 库</li>\n</ul>\n<pre><code>gcc -o demo demo.c -lhs\n./demo\n</code></pre>\n<ul>\n<li>输出：</li>\n</ul>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/hyperscan/%5D~R7JF%7D%7D%7D9KRZP2EDZK8%25J8.png\" alt=\"\" /></p>\n<h1 id=\"多模\"><a class=\"anchor\" href=\"#多模\">#</a> 多模</h1>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;errno.h></span> </span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">// 用于生成错误代码</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;limits.h></span></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">// 用于确定在本机整数所占字节数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdlib.h></span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;sys/time.h></span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string.h></span></span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;hs.h></span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">// 包含 hyperscan 库</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> <span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">struct</span> <span class=\"token class-name\">timeval</span> time<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token function\">gettimeofday</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>time<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> time<span class=\"token punctuation\">.</span>tv_sec<span class=\"token operator\">*</span><span class=\"token number\">1000000</span><span class=\"token operator\">+</span>time<span class=\"token punctuation\">.</span>tv_usec<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">static</span> <span class=\"token keyword\">int</span> <span class=\"token function\">eventhandler</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> from<span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>                        <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> to<span class=\"token punctuation\">,</span> <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags<span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>content<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"offset %d id=%d\\n\"</span><span class=\"token punctuation\">,</span>to<span class=\"token punctuation\">,</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">*</span>argv<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">if</span> <span class=\"token expression\"><span class=\"token number\">0</span>   </span><span class=\"token comment\">// 注释作用</span></span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argc<span class=\"token operator\">!=</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"error input\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>pattern <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>inputdata <span class=\"token operator\">=</span> argv<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">else</span></span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> patterns<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token string\">\"abc\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"def\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"foobar.*gh\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"teakettle&#123;4,10&#125;\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"ijkl[mMn]\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"(101 &amp; 102 &amp; 103) | (104 &amp; !105)\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"!101 &amp; 102\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"!(!101 | 102)\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"101 &amp; !102\"</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">char</span> inputdata<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"abcdefxxfoobarrrghabcxdefxteakettleeeeexxxxijklmxxdef\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> ids<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">102</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103</span><span class=\"token punctuation\">,</span> <span class=\"token number\">104</span><span class=\"token punctuation\">,</span> <span class=\"token number\">105</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1002</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1003</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1004</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> flags<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span>HS_FLAG_QUIET<span class=\"token punctuation\">,</span> HS_FLAG_QUIET<span class=\"token punctuation\">,</span> HS_FLAG_QUIET<span class=\"token punctuation\">,</span>HS_FLAG_QUIET<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span>HS_FLAG_COMBINATION <span class=\"token operator\">|</span> HS_FLAG_SINGLEMATCH<span class=\"token punctuation\">,</span>HS_FLAG_COMBINATION<span class=\"token punctuation\">,</span>HS_FLAG_COMBINATION <span class=\"token operator\">|</span> HS_FLAG_SINGLEMATCH<span class=\"token punctuation\">,</span>HS_FLAG_COMBINATION <span class=\"token operator\">|</span> HS_FLAG_SINGLEMATCH<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">endif</span></span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token class-name\">hs_database_t</span> <span class=\"token operator\">*</span>database<span class=\"token punctuation\">;</span><span class=\"token comment\">// 声明 hs 的模式数据库</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token class-name\">hs_compile_error_t</span> <span class=\"token operator\">*</span>compile_err<span class=\"token punctuation\">;</span><span class=\"token comment\">// 编译报错指针</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">/*</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>// 宏定义编译模式数据库时使用的标志位</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>#define RULES_HS_FLAGS (HS_FLAG_CASELESS | HS_FLAG_SINGLEMATCH |\\</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                        HS_FLAG_DOTALL)</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>// 单一匹配模式，与下面的选项不兼容</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>#define RULES_HS_LEFTMOST (HS_FLAG_CASELESS | HS_FLAG_DAOTALL |\\</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                        HS_FLAG_LEFTMOST)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>// 附带返回匹配结果的起始位置，即 from</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>*/</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">// 编译模式数据库</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">/*if (hs_compile(pattern, RULES_HS_FLAGS, HS_MODE_BLOCK, NULL, &amp;database, &amp;compile_err)!=HS_SUCCESS)&#123;</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    fprintf(stderr,\"%s error compiled,err->%s\\n\",pattern,compile_err->message);</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    return -1;</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>&#125;*/</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">hs_compile_multi</span><span class=\"token punctuation\">(</span>patterns<span class=\"token punctuation\">,</span> flags<span class=\"token punctuation\">,</span> ids<span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span> HS_MODE_BLOCK<span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>database<span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>compile_err<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>HS_SUCCESS<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"%s error compiled,err->%s\\n\"</span><span class=\"token punctuation\">,</span>patterns<span class=\"token punctuation\">,</span>compile_err<span class=\"token operator\">-></span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token comment\">// 创造草稿空间，用于后续匹配</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token class-name\">hs_scratch_t</span> <span class=\"token operator\">*</span>scratch <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hs_alloc_scratch</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>scratch<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> HS_SUCCESS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"error,can not allocate scratch space!\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">// 记录匹配开始时间，用于计算匹配用时.</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> start_time<span class=\"token operator\">=</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token comment\">// 开始匹配</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token function\">hs_scan</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">,</span>inputdata<span class=\"token punctuation\">,</span><span class=\"token function\">strlen</span><span class=\"token punctuation\">(</span>inputdata<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>            scratch<span class=\"token punctuation\">,</span>eventhandler<span class=\"token punctuation\">,</span>patterns<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> HS_SUCCESS<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"can not scan the data.\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token function\">hs_free_scratch</span><span class=\"token punctuation\">(</span>scratch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token comment\">// 输出结果</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stdout</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"str:%s\\n spend %lu(us)\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                    inputdata<span class=\"token punctuation\">,</span><span class=\"token function\">now</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>start_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>  </pre></td></tr><tr><td data-num=\"89\"></td><td><pre></pre></td></tr><tr><td data-num=\"90\"></td><td><pre><span class=\"token comment\">// 释放内存</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre><span class=\"token function\">hs_free_scratch</span><span class=\"token punctuation\">(</span>scratch<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre><span class=\"token function\">hs_free_database</span><span class=\"token punctuation\">(</span>database<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>输出：</li>\n</ul>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/hyperscan/E%60VK8YCD1%2421G%5BAM%40GIOFX.png\" alt=\"\" /></p>\n",
            "tags": [
                "计算机科学",
                "高性能正则"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/hyperscan/hyperscan-api/",
            "url": "https://echidna-sxh.github.io/hyperscan/hyperscan-api/",
            "title": "section2--hyperscan的对应接口",
            "date_published": "2021-08-16T08:29:28.000Z",
            "content_html": "<h1 id=\"调用方式\"><a class=\"anchor\" href=\"#调用方式\">#</a> 调用方式</h1>\n<ul>\n<li>#include&lt;hs.h&gt;</li>\n</ul>\n<h1 id=\"api的内容\"><a class=\"anchor\" href=\"#api的内容\">#</a> api 的内容</h1>\n<ul>\n<li>参考:<span class=\"exturl\" data-url=\"aHR0cDovL2ludGVsLmdpdGh1Yi5pby9oeXBlcnNjYW4vZGV2LXJlZmVyZW5jZS9hcGlfZmlsZXMuaHRtbCNmaWxlLWhzLWg=\">http://intel.github.io/hyperscan/dev-reference/api_files.html#file-hs-h</span></li>\n</ul>\n<h2 id=\"hsh\"><a class=\"anchor\" href=\"#hsh\">#</a> hs.h</h2>\n<ul>\n<li>包含 hs_compile.h 和 hs_runtime.h</li>\n</ul>\n<h2 id=\"hs_commonh\"><a class=\"anchor\" href=\"#hs_commonh\">#</a> hs_common.h</h2>\n<p>hyperscan 的通用定义，供上述两个头文件调用</p>\n<ul>\n<li>hyperscan 的 API 返回值宏定义 (失败时返回数值不同，但都是负数):</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>define</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HS_SUCCESS</td>\n<td>引擎正常工作的返回值</td>\n</tr>\n<tr>\n<td>HS_INVALID</td>\n<td>传递给此函数的参数无效。</td>\n</tr>\n<tr>\n<td>HS_NOMEM</td>\n<td>内存分配失败。</td>\n</tr>\n<tr>\n<td>HS_SCAN_TERMINATED</td>\n<td>引擎被回调函数手动终止。</td>\n</tr>\n<tr>\n<td>HS_COMPILER_ERROR</td>\n<td>模式编译失败，具体错误见结构体 hs_compile_error_t 的结果</td>\n</tr>\n<tr>\n<td>HS_DB_VERSION_ERROR</td>\n<td>数据库版本不是当前版本的</td>\n</tr>\n<tr>\n<td>HS_DB_PLATFORM_ERROR</td>\n<td>数据库不是当前平台 (cpu) 的</td>\n</tr>\n<tr>\n<td>HS_DB_MODE_ERROR</td>\n<td>数据库不是当前操作模式的 (流 / 块 / 向量)</td>\n</tr>\n<tr>\n<td>HS_BAD_ALIGN</td>\n<td>传递给此函数的参数未正确对齐。</td>\n</tr>\n<tr>\n<td>HS_BAD_ALLOC</td>\n<td>内存分配器没有正确返回适合此平台上最大可表示数据类型的内存。</td>\n</tr>\n<tr>\n<td>HS_SCRATCH_IN_USE</td>\n<td>草稿区域正在被使用</td>\n</tr>\n<tr>\n<td>HS_ARCH_ERROR</td>\n<td>CPU 架构不支持</td>\n</tr>\n<tr>\n<td>HS_INSUFFICIENT_SPACE</td>\n<td>（压缩流时）提供的缓冲区太小。</td>\n</tr>\n<tr>\n<td>HS_UNKNOWN_ERROR</td>\n<td>可能与用户对流和暂存空间的无效使用或无效的内存操作有关。</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>其中定义的 typedef (结构体别名和函数指针):</p>\n<p><code>typedef struct hs_database hs_database_t   模式数据库的数据结构</code></p>\n<p><code>typedef int hs_error_t     hs中函数的返回值类型</code></p>\n<p><code>typedef void *(*hs_alloc_t)(size_t size)回调函数的函数指针,用于申请内存,返回一个void*类型指针.</code></p>\n<p><code>typedef void (*hs_free_t)(void *ptr)   回调函数的函数指针,只用于释放上述函数申请的内存</code></p>\n</li>\n<li>\n<p>其中的函数</p>\n<p><code>hs_error_t hs_free_database(hs_database_t *db)</code></p>\n<ul>\n<li>释放已编译的模式数据库，编译后的模式数据库。参数为 NULL 也可以安全地提供，在这种情况下，函数什么都不做。</li>\n</ul>\n<p><code>hs_error_t hs_serialize_database( const hs_database_t * db , char ** bytes , size_t * length )</code></p>\n<ul>\n<li>\n<p>将模式数据库序列化为字节流。</p>\n</li>\n<li>\n<p>参数</p>\n<ul>\n<li>db：编译后的模式数据库。</li>\n<li>bytes: 成功时，将在此处返回指向字节数组的指针。这些字节随后可以重新定位或写入磁盘。调用者负责释放这个块。\n<ul>\n<li>length: 成功时，生成的字节数组中的字节数将在此处返回。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_deserialize_database( const char * bytes , const size_t length , hs_database_t ** db )</code></p>\n<ul>\n<li>\n<p>从上述函数生成的字节流中重建数据库</p>\n</li>\n<li>\n<p>参数</p>\n<ul>\n<li>bytes：由 hs_serialize_database () 生成的字节数组，表示已编译的模式数据库。</li>\n<li>length: hs_serialize_database () 生成的字节数组的长度。这应该与 hs_serialize_database () 返回的值相同。</li>\n<li>db: 成功时，这里将返回一个指向新分配的 hs_database_t 的指针。然后可以使用该数据库进行扫描，并最终由调用者使用 hs_free_database () 释放。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_deserialize_database_at( const char * bytes , const size_t length , hs_database_t * db )</code></p>\n<ul>\n<li>\n<p>与上述函数在参数类型上不同.</p>\n</li>\n<li>\n<p>参数:</p>\n<ul>\n<li>db, 由用户定义并分配空间，由用户手动释放.</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_database_size( const hs_database_t * database , size_t * database_size )</code></p>\n<ul>\n<li>\n<p>以字节为单位提供给定数据库的大小。</p>\n</li>\n<li>\n<p>参数:</p>\n<ul>\n<li>database: 指向编译模式数据库的指针。</li>\n<li>database_size: 成功时，编译数据库的大小（以字节为单位）放置在此参数中。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_stream_size( const hs_database_t * database , size_t * stream_size )</code></p>\n<ul>\n<li>\n<p>提供由针对给定数据库打开的单个流分配的流状态的大小。</p>\n</li>\n<li>\n<p>参数:</p>\n<ul>\n<li>database：指向已编译（流模式）模式数据库的指针。</li>\n<li>stream_size：成功时，针对给定数据库打开的单个流的大小（以字节为单位）放置在此参数中。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_serialized_database_size(const char *bytes, const size_t length, size_t *deserialized_size)</code></p>\n<ul>\n<li>\n<p>用于给出数据库反序列化时所需大小的工具函数，配合 hs_error_t hs_deserialize_database_at 使用。</p>\n</li>\n<li>\n<p>参数</p>\n<ul>\n<li>bytes：指向由 hs_serialize_database () 生成的字节数组的指针，表示已编译的模式数据库。</li>\n<li>length: hs_serialize_database () 生成的字节数组的长度。这应该与 hs_serialize_database () 返回的值相同。</li>\n<li>deserialized_size: 成功时，将在此处返回 hs_deserialize_database_at () 生成的已编译数据库的大小。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_database_info(const hs_database_t *database, char **info)</code></p>\n<ul>\n<li>用于给出数据库版本和平台信息的工具函数</li>\n<li>参数\n<ul>\n<li>database: 指向一个已编译的数据库的指针</li>\n<li>info: 成功时，此处会放一个二维字符数组，给出信息.</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_serialized_database_info(const hs_database_t *database, char **info)</code></p>\n<ul>\n<li>\n<p>用于给出已经序列化的数据库版本和平台信息的工具函数</p>\n</li>\n<li>\n<p>参数</p>\n<ul>\n<li>database: 指向一个已编译的数据库的指针</li>\n<li>info: 成功时，此处会放一个二维字符数组，给出信息.</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_set_allocator( hs_alloc_t alloc_func , hs_free_t free_func )</code></p>\n<ul>\n<li>\n<p>设置 Hyperscan 用于为编译调用 hs_compile、hs_compile_multi、hs_compile_ext_multi 和 hs_deserialize_database 生成的数据库字节码分配内存的分配和释放函数。</p>\n</li>\n<li>\n<p>如果未设置数据库分配函数，或者使用 NULL 代替两个参数，则内存分配将默认为标准方法（例如系统 malloc () 和 free () 调用）</p>\n</li>\n</ul>\n<p><code>hs_error_t hs_set_misc_allocator(hs_alloc_t alloc_func, hs_free_t free_func)</code></p>\n<p><code>hs_error_t hs_set_scratch_allocator(hs_alloc_t alloc_func, hs_free_t free_func)</code></p>\n<p><code>hs_error_t hs_set_stream_allocator(hs_alloc_t alloc_func, hs_free_t free_func)</code></p>\n<p><code>hs_error_t hs_valid_platform(void)</code></p>\n<ul>\n<li>测试当前系统架构是否支持 hyperscan 的函数</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"hs_compileh\"><a class=\"anchor\" href=\"#hs_compileh\">#</a> hs_compile.h</h2>\n<ul>\n<li>此头文件包含用于将正则表达式编译到数据库的函数。</li>\n</ul>\n<h3 id=\"宏定义\"><a class=\"anchor\" href=\"#宏定义\">#</a> 宏定义</h3>\n<p>1. 标志位</p>\n<table>\n<thead>\n<tr>\n<th>flag</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HS_FLAG_CASELESS</td>\n<td>设置不区分大小写的匹配。</td>\n</tr>\n<tr>\n<td>HS_FLAG_DOTALL</td>\n<td>设置。允许匹配下一行的字符 (默认无法跨行)</td>\n</tr>\n<tr>\n<td>HS_FLAG_MULTILINE</td>\n<td>设置表达式中的 ^ 和 $ 标记匹配换行符以及流的开始和结束，否则只匹配流的开始和结束</td>\n</tr>\n<tr>\n<td>HS_FLAG_SINGLEMATCH</td>\n<td>设置单次匹配，只返回一个结果</td>\n</tr>\n<tr>\n<td>HS_FLAG_ALLOWEMPTY</td>\n<td>强制允许正则表达式匹配空，如.? 等，很耗性能，建议不开</td>\n</tr>\n<tr>\n<td>HS_FLAG_UTF8</td>\n<td>使用 UTF-8 字符集</td>\n</tr>\n<tr>\n<td>HS_FLAG_UCP</td>\n<td>使用 Unicode 编码，而非 ASCII</td>\n</tr>\n<tr>\n<td>HS_FLAG_PREFILTER</td>\n<td>开启预过滤模式，简化匹配模式，允许使用不支持的语法，如零宽断言后向引用等，结果是原结果的超集</td>\n</tr>\n<tr>\n<td>HS_FLAG_SOM_LEFTMOST</td>\n<td>报告最左侧匹配位置，即 from, 但耗费性能，且对下一个参数的模式选择有挑剔</td>\n</tr>\n<tr>\n<td>HS_FLAG_COMBINATION</td>\n<td>开启逻辑组合模式，允许表达式中使用 &amp;|! 对拥有 id 的表达式进行组合，这些被组合的一般要开 quiet 模式</td>\n</tr>\n<tr>\n<td>HS_FLAG_QUIET</td>\n<td>不做任何匹配报告</td>\n</tr>\n</tbody>\n</table>\n<p>2. 模式标志位</p>\n<table>\n<thead>\n<tr>\n<th>mode</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HS_MODE_BLOCK</td>\n<td>块扫描模式</td>\n</tr>\n<tr>\n<td>HS_MODE_NOSTREAM</td>\n<td>同上</td>\n</tr>\n<tr>\n<td>HS_MODE_STREAM</td>\n<td>流扫描模式</td>\n</tr>\n<tr>\n<td>HS_MODE_VECTORED</td>\n<td>矢量扫描模式</td>\n</tr>\n<tr>\n<td>HS_MODE_SOM_HORIZON_LARGE</td>\n<td>无视代价的实现最左侧报告 (默认不报告)</td>\n</tr>\n<tr>\n<td>HS_MODE_SOM_HORIZON_MEDIUM</td>\n<td>寻找最左侧的精度限制为从最右向左 2^32 字节</td>\n</tr>\n<tr>\n<td>HS_MODE_SOM_HORIZON_SMALL</td>\n<td>寻找最左侧精度限制为从最右向左 2^16 字节</td>\n</tr>\n</tbody>\n</table>\n<p>3. 类型定义（结构体成员见下文）</p>\n<p><code>typedef struct hs_compile_error hs_compile_error_t</code></p>\n<ul>\n<li>\n<p>包含错误详细信息的类型，其作为参数由 hs_compile ()、hs_compile_multi () 和 hs_compile_ext_multi () 在失败时赋值。调用者可以检查以这种类型返回的值以确定失败的原因。</p>\n</li>\n<li>\n<p>常见错误包括 (来自 hs_compile.h, 此部分内容和该头文件下的介绍重复):</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>错误</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Invalid parameter</td>\n<td>参数无效</td>\n</tr>\n<tr>\n<td>Unrecognised flag</td>\n<td>标志 (flag) 无法识别</td>\n</tr>\n<tr>\n<td>Pattern matches empty buffer</td>\n<td>未开启 HS_FLAG_ALLOWEMPTY 的情况下匹配到了空</td>\n</tr>\n<tr>\n<td>Embedded anchors not supported</td>\n<td>^ 和 $ 不支持嵌入表达式</td>\n</tr>\n<tr>\n<td>Bounded repeat is too large</td>\n<td>重复构造过大</td>\n</tr>\n<tr>\n<td>Unsupported component type</td>\n<td>不支持的表达式组件</td>\n</tr>\n<tr>\n<td>Unable to generate bytecode</td>\n<td>虽然语法上可行，但模式太复杂</td>\n</tr>\n<tr>\n<td>Unable to allocate memory</td>\n<td>编译时无法分配临时空间</td>\n</tr>\n<tr>\n<td>Allocator returned misaligned memory</td>\n<td>分配器未返回最大可表示数据类型的内存</td>\n</tr>\n<tr>\n<td>Internal error</td>\n<td>发生意外错误，指 hs 本身的 bug</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p><code>typedef struct hs_platform_info hs_platform_info_t</code></p>\n<ul>\n<li>\n<p>包含目标平台信息的类型，可以选择提供给编译调用 hs_compile ()、hs_compile_multi ()、hs_compile_ext_multi ()</p>\n</li>\n<li>\n<p>hs_platform_info 结构可以通过 hs_populate_platform 函数事先赋值</p>\n</li>\n</ul>\n<p><code>typedef struct hs_expr_info hs_expr_info_t</code></p>\n<ul>\n<li>包含表达式的相关信息，由 hs_expression_info () 或 hs_expression_ext_info 赋值.</li>\n</ul>\n<p><code>typedef struct hs_expr_ext hs_expr_ext_t</code></p>\n<ul>\n<li>包含表达式附加参数的结构体，在构建时传入 hs_compile_ext_multi () 或 hs_expression_ext_info</li>\n</ul>\n<p>4. 函数定义</p>\n<p><code>hs_error_t hs_compile(const char *expression, unsigned int flags, unsigned int mode, const hs_platform_info_t *platform, hs_database_t **db, hs_compile_error_t **error)</code></p>\n<ul>\n<li>最基本的编译函数</li>\n<li>参数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>要解析的以 NULL 结尾的表达式，没有分隔符或标志</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>修改表达式行为的标志，多个建议用宏定义，如下一章示例</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>生成的数据库的匹配模式 (块 / 流 / 矢量)</td>\n</tr>\n<tr>\n<td>platform</td>\n<td>如果不为 NULL，则使用平台结构来确定数据库的目标平台。如果为 NULL，则生成适合在当前主机平台上运行的数据库。</td>\n</tr>\n<tr>\n<td>db</td>\n<td>在此参数中返回指向生成的数据库的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_compile_multi(const char *const *expressions, const unsigned int *flags, const unsigned int *ids, unsigned int elements, unsigned int mode, const hs_platform_info_t *platform, hs_database_t **db, hs_compile_error_t **error) </code></p>\n<ul>\n<li>多模正则匹配编译函数\n<ul>\n<li>参数</li>\n</ul>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expressions</td>\n<td>二维数组，以编译多条表达式</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>一维数组，存放上述对应下标表达式的标志位</td>\n</tr>\n<tr>\n<td>ids</td>\n<td>以为数组，存放上述对应下标表达式的编号，NULL 则全设 0</td>\n</tr>\n<tr>\n<td>elements</td>\n<td>输入数组中的元素数。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>生成的数据库的匹配模式 (块 / 流 / 矢量)</td>\n</tr>\n<tr>\n<td>platform</td>\n<td>如果不为 NULL，则使用平台结构来确定数据库的目标平台。如果为 NULL，则生成适合在当前主机平台上运行的数据库。</td>\n</tr>\n<tr>\n<td>db</td>\n<td>在此参数中返回指向生成的数据库的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p> </p>\n<p><code>hs_error_t hs_compile_ext_multi(const char *const *expressions, const unsigned int *flags, const unsigned int *ids, const hs_expr_ext_t *const *ext, unsigned int elements, unsigned int mode, const hs_platform_info_t *platform, hs_database_t **db, hs_compile_error_t **error)</code></p>\n<ul>\n<li>具有扩展参数支持的多正则表达式编译器</li>\n<li>此函数调用以与 hs_compile_multi () 相同的方式将一组表达式编译到数据库中，但允许通过每个表达式的 hs_expr_ext_t 结构指定其他参数</li>\n<li>参数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expressions</td>\n<td>二维数组，以编译多条表达式</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>一维数组，存放上述对应下标表达式的标志位</td>\n</tr>\n<tr>\n<td>ids</td>\n<td>以为数组，存放上述对应下标表达式的编号，NULL 则全设 0</td>\n</tr>\n<tr>\n<td>ext</td>\n<td>指向填充的 hs_expr_ext_t 结构的指针数组，这些结构定义了每个模式的扩展行为。如果单个模式不需要扩展行为，则可以指定 NULL，如果任何表达式都不需要它，则可以指定 NULL 代替整个数组。这些结构使用的内存必须由调用者分配和释放。</td>\n</tr>\n<tr>\n<td>elements</td>\n<td>输入这些数组中的元素数</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>生成的数据库的匹配模式 (块 / 流 / 矢量)</td>\n</tr>\n<tr>\n<td>platform</td>\n<td>如果不为 NULL，则使用平台结构来确定数据库的目标平台。如果为 NULL，则生成适合在当前主机平台上运行的数据库。</td>\n</tr>\n<tr>\n<td>db</td>\n<td>在此参数中返回指向生成的数据库的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_compile_lit(const char *expression, unsigned flags, const size_t len, unsigned mode, const hs_platform_info_t *platform, hs_database_t **db, hs_compile_error_t **error) </code></p>\n<ul>\n<li>纯文字匹配，不包含正则语法</li>\n<li>参数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>要解析的以 NULL 结尾的表达式。字符串内容应完全按字面意思解析</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>少量可用标志，忽视大小写 / 单个匹配 / 报告最左偏移</td>\n</tr>\n<tr>\n<td>len</td>\n<td>纯字面量表达式的文本内容的长度，这是必要的，因为 \\0 也被解释为了普通字符，不能自动衡量长度了</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>生成的数据库的匹配模式 (块 / 流 / 矢量)</td>\n</tr>\n<tr>\n<td>platform</td>\n<td>如果不为 NULL，则使用平台结构来确定数据库的目标平台。如果为 NULL，则生成适合在当前主机平台上运行的数据库。</td>\n</tr>\n<tr>\n<td>db</td>\n<td>在此参数中返回指向生成的数据库的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_compile_lit_multi( const char * const *expressions, const unsigned * flags , const unsigned * ids , const size_t * lens , unsigned elements , unsigned mode , const hs_platform_info_t * platform , hs_database_t ** db , hs_compile_error_t ** error )</code></p>\n<ul>\n<li>多重纯文字表达式编译器</li>\n<li>参数</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expressions</td>\n<td>二维数组，解析的以 NULL 结尾的表达式，字符串内容应完全按字面意思解析</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>少量可用标志，忽视大小写 / 单个匹配 / 报告最左偏移</td>\n</tr>\n<tr>\n<td>ids</td>\n<td>一个整数数组，指定要与表达式数组中的相应模式关联的 ID 号。指定 NULL 指针代替数组会将所有模式的 ID 值设置为零。</td>\n</tr>\n<tr>\n<td>lens</td>\n<td>每个纯文字表达式的文本内容的长度数组，存在原因同上</td>\n</tr>\n<tr>\n<td>elements</td>\n<td>输入数组中的元素数。</td>\n</tr>\n<tr>\n<td>mode</td>\n<td>生成的数据库的匹配模式 (块 / 流 / 矢量)</td>\n</tr>\n<tr>\n<td>platform</td>\n<td>如果不为 NULL，则使用平台结构来确定数据库的目标平台。如果为 NULL，则生成适合在当前主机平台上运行的数据库。</td>\n</tr>\n<tr>\n<td>db</td>\n<td>在此参数中返回指向生成的数据库的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_free_compile_error(hs_compile_error_t *error)</code></p>\n<ul>\n<li>\n<p>用来释放编译生成的错误信息的结构体</p>\n</li>\n<li>\n<p>参数:</p>\n<ul>\n<li>error: 要释放的 hs_compile_error_t。NULL 也可以安全地提供。<br />\n <code>hs_error_t hs_expression_info( const char * expression , unsigned int flags , hs_expr_info_t ** info , hs_compile_error_t ** error )</code></li>\n</ul>\n</li>\n<li>\n<p>提供有关正则表达式的信息的实用函数。hs_expr_info_t 中提供的信息包括模式匹配的最小和最大宽度。</p>\n</li>\n<li>\n<p>注意：使用此函数成功分析表达式并不意味着编译相同的表达式会成功。对于 Hyperscan 无法编译的正则表达式，此函数可能会返回 HS_SUCCESS。</p>\n</li>\n<li>\n<p>注意：此调用接受某些模式标志（例如 HS_FLAG_ALLOWEMPTY、HS_FLAG_SOM_LEFTMOST），但由于它们不影响 hs_expr_info_t 结构中返回的属性，因此它们不会影响此函数的结果。</p>\n</li>\n<li>\n<p>参数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>要解析的以 NULL 结尾的表达式，没有分隔符或标志</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>一维数组，存放上述对应下标表达式的标志位</td>\n</tr>\n<tr>\n<td>info</td>\n<td>此参数将返回指向模式信息的指针</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_expression_ext_info( const char * expression , unsigned int flags , const hs_expr_ext_t * ext , hs_expr_info_t ** info , hs_compile_error_t ** error )</code></p>\n<ul>\n<li>\n<p>函数提供有关正则表达式的信息，并具有扩展的参数支持。hs_expr_info_t 中提供的信息包括模式匹配的最小和最大宽度。</p>\n</li>\n<li>\n<p>注意点同上.</p>\n</li>\n<li>\n<p>参数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>expression</td>\n<td>要解析的以 NULL 结尾的表达式，没有分隔符或标志</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>一维数组，存放上述对应下标表达式的标志位</td>\n</tr>\n<tr>\n<td>ext</td>\n<td>指向已填充的 hs_expr_ext_t 结构的指针，该结构定义了此模式的扩展行为。如果不需要扩展参数，则可以指定 NULL。</td>\n</tr>\n<tr>\n<td>info</td>\n<td>成功时，此参数将返回指向模式信息的指针，失败时返回 NULL。</td>\n</tr>\n<tr>\n<td>error</td>\n<td>编译失败将返回一个指向 hs_compile_error_t 的指针，调用者负责使用 hs_free_compile_error () 函数释放缓冲区</td>\n</tr>\n</tbody>\n</table>\n<p><code>hs_error_t hs_populate_platform( hs_platform_info_t * platform )</code></p>\n<ul>\n<li>\n<p>给出当前平台信息</p>\n</li>\n<li>\n<p>参数</p>\n<ul>\n<li>platform：成功后，指向的结构将根据当前主机填充。</li>\n</ul>\n</li>\n</ul>\n<p>结构体定义</p>\n<ul>\n<li>摘自源代码</li>\n</ul>\n<p>hs_compile_error_t</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">// 作为指针传给编译函数，由编译函数赋值</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">hs_compile_error</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">char</span> <span class=\"token operator\">*</span>message<span class=\"token punctuation\">;</span><span class=\"token comment\">// 错误描述</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">int</span> expression<span class=\"token punctuation\">;</span><span class=\"token comment\">// 错误代码，负数</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token class-name\">hs_compile_error_t</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>hs_platform_info_t</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">/* 一般由 hs_populate_platform () 函数赋值，作为 platform 参数传给编译函数 */</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">hs_platform_info</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> tune<span class=\"token punctuation\">;</span><span class=\"token comment\">// 目标平台信息，不影响数据库能否运行而影响数据库效率</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> cpu_features<span class=\"token punctuation\">;</span> <span class=\"token comment\">/* 目标平台上可用的相关 CPU 功能，该值可以通过组合 HS_CPU_FEATURE_* 标志产生，如下。可以将多个 CPU 功能组合在一起以产生该值。*/</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> reserved1<span class=\"token punctuation\">;</span><span class=\"token comment\">// 保留字段</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> reserved2<span class=\"token punctuation\">;</span><span class=\"token comment\">// 保留字段</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token class-name\">hs_platform_info_t</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><p>CPU 特化</p>\n<table>\n<thead>\n<tr>\n<th>HS_CPU_FEATURES_*</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HS_CPU_FEATURES_AVX2</td>\n<td>Intel(R) Advanced Vector Extensions 2</td>\n</tr>\n<tr>\n<td>HS_CPU_FEATURES_AVX512</td>\n<td>Intel(R) Advanced Vector Extensions 512</td>\n</tr>\n<tr>\n<td>HS_CPU_FEATURES_AVX512VBMI</td>\n<td>Intel(R) Advanced Vector Extensions 512 Vector Byte Manipulation Instructions</td>\n</tr>\n</tbody>\n</table>\n<p>平台特化</p>\n<table>\n<thead>\n<tr>\n<th>HS_TUNE_*</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HS_TUNE_FAMILY_GENERIC</td>\n<td>通用，不针对性优化</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_SNB</td>\n<td>Intel (R) Sandy Bridge 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_IVB</td>\n<td>Intel (R) Ivy Bridge 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_HSW</td>\n<td>Intel (R) Haswell 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_SLM</td>\n<td>Intel (R) Silvermont 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_BDW</td>\n<td>Intel (R) Broadwell 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_SKL</td>\n<td>Intel (R) Skylake 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_SKX</td>\n<td>Intel (R) Skylake Server 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_GLM</td>\n<td>Intel (R) Goldmont 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_ICL</td>\n<td>Intel (R) Icelake 平台</td>\n</tr>\n<tr>\n<td>HS_TUNE_FAMILY_ICX</td>\n<td>Intel (R) Icelake Server 平台</td>\n</tr>\n</tbody>\n</table>\n<p>hs_expr_info_t</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">hs_expr_info</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> min_width<span class=\"token punctuation\">;</span><span class=\"token comment\">// 表达式的最小匹配长度</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">int</span> max_width<span class=\"token punctuation\">;</span><span class=\"token comment\">// 表达式的最大匹配长度</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">char</span> unordered_matches<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 此表达式是否可以生成未按顺序返回的匹配项，例如由断言生成的匹配项。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>     如果为假则为零，如果为真则为非零。*/</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">char</span> matches_at_eod<span class=\"token punctuation\">;</span><span class=\"token comment\">// 可以在流模式的 END OF DATA 标识符处匹配</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">char</span> matches_only_at_eod<span class=\"token punctuation\">;</span><span class=\"token comment\">// 只在流模式的 END OF DATA 标识符处匹配</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token class-name\">hs_expr_info_t</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 表达式相关信息</span></pre></td></tr></table></figure><p>hs_expr_ext_t</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">typedef</span> <span class=\"token keyword\">struct</span> <span class=\"token class-name\">hs_expr_ext</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> flags<span class=\"token punctuation\">;</span><span class=\"token comment\">// 额外标志位</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> min_offset<span class=\"token punctuation\">;</span><span class=\"token comment\">// 产生报告的最小偏移量，数据流模式，要使用此参数，请设置 HS_EXT_FLAG_MIN_OFFSET 标志</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> max_offset<span class=\"token punctuation\">;</span><span class=\"token comment\">// 产生报告的最大偏移量，数据流模式，要使用此参数，请设置 HS_EXT_FLAG_MAX_OFFSET 标志。</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> <span class=\"token keyword\">long</span> <span class=\"token keyword\">long</span> min_length<span class=\"token punctuation\">;</span><span class=\"token comment\">/* 成功匹配此表达式所需的最小匹配长度（从开始到结束）。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    要使用此参数，请设置 HS_EXT_FLAG_MIN_LENGTH 标志。*/</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> edit_distance<span class=\"token punctuation\">;</span><span class=\"token comment\">// 允许模式在此编辑距离内大致匹配。要使用此参数，请设置 HS_EXT_FLAG_EDIT_DISTANCE 标志。</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">unsigned</span> hamming_distance<span class=\"token punctuation\">;</span><span class=\"token comment\">// 允许模式在此汉明距离内近似匹配。要使用此参数，请设置 HS_EXT_FLAG_HAMMING_DISTANCE 标志。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token punctuation\">&#125;</span> <span class=\"token class-name\">hs_expr_ext_t</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><blockquote>\n<ol>\n<li>汉明距离</li>\n</ol>\n<p>在信息论中，两个等长字符串之间的汉明距离是两个字符串对应位置的不同字符的个数。例如，1011101 与 1001001 之间的汉明距离是 2。</p>\n<ol start=\"2\">\n<li>编辑距离</li>\n</ol>\n<p>又称 Levenshtein 距离，是指两个字串之间，由一个转成另一个所需的最少编辑操作次数。许可的编辑操作包括将一个字符替换成另一个字符，插入一个字符，删除一个字符。例如，kitten 与 sitting 之间的编辑距离为 3。</p>\n</blockquote>\n<h2 id=\"runtimeh\"><a class=\"anchor\" href=\"#runtimeh\">#</a> runtime.h</h2>\n<p>1. 宏定义</p>\n<p><code>HS_OFFSET_PAST_HORIZON</code></p>\n<p>表示 from 开始的位置太遥远，给定的 SOM_HORIZON 精度不够。</p>\n<p>2. 类型定义</p>\n<p><code>typedef struct hs_stream hs_stream_t // hs_open_stream()返回值</code></p>\n<p><code>typedef struct hs_scratch hs_scratch_t //草稿空间的数据结构，自行申请内存</code></p>\n<p><code>typedef int (*match_event_handler)(unsigned int id, unsigned long long from, unsigned long long to, unsigned int flags, void *context) //找到匹配时的回调函数</code></p>\n<ul>\n<li>\n<p>在执行扫描期间，只要匹配项位于目标数据中，就会调用此回调函数。匹配的详细信息作为参数传递给回调函数，回调函数应返回一个值，指示是否应继续对目标数据进行匹配。如果不需要来自扫描调用的回调，则可以提供 NULL 以抑制匹配产生。</p>\n</li>\n<li>\n<p>如果匹配应该停止，则返回非 0（会导致 hs_scan 返回 HS_SCAN_TERMINATED），否则返回 0。如果在流模式下执行扫描并返回非零值，则对该流的任何后续 hs_scan_stream () 调用将立即返回 HS_SCAN_TERMINATED。</p>\n</li>\n<li>\n<p>参数</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>匹配的表达式的 ID 号。如果表达式是使用 hs_compile () 编译的单个表达式，则此值将为零。</td>\n</tr>\n<tr>\n<td>from</td>\n<td>开启 SOM_HORIZON 相关标志时为匹配开始位置，否则为 0，根据过远情况也会返回 HS_OFFSET_PAST_HORIZON</td>\n</tr>\n<tr>\n<td>to</td>\n<td>匹配表达式的最后一个字节之后的偏移量</td>\n</tr>\n<tr>\n<td>flags</td>\n<td>暂时不使用</td>\n</tr>\n<tr>\n<td>context</td>\n<td>用户传给 scan 相关函数的指针，再传进会回调函数以供信息传递</td>\n</tr>\n</tbody>\n</table>\n<p>3. 函数接口</p>\n<p><code>hs_error_t hs_open_stream( const hs_database_t * db , unsigned int flags , hs_stream_t ** stream )//打开并初始化一个数据流(将匹配模式流化)</code></p>\n<ul>\n<li>参数\n<ul>\n<li>db：编译后的模式数据库</li>\n<li>flags：修改流行为的标志。该参数供将来使用，目前未使用。</li>\n<li>stream: 成功时，将返回指向生成的 hs_stream_t 的指针；失败时为 NULL。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_scan_stream( hs_stream_t * id , const char * data , unsigned int length , unsigned int flags , hs_scratch_t * scratch , match_event_handler onEvent , void * ctxt )//将数据和流匹配</code></p>\n<ul>\n<li>参数\n<ul>\n<li>id：数据将写入的流 ID（由 hs_open_stream () 返回）</li>\n<li>data：指向要扫描的数据的指针</li>\n<li>length：要扫描的字节数</li>\n<li>flags：修改流行为的标志。该参数供将来使用，目前未使用</li>\n<li>scratch：由 hs_alloc_scratch () 分配的草稿空间</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>ctxt: 用户定义的指针，当匹配发生时将传递给回调函数</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_close_stream( hs_stream_t * id , hs_scratch_t * scratch , match_event_handler onEvent , void * ctxt )//关闭一个流</code></p>\n<ul>\n<li>此函数会判定数据输入结束，对当前数据完成匹配并关闭流。此调用后，指向的流 id 无效，无法再使用。要在完成后重用流状态，而不是关闭它，可以使用 hs_reset_stream 函数。</li>\n<li>必须为使用 hs_open_stream () 创建的任何流调用此函数（类似于 malloc 和 free 的关系），即使扫描已被匹配回调函数的非零返回终止。</li>\n<li>对于锚定到数据流末尾的表达式（例如，通过使用 $ 元字符），此操作可能导致误匹配。如果不需要这些匹配，则可以提供 NULL 作为本次的回调函数，仅此时草稿空间允许也为 NULL。</li>\n<li>参数\n<ul>\n<li>id：hs_open_stream () 返回的流 ID</li>\n<li>scratch：由 hs_alloc_scratch () 分配的草稿空间。仅当 onEvent 回调也是 NULL 时才允许为 NULL</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>ctxt: 用户定义的指针，当匹配发生时将传递给回调函数</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_reset_stream( hs_stream_t * id , unsigned int flags , hs_scratch_t * scratch , match_event_handler onEvent , void * context )//将流重置为初始状态</code></p>\n<ul>\n<li>可以理解为这个函数将流关闭后重开了，只不过清除了匹配状态。</li>\n<li>和上面的关闭函数一样，也会视为数据输入结束，进行匹配报告。</li>\n<li>对于锚定到数据流末尾的表达式（例如，通过使用 $ 元字符），此操作可能导致误匹配。如果不需要这些匹配，则可以提供 NULL 作为本次的回调函数，仅此时草稿空间允许也为 NULL。</li>\n<li>参数\n<ul>\n<li>id：要重启的流（由 hs_open_stream () 创建）</li>\n<li>flags：修改流行为的标志。该参数供将来使用，目前未使用</li>\n<li>scratch：由 hs_alloc_scratch () 分配的草稿空间。仅当 onEvent 回调也是 NULL 时才允许为 NULL</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>context: 用户定义的指针，当匹配发生时将传递给回调函数</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_copy_stream( hs_stream_t ** to_id , const hs_stream_t * from_id )//复制给定的流。新流将具有与原始流相同的状态，包括当前流偏移</code></p>\n<ul>\n<li>参数\n<ul>\n<li>to_id: 成功时，将返回指向新复制的 hs_stream_t 的指针；失败时为 NULL</li>\n<li>from_id：要复制的流（由 hs_open_stream () 创建）</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_reset_and_copy_stream( hs_stream_t * to_id , const hs_stream_t * from_id , hs_scratch_t * scratch , match_event_handler onEvent , void * context )//将给定的“from”流状态复制到“to”流上</code></p>\n<ul>\n<li>这个函数会将 'to' 流先重置</li>\n<li>from 流和 to 流必须依赖同一数据库</li>\n<li>参数\n<ul>\n<li>to_id: 成功时，将返回指向新复制的 hs_stream_t 的指针</li>\n<li>from_id：要复制的流（由 hs_open_stream () 创建）</li>\n<li>scratch：由 hs_alloc_scratch () 分配的草稿空间。仅当 onEvent 回调也是 NULL 时才允许为 NULL</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>context: 用户定义的指针，当匹配发生时将传递给回调函数</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_compress_stream( const hs_stream_t * stream , char * buf , size_t buf_space , size_t * used_space )//压缩这一流的状态</code></p>\n<ul>\n<li>可以理解为创建一个当前流的压缩副本，不会关闭源流。</li>\n<li>HS_SUCCESS，或者缓存区太小返回 HS_INSUFFICIENT_SPACE</li>\n<li>参数\n<ul>\n<li>stream：要压缩的流（由 hs_open_stream () 创建）</li>\n<li>buf: char * 类型的缓冲区，可以用 NULL，此时此函数用作测试压缩所需空间。</li>\n<li>buf_space: buf 中的字节数。</li>\n<li>used_space : 指向 ' 压缩流所用空间的大小 ' 这个变量的指针，如果 buf 溢出则返回压缩应使用空间大小。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_expand_stream( const hs_database_t * db , hs_stream_t ** stream , const char * buf , size_t buf_size )//将压缩的流解压缩</code></p>\n<ul>\n<li>必须是对应于同一压缩操作，滥用时此函数不会报错但结果未知。</li>\n<li>参数\n<ul>\n<li>db：打开压缩流所针对的编译模式数据库</li>\n<li>stream: 成功时，将返回指向扩展的 hs_stream_t 的指针；失败时为 NULL</li>\n<li>buf：流的压缩表示。这些压缩形式由 hs_compress_stream () 创建</li>\n<li>buf_size：压缩表示的大小（以字节为单位）</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_reset_and_expand_stream( hs_stream_t * to_stream , const char * buf , size_t buf_size , hs_scratch_t * scratch , match_event_handler onEvent , void * context )//将压缩流的状态赋予同一数据库下的另一个流，这一流会先被重置</code></p>\n<ul>\n<li>buf 不对时不会报错，但结果未知。</li>\n<li>参数\n<ul>\n<li>to_stream：指向有效流状态的指针。将返回指向扩展的 hs_stream_t 的指针；失败时为 NULL</li>\n<li>buf：流的压缩表示。这些压缩形式由 hs_compress_stream () 创建</li>\n<li>buf_size：压缩表示的大小（以字节为单位）</li>\n<li>scratch：由 hs_alloc_scratch () 分配的每线程暂存空间。仅当 onEvent 回调也是 NULL 时才允许为 NULL</li>\n<li>onEvent: （EOD 等）性质同上面几个函数。</li>\n<li>context: 用户定义的指针，当匹配发生时将传递给回调函数</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_scan( const hs_database_t * db , const char * data , unsigned int length , unsigned int flags , hs_scratch_t * scratch , match_event_handler onEvent , void * context )//块扫描函数</code></p>\n<ul>\n<li>参数\n<ul>\n<li>db：编译后的模式数据库</li>\n<li>data：指向要扫描的数据的指针</li>\n<li>length：要扫描的字节数</li>\n<li>flags：修改此函数行为的标志。该参数供将来使用，目前未使用</li>\n<li>scratch：由 hs_alloc_scratch () 为此数据库分配的草稿空间</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>context: 将传递给回调函数的用户定义的指针</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_scan_vector( const hs_database_t * db , const char * const * data , const unsigned int * length , unsigned int count , unsigned int flags , hs_scratch_t * scratch , match_event_handler onEvent , void * context )//矢量模式匹配函数</code></p>\n<ul>\n<li>参数\n<ul>\n<li>db：编译后的模式数据库</li>\n<li>data：指向要扫描的数据块的指针数组</li>\n<li>length：要扫描的每个数据块的长度数组（以字节为单位）</li>\n<li>count：要扫描的数据块数。这应该对应于 data 和 length 数组的大小</li>\n<li>flags：修改此函数行为的标志。该参数供将来使用，目前未使用</li>\n<li>scratch：由 hs_alloc_scratch () 为此数据库分配的每线程暂存空间</li>\n<li>onEvent: 指向匹配事件回调函数的指针。如果给出 NULL 指针，则不会返回匹配项</li>\n<li>context: 将传递给回调函数的用户定义的指针</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_alloc_scratch( const hs_database_t * db , hs_scratch_t ** scratch )//分配草稿空间</code></p>\n<ul>\n<li>\n<p>参数</p>\n<ul>\n<li>db：由 hs_compile () 生成的数据库</li>\n<li>scratch: 在第一次分配时，应该提供一个指向 NULL 的指针，以便可以分配一个新的临时文件。如果之前已经分配了一个临时块，那么应该返回一个指向它的指针，以查看它对该数据库块是否有效。如果需要一个新的临时块，则将释放原始块并返回新的临时块，否则将返回之前的临时块。</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_clone_scratch( const hs_scratch_t * src , hs_scratch_t ** dest )/克隆当前草稿空间</code></p>\n<ul>\n<li>当多个并发线程将使用同一组编译数据库并且需要另一个暂存空间时，这很有用。</li>\n<li>参数\n<ul>\n<li>src: 要克隆的现有 hs_scratch_t</li>\n<li>dest: 这里会返回一个指向新暂存空间的指针</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_scratch_size( const hs_scratch_t * scratch , size_t * scratch_size )//计算草稿空间大小</code></p>\n<ul>\n<li>参数\n<ul>\n<li>scratch：由 hs_alloc_scratch () 或 hs_clone_scratch () 分配的每线程暂存空间</li>\n<li>scratch_size: 成功时，以字节为单位的暂存空间的大小放置在此参数中</li>\n</ul>\n</li>\n</ul>\n<p><code>hs_error_t hs_free_scratch( hs_scratch_t * scratch )//释放草稿空间</code></p>\n<ul>\n<li>释放草稿空间</li>\n<li>参数\n<ul>\n<li>scratch：要释放的暂存块。NULL 也可以安全地提供。</li>\n</ul>\n</li>\n</ul>\n<p>附：流模式、块模式、矢量模式区别<br />\n 1、块模式是最简单的匹配模式，使用一维数组装入所有数据进行匹配。<br />\n2、流模式是将数据库流化，数据不是直接全部装入，而是使用一维数组不完整地分批传入，流化的数据库对这些数据依次拼接匹配，适用于网络场景。<br />\n3、矢量模式可以理解为一次使用多个块模式，即使用二维数组一次匹配若干个块。</p>\n",
            "tags": [
                "计算机科学",
                "高性能正则"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/hyperscan/hyperscan-intro/",
            "url": "https://echidna-sxh.github.io/hyperscan/hyperscan-intro/",
            "title": "section1--hyperscan简介和编译",
            "date_published": "2021-08-15T08:29:28.000Z",
            "content_html": "<h1 id=\"hyperscan简介\"><a class=\"anchor\" href=\"#hyperscan简介\">#</a> hyperscan 简介</h1>\n<ul>\n<li>hyperscan 是英特尔推出的一款正则表达式引擎，以自动机理论为基础，编译内核实现是 c++, 运行期开发使用 c 语言，支持跨平台开发.</li>\n</ul>\n<h2 id=\"特点\"><a class=\"anchor\" href=\"#特点\">#</a> 特点</h2>\n<ul>\n<li>高性能\n<ul>\n<li>相对比经典正则表达式匹配库 pcre, 其性能最高有着数百倍的提升.</li>\n</ul>\n</li>\n<li>支持多模\n<ul>\n<li>相对比 pcre 需要单独对每一条正则规则进行编译，hyperscan 支持一条编译接口实现多模式匹配</li>\n</ul>\n</li>\n<li>支持流式匹配\n<ul>\n<li>实际网络应用场景中多是流数据，而 hyperscan 对于这种匹配模式的支持无疑是顺应需求.</li>\n</ul>\n</li>\n<li>大规模匹配\n<ul>\n<li>可以同时支持上万条规则的匹配</li>\n</ul>\n</li>\n</ul>\n<h2 id=\"原理\"><a class=\"anchor\" href=\"#原理\">#</a> 原理</h2>\n<ul>\n<li>\n<p>hyperscan 的工作流程包括两个，编译期和运行期.</p>\n<ul>\n<li>\n<p>编译期</p>\n<p>编译期主要是将正则表达式作为输入，生成对应的模式数据库，保存在内存中，供运行期调用，也可以使用额外的接口存储在硬盘，供后续使用，该数据库只读，所以支持多核或多线程使用该数据库.</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/hyperscan/UX%7BXXMWP7P%404DLDG6R~CRTB.png\" alt=\"\" /></p>\n</li>\n<li>\n<p>运行期</p>\n<p>运行期需要用户分配内存进行匹配信息临时存储，同时其内核使用 NFA/DFA 等自动机进行输入数据和数据库的模式匹配，用户在此时使用自定义的回调函数来对匹配结果进行处理.</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/hyperscan/UX%7BXXMWP7P%404DLDG6R~CRTB.png\" alt=\"\" /></p>\n</li>\n</ul>\n<p>其中的详细参数会在后续 API 篇详细介绍.</p>\n</li>\n</ul>\n<h2 id=\"编译\"><a class=\"anchor\" href=\"#编译\">#</a> 编译</h2>\n<ul>\n<li>\n<p>目标版本:hyperscan-5.1.0</p>\n</li>\n<li>\n<p>编译准备</p>\n<ul>\n<li>\n<p>ragel-6.10</p>\n<p>源码下载地址:<span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5jb2xtLm5ldC9vcGVuLXNvdXJjZS9yYWdlbC8=\">http://www.colm.net/open-source/ragel/</span></p>\n</li>\n<li>\n<p>boost_1_69_0</p>\n<p>源码下载地址:<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYm9vc3Qub3JnL3VzZXJzL2hpc3RvcnkvdmVyc2lvbl8xXzY5XzAuaHRtbA==\">https://www.boost.org/users/history/version_1_69_0.html</span></p>\n</li>\n<li>\n<p>hyperscan-5.1.0</p>\n<p>源码下载地址:<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2ludGVsL2h5cGVyc2Nhbi9yZWxlYXNlcy90YWcvdjUuMS4w\">https://github.com/intel/hyperscan/releases/tag/v5.1.0</span></p>\n</li>\n</ul>\n</li>\n<li>\n<p>将所下载的源码包放在同一目录下，以下操作起始目录均为此。然后开始编译安装.</p>\n</li>\n<li>\n<p>安装 regel</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">tar</span> -xvf ragel-6.10.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> ragel-6.10</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ ./configure</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">make</span> </pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ ldconfig</pre></td></tr></table></figure></li>\n<li>\n<p>安装 boost</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">tar</span> -xvf boost_1_69_0.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> boost_1_69_0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ ./bootstrap.sh</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token function\">sudo</span> ./b2 --with-iostreams --with-random <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ ldconfig</pre></td></tr></table></figure><p>注意此步骤需要的内存较大，请务必保证机器内存充足 (实测内存 2g 报错，4g 通过)</p>\n</li>\n<li>\n<p>安装 hyperscan</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">tar</span> -xvf hyperscan-5.1.0.tar.gz</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> hyperscan-5.1.0</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>$ <span class=\"token function\">mkdir</span> cmake-build</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> cmake-build</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>$ cmake -DBUILD_SHARED_LIBS<span class=\"token operator\">=</span>on -DCMAKE_BUILD_TYPE<span class=\"token operator\">=</span>Release <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$ <span class=\"token function\">make</span> -j8</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>$ <span class=\"token function\">sudo</span> <span class=\"token function\">make</span> <span class=\"token function\">install</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>$ ldconfig</pre></td></tr></table></figure><p>编辑过程较长，可能会报 warning, 无伤大雅，过程依赖 g++, 请确保 g++ 的安装.</p>\n</li>\n<li>\n<p>安装完成后，在 /usr/local/include 目录下生成 hs 的相关头文件，即为编译完成.</p>\n</li>\n</ul>\n<h2 id=\"环境变量配置\"><a class=\"anchor\" href=\"#环境变量配置\">#</a> 环境变量配置</h2>\n<ul>\n<li>\n<p>hyperscan 不会自动添加环境配置，因此需要手动修改.</p>\n</li>\n<li>\n<p>建议修改<sub> /.bashrc 文件，如希望对所有用户生效，可以修改 /etc/bashrc 文件，如修改</sub> /.bash_profile, 可能每次都需要 source 一下.</p>\n<ul>\n<li>在～/.bashrc 中添加如下配置:</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\"><span class=\"token environment constant\">PATH</span></span><span class=\"token operator\">=</span><span class=\"token environment constant\">$PATH</span>:/usr/local/bin</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">export</span> <span class=\"token environment constant\">PATH</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token assign-left variable\">C_INCLUDE_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$C_INCLUDE_PATH</span>:/usr/local/include/hs</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token builtin class-name\">export</span> C_INCLUDE_PATH</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token assign-left variable\">CPLUS_INCLUDE_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$CPLUS_INCLUDE_PATH</span>:/usr/local/include/hs</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token builtin class-name\">export</span> CPLUS_INCLUDE_PATH</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token assign-left variable\">LD_LIBRARY_PATH</span><span class=\"token operator\">=</span><span class=\"token variable\">$LD_LIBRARY_PATH</span>:/usr/local/lib64:/usr/local/lib</pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token builtin class-name\">export</span> LD_LIBRARY_PATH</pre></td></tr></table></figure><p>然后 source ~/.bashrc 即可.</p>\n</li>\n<li>\n<p>用 echo 将这几个环境变量打印出来，检查是否成功即可.</p>\n</li>\n</ul>\n<p>至此，hyperscan 安装完成.</p>\n",
            "tags": [
                "计算机科学",
                "高性能正则"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/pf_ring/pf_ring/",
            "url": "https://echidna-sxh.github.io/pf_ring/pf_ring/",
            "title": "Pfring原理",
            "date_published": "2021-08-11T10:29:28.000Z",
            "content_html": "<h1 id=\"概述\"><a class=\"anchor\" href=\"#概述\">#</a> 概述</h1>\n<p>pf_ring 是一种新型网络套接字，用于高速收发包。</p>\n<p>网络套接字 (network socket) 是程序通过网络进行通信的端点，而在类 UNIX 系统中，端点即是文件，套接字是一种使用标准 UNIX 文件描述符与其他计算机上的程序通信的方法，对于程序员来说，套接字的外观和行为非常类似于低级文件描述符。这是因为 read（）和 write（）等命令处理套接字的方式与处理文件和管道的方式相同。</p>\n<p>pf_ring 具有以下特点：</p>\n<pre><code>1.加载方便，不使用零拷贝模式只需编译加载自带的内核模块即可。\n\n2.支持硬件数据包过滤器\n\n3.提供零拷贝模式，直接将网卡缓冲区数据映射到用户内存(收费)\n\n4.libpcap支持，向下兼容\n</code></pre>\n<p>对于流量监控项目而言，传统上可以使用 libpcap 进行报文捕获，也就是在 linux 网络协议栈流程中加入了一次拷贝，即旁路处理，对发送和接收的数据包通过 Linux 内核做过滤和缓冲处理，最后直接传递给上层应用程序。libpcap 绕开了传统 linux 协议栈处理，直接使用链路层 PF_PACKET 协议族原始套接字方式向用户空间传递报文。</p>\n<p>事实上，这种步骤存在大量性能上的提升点。首先来看以下传统的 linux 协议栈处理流程。<br />\n<img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/pf_ring/Linux_normal.jpg\" alt=\"\" /></p>\n<ol>\n<li>首先，数据到达网卡寄存器</li>\n<li>接着，网卡进行 DMA 操作，将数据从网卡寄存器拷贝至系统态的 DMA 缓冲区，第一次拷贝</li>\n<li>数据拷贝完成后网卡发送中断信号</li>\n<li>系统内核使用网卡驱动将该缓存区域的内容拷贝至内核专用的区域 (也有的系统对此进行了优化，该次拷贝可能不存在)，第二次拷贝</li>\n<li>内核对报文进行协议栈处理</li>\n<li>socket 系统调用将数据从内核态空间搬运至用户态空间，第三次拷贝</li>\n</ol>\n<p>可以看到，这些步骤进行了多次拷贝动作，还发生了一次系统调用，内存拷贝占了约 65% 的时间，系统调用占了约 10% 的时间。</p>\n<p>另外第三步和第四步是指适配 NAPI 的网卡，会采用一次中断后轮询获取多个数据包，否则是采取不断发送中断信号的方式获取数据包。</p>\n<h1 id=\"libpcap\"><a class=\"anchor\" href=\"#libpcap\">#</a> libpcap</h1>\n<p>上面说到，libpcap 就是利用网络分接口实现旁路机制，也就是在数据链路层处复制一份本该传递给网络层的包，直接拷贝到系统内核缓存，再用 PF_PACKET 从系统内核缓存拷贝到用户态空间，其比正常报文处理少了协议栈流程，多了一次拷贝，系统调用次数一样。注意这里报文实际上是同时进入协议栈和系统内核缓冲，不会影响正常报文处理，如下。<br />\n<img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/pf_ring/libpcap.png\" alt=\"\" /></p>\n<p>ps：对于最后一步的系统调用，最新版本的 libpcap 使用了 mmap，减少了最后一次从系统态到用户态的拷贝。</p>\n<h1 id=\"pf_ring\"><a class=\"anchor\" href=\"#pf_ring\">#</a> pf_ring</h1>\n<p>pf_ring 的思路是减少数据包在传输过程中的的拷贝次数，如下图所示。<br />\n<img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/pf_ring/pfring.webp\" alt=\"\" /><br />\npfring 提供三类抓包方式</p>\n<ul>\n<li>第一种是不使用 pfring 抓包的做法，首先将数据拷贝到系统态收包缓冲区，之后复制一份到内核缓冲区，之后复制到用户态空间。</li>\n<li>第二种是 pf_ring 的非 ZC 模式做法，将系统态的收包缓冲区复制到内核缓冲区，然后通过 mmap 映射给用户态空间，减少了一次用户态和系统态之间的拷贝。</li>\n<li>第三种是 pf_ring 的 ZC 模式做法，实现了 DNA，即直接网卡访问技术，将收包缓冲区直接映射给了用户态，除了 DMA 操作之外，没有拷贝。</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "pf_ring"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/kafka/kafka_env/",
            "url": "https://echidna-sxh.github.io/computer-science/kafka/kafka_env/",
            "title": "kafka构建",
            "date_published": "2021-08-11T10:29:28.000Z",
            "content_html": "<h1 id=\"步骤\"><a class=\"anchor\" href=\"#步骤\">#</a> 步骤</h1>\n<ul>\n<li>使用 librdkafka 库接口进行程序开发</li>\n<li>使用 docker-compose 配置 kafka 集群</li>\n<li>使用 kafka tools (即 offset explorer) 管理</li>\n</ul>\n<h1 id=\"环境\"><a class=\"anchor\" href=\"#环境\">#</a> 环境</h1>\n<p>centos7</p>\n<h1 id=\"命令\"><a class=\"anchor\" href=\"#命令\">#</a> 命令</h1>\n<p>安装 libkafka 库</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> librdkafka-devel</pre></td></tr></table></figure><p>进入代码所在目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">make</span></pre></td></tr></table></figure><p>生成 main 可执行文件</p>\n<p>使用 docker-compose 构建 kafka 集群</p>\n<p>docker-compose 安装方法较多，也可以到本人阿里云的对象存储处直接下载一个可执行文件到 /bin 目录，链接如下：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lY2hpZG5hLXN4aC5vc3MtY24tYmVpamluZy5hbGl5dW5jcy5jb20vZG9ja2VyLWNvbXBvc2UtTGludXgteDg2XzY0\">下载 docker-compose</span></p>\n<p>拉取镜像</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>docker pull zookeeper</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker pull wurstmeister/kafka</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker pull sheepkiller/kafka-manager</pre></td></tr></table></figure><p>创建构造目录</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mkdir</span> docker-compose</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">cd</span> docker-compose</pre></td></tr></table></figure><p>将以下两个文件放入该目录</p>\n<p>文件名：kafka-stack.yml</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>version: <span class=\"token string\">'3.1'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>services:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  broker1:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    image: wurstmeister/kafka</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    hostname: broker1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      - <span class=\"token string\">\"9091:9091\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      KAFKA_BROKER_ID: <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      KAFKA_LISTENERS: PLAINTEXT://broker1:9091</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker1:9091</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      KAFKA_ADVERTISED_HOST_NAME: broker1</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      KAFKA_ADVERTISED_PORT: <span class=\"token number\">9091</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka1,zoo2:2182/kafka1,zoo3:2183/kafka1</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      JMX_PORT: <span class=\"token number\">9988</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    external_links:</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    - zoo1</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    - zoo2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    - zoo3</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>  broker2:</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    image: wurstmeister/kafka</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    hostname: broker2</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>      - <span class=\"token string\">\"9092:9092\"</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      KAFKA_BROKER_ID: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>      KAFKA_LISTENERS: PLAINTEXT://broker2:9092</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker2:9092</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      KAFKA_ADVERTISED_HOST_NAME: broker2</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>      KAFKA_ADVERTISED_PORT: <span class=\"token number\">9092</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka1,zoo2:2182/kafka1,zoo3:2183/kafka1</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>      JMX_PORT: <span class=\"token number\">9988</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    external_links:</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    - zoo1</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    - zoo2</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    - zoo3</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>  broker3:</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    image: wurstmeister/kafka</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    hostname: broker3</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>      - <span class=\"token string\">\"9093:9093\"</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>      KAFKA_BROKER_ID: <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>      KAFKA_LISTENERS: PLAINTEXT://broker3:9093</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://broker3:9093</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>      KAFKA_ADVERTISED_HOST_NAME: broker3</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>      KAFKA_ADVERTISED_PORT: <span class=\"token number\">9093</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>      KAFKA_ZOOKEEPER_CONNECT: zoo1:2181/kafka1,zoo2:2182/kafka1,zoo3:2183/kafka1</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>      JMX_PORT: <span class=\"token number\">9988</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    external_links:</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    - zoo1</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    - zoo2</pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    - zoo3</pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>  kafka-manager:</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    image: sheepkiller/kafka-manager:latest</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    hostname: kafka-manager</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>      - <span class=\"token string\">\"9000:9000\"</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    links:</pre></td></tr><tr><td data-num=\"68\"></td><td><pre>      - broker1</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>      - broker2</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>      - broker3</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    external_links:</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>      - zoo1</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>      - zoo2</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>      - zoo3</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>      ZK_HOSTS: zoo1:2181/kafka1,zoo2:2182/kafka1,zoo3:2183/kafka1</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>      KAFKA_BROKERS: broker1:9091,broker2:9092,broker3:9093</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>      APPLICATION_SECRET: letmein</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>      KM_ARGS: -Djava.net.preferIPv4Stack<span class=\"token operator\">=</span>true</pre></td></tr></table></figure><p>文件名：zk-stack.yml</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>version: <span class=\"token string\">'3.1'</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>services:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  zoo1:</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    image: zookeeper</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    hostname: zoo1</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      - <span class=\"token number\">2181</span>:2181</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>      ZOO_MY_ID: <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      ZOO_SERVERS: server.1<span class=\"token operator\">=</span>zoo1:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2181</span> server.2<span class=\"token operator\">=</span>zoo2:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2182</span> server.3<span class=\"token operator\">=</span>zoo3:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2183</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  zoo2:</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    image: zookeeper</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    hostname: zoo2</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>      - <span class=\"token number\">2182</span>:2182</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>      ZOO_MY_ID: <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>      ZOO_SERVERS: server.1<span class=\"token operator\">=</span>zoo1:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2181</span> server.2<span class=\"token operator\">=</span>zoo2:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2182</span> server.3<span class=\"token operator\">=</span>zoo3:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2183</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>  zoo3:</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    image: zookeeper</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    restart: always</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    hostname: zoo3</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    ports:</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      - <span class=\"token number\">2183</span>:2183</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    environment:</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      ZOO_MY_ID: <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>      ZOO_SERVERS: server.1<span class=\"token operator\">=</span>zoo1:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2181</span> server.2<span class=\"token operator\">=</span>zoo2:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2182</span> server.3<span class=\"token operator\">=</span>zoo3:2888:3888<span class=\"token punctuation\">;</span><span class=\"token number\">2183</span></pre></td></tr></table></figure><p>在该目录下运行以下命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>systemctl start docker</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>docker-compose -f zk-stack.yml up -d</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>docker-compose -f kafka-stack.yml up -d</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>docker <span class=\"token function\">ps</span> -a</pre></td></tr></table></figure><p>看到六个容器全部 up 了即成功。</p>\n<p>此时 kafka 集群已经构建完成。</p>\n<p>在 hosts 文件中加入映射：</p>\n<pre><code>0.0.0.0     zoo1 zoo2 zoo3 broker1 broker2 broker3 #此处ip地址代指本机的所有ipv4地址。\n</code></pre>\n<p>我们使用编译完成的 demo 测试以下，打开两个终端，cd 到 main 可执行文件的目录下，分别执行：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>./main p</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>./main c</pre></td></tr></table></figure><p>可以看到生产者和消费者的进程。</p>\n<p>生产者：</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/producer.png\" alt=\"\" /></p>\n<p>消费者：</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/consumer.png\" alt=\"\" /></p>\n<p>在带有 GUI 的系统中下载<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cua2Fma2F0b29sLmNvbS9kb3dubG9hZC5odG1s\"> kafka tools</span></p>\n<p>安装之前修改一下本机 hosts，</p>\n<pre><code>192.168.88.132 zoo1 zoo2 zoo3 broker1 broker2 broker3    # 此处ip地址为安装kafka集群的机器的ip，若使用多个机器请分别映射。\n</code></pre>\n<p>安装完成后，FILE-&gt;ADD CONNECTION, 配置如下：<br />\n<img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/kafkatools.png\" alt=\"\" /></p>\n<p>即可连接并管理。</p>\n<ul>\n<li>\n<p>注意当使用非本机访问本机 kafka 时，需要配置并使用对外 ip 和端口，如下：</p>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/server.properties.png\" alt=\"\" /><br />\n该配置文件为 kafka 安装目录下的 config/server.properties</p>\n</li>\n<li>\n<p>生产消息时，partition 建议使用 - 1 值来自动决定 partition。</p>\n</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "kafka"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/kafka/kafka_config/",
            "url": "https://echidna-sxh.github.io/computer-science/kafka/kafka_config/",
            "title": "kafka附录",
            "date_published": "2021-08-11T10:29:28.000Z",
            "content_html": "<h1 id=\"摘自官网配置项相关\"><a class=\"anchor\" href=\"#摘自官网配置项相关\">#</a> 摘自官网，配置项相关</h1>\n<h2 id=\"global-configuration-properties\"><a class=\"anchor\" href=\"#global-configuration-properties\">#</a> Global configuration properties</h2>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>C/P</th>\n<th>Range</th>\n<th style=\"text-align:right\">Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>builtin.features</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">gzip, snappy, ssl, sasl, regex, lz4</td>\n<td>Indicates the builtin features for this build of librdkafka. An application can either query this value or attempt to set it with its list of required features to check for library support. &lt;br&gt;<em>Type: CSV flags</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2NsaWVudC5pZA==\">client.id</span></td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">rdkafka</td>\n<td>Client identifier. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>metadata.broker.list</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Initial list of brokers. The application may also use  <code>rd_kafka_brokers_add()</code>  to add brokers during runtime. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>bootstrap.servers</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>metadata.broker.list</code></td>\n</tr>\n<tr>\n<td>message.max.bytes</td>\n<td>*</td>\n<td>1000 .. 1000000000</td>\n<td style=\"text-align:right\">1000000</td>\n<td>Maximum transmit message size. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>message.copy.max.bytes</td>\n<td>*</td>\n<td>0 .. 1000000000</td>\n<td style=\"text-align:right\">65535</td>\n<td>Maximum size for message to be copied to buffer. Messages larger than this will be passed by reference (zero-copy) at the expense of larger iovecs. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>receive.message.max.bytes</td>\n<td>*</td>\n<td>1000 .. 1000000000</td>\n<td style=\"text-align:right\">100000000</td>\n<td>Maximum receive message size. This is a safety precaution to avoid memory exhaustion in case of protocol hickups. The value should be at least fetch.message.max.bytes * number of partitions consumed from + messaging overhead (e.g. 200000 bytes). &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>max.in.flight.requests.per.connection</td>\n<td>*</td>\n<td>1 .. 1000000</td>\n<td style=\"text-align:right\">1000000</td>\n<td>Maximum number of in-flight requests the client will send. This setting applies per broker connection. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL21ldGFkYXRhLnJlcXVlc3QudGltZW91dC5tcw==\">metadata.request.timeout.ms</span></td>\n<td>*</td>\n<td>10 .. 900000</td>\n<td style=\"text-align:right\">60000</td>\n<td>Non-topic request timeout in milliseconds. This is for metadata requests, etc. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RvcGljLm1ldGFkYXRhLnJlZnJlc2guaW50ZXJ2YWwubXM=\">topic.metadata.refresh.interval.ms</span></td>\n<td>*</td>\n<td>-1 .. 3600000</td>\n<td style=\"text-align:right\">300000</td>\n<td>Topic metadata refresh interval in milliseconds. The metadata is automatically refreshed on error and connect. Use -1 to disable the intervalled refresh. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL21ldGFkYXRhLm1heC5hZ2UubXM=\">metadata.max.age.ms</span></td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>topic.metadata.refresh.interval.ms</code></td>\n</tr>\n<tr>\n<td>topic.metadata.refresh.fast.cnt</td>\n<td>*</td>\n<td>0 .. 1000</td>\n<td style=\"text-align:right\">10</td>\n<td>When a topic looses its leader this number of metadata requests are sent with  <code>topic.metadata.refresh.fast.interval.ms</code>  interval disregarding the  <code>topic.metadata.refresh.interval.ms</code>  value. This is used to recover quickly from transitioning leader brokers. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3RvcGljLm1ldGFkYXRhLnJlZnJlc2guZmFzdC5pbnRlcnZhbC5tcw==\">topic.metadata.refresh.fast.interval.ms</span></td>\n<td>*</td>\n<td>1 .. 60000</td>\n<td style=\"text-align:right\">250</td>\n<td>See  <code>topic.metadata.refresh.fast.cnt</code>  description &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>topic.metadata.refresh.sparse</td>\n<td>*</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>Sparse metadata requests (consumes less network bandwidth) &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>topic.blacklist</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Topic blacklist, a comma-separated list of regular expressions for matching topic names that should be ignored in broker metadata information as if the topics did not exist. &lt;br&gt;<em>Type: pattern list</em></td>\n</tr>\n<tr>\n<td>debug</td>\n<td>*</td>\n<td>generic, broker, topic, metadata, queue, msg, protocol, cgrp, security, fetch, feature, all</td>\n<td style=\"text-align:right\"></td>\n<td>A comma-separated list of debug contexts to enable. Debugging the Producer: broker,topic,msg. Consumer: cgrp,topic,fetch &lt;br&gt;<em>Type: CSV flags</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC50aW1lb3V0Lm1z\">socket.timeout.ms</span></td>\n<td>*</td>\n<td>10 .. 300000</td>\n<td style=\"text-align:right\">60000</td>\n<td>Timeout for network requests. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3NvY2tldC5ibG9ja2luZy5tYXgubXM=\">socket.blocking.max.ms</span></td>\n<td>*</td>\n<td>1 .. 60000</td>\n<td style=\"text-align:right\">100</td>\n<td>Maximum time a broker socket operation may block. A lower value improves responsiveness at the expense of slightly higher CPU usage. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>socket.send.buffer.bytes</td>\n<td>*</td>\n<td>0 .. 100000000</td>\n<td style=\"text-align:right\">0</td>\n<td>Broker socket send buffer size. System default is used if 0. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>socket.receive.buffer.bytes</td>\n<td>*</td>\n<td>0 .. 100000000</td>\n<td style=\"text-align:right\">0</td>\n<td>Broker socket receive buffer size. System default is used if 0. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>socket.keepalive.enable</td>\n<td>*</td>\n<td>true, false</td>\n<td style=\"text-align:right\">false</td>\n<td>Enable TCP keep-alives (SO_KEEPALIVE) on broker sockets &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>socket.max.fails</td>\n<td>*</td>\n<td>0 .. 1000000</td>\n<td style=\"text-align:right\">3</td>\n<td>Disconnect from broker when this number of send failures (e.g., timed out requests) is reached. Disable with 0. NOTE: The connection is automatically re-established. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>broker.address.ttl</td>\n<td>*</td>\n<td>0 .. 86400000</td>\n<td style=\"text-align:right\">1000</td>\n<td>How long to cache the broker address resolving results (milliseconds). &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>broker.address.family</td>\n<td>*</td>\n<td>any, v4, v6</td>\n<td style=\"text-align:right\">any</td>\n<td>Allowed broker IP address families: any, v4, v6 &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3JlY29ubmVjdC5iYWNrb2ZmLmppdHRlci5tcw==\">reconnect.backoff.jitter.ms</span></td>\n<td>*</td>\n<td>0 .. 3600000</td>\n<td style=\"text-align:right\">500</td>\n<td>Throttle broker reconnection attempts by this value +-50%. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3N0YXRpc3RpY3MuaW50ZXJ2YWwubXM=\">statistics.interval.ms</span></td>\n<td>*</td>\n<td>0 .. 86400000</td>\n<td style=\"text-align:right\">0</td>\n<td>librdkafka statistics emit interval. The application also needs to register a stats callback using  <code>rd_kafka_conf_set_stats_cb()</code> . The granularity is 1000ms. A value of 0 disables statistics. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>enabled_events</td>\n<td>*</td>\n<td>0 .. 2147483647</td>\n<td style=\"text-align:right\">0</td>\n<td>See  <code>rd_kafka_conf_set_events()</code>  &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>error_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Error callback (set with rd_kafka_conf_set_error_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>throttle_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Throttle callback (set with rd_kafka_conf_set_throttle_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>stats_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Statistics callback (set with rd_kafka_conf_set_stats_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>log_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Log callback (set with rd_kafka_conf_set_log_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>log_level</td>\n<td>*</td>\n<td>0 .. 7</td>\n<td style=\"text-align:right\">6</td>\n<td>Logging level (syslog(3) levels) &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2xvZy50aHJlYWQubmFtZQ==\">log.thread.name</span></td>\n<td>*</td>\n<td>true, false</td>\n<td style=\"text-align:right\">false</td>\n<td>Print internal thread name in log messages (useful for debugging librdkafka internals) &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>log.connection.close</td>\n<td>*</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>Log broker disconnects. It might be useful to turn this off when interacting with 0.9 brokers with an aggressive  <code>connection.max.idle.ms</code>  value. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>socket_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Socket creation callback to provide race-free CLOEXEC &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>open_cb</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>File open callback to provide race-free CLOEXEC &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>opaque</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Application opaque (set with rd_kafka_conf_set_opaque()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>default_topic_conf</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Default topic configuration for automatically subscribed topics &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>internal.termination.signal</td>\n<td>*</td>\n<td>0 .. 128</td>\n<td style=\"text-align:right\">0</td>\n<td>Signal that librdkafka will use to quickly terminate on rd_kafka_destroy(). If this signal is not set then there will be a delay before rd_kafka_wait_destroyed() returns true as internal threads are timing out their system calls. If this signal is set however the delay will be minimal. The application should mask this signal as an internal signal handler is installed. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>api.version.request</td>\n<td>*</td>\n<td>true, false</td>\n<td style=\"text-align:right\">false</td>\n<td>Request broker's supported API versions to adjust functionality to available protocol features. If set to false the fallback version  <code>broker.version.fallback</code>  will be used. <strong>NOTE</strong>: Depends on broker version &gt;=0.10.0. If the request is not supported by (an older) broker the  <code>broker.version.fallback</code>  fallback is used. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2FwaS52ZXJzaW9uLmZhbGxiYWNrLm1z\">api.version.fallback.ms</span></td>\n<td>*</td>\n<td>0 .. 604800000</td>\n<td style=\"text-align:right\">1200000</td>\n<td>Dictates how long the  <code>broker.version.fallback</code>  fallback is used in the case the ApiVersionRequest fails. <strong>NOTE</strong>: The ApiVersionRequest is only issued when a new connection to the broker is made (such as after an upgrade). &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>broker.version.fallback</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">0.9.0</td>\n<td>Older broker versions (&lt;0.10.0) provides no way for a client to query for supported protocol features (ApiVersionRequest, see  <code>api.version.request</code> ) making it impossible for the client to know what features it may use. As a workaround a user may set this property to the expected broker version and the client will automatically adjust its feature set accordingly if the ApiVersionRequest fails (or is disabled). The fallback broker version will be used for  <code>api.version.fallback.ms</code> . Valid values are: 0.9.0, 0.8.2, 0.8.1, 0.8.0. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>security.protocol</td>\n<td>*</td>\n<td>plaintext, ssl, sasl_plaintext, sasl_ssl</td>\n<td style=\"text-align:right\">plaintext</td>\n<td>Protocol used to communicate with brokers. &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>ssl.cipher.suites</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>A cipher suite is a named combination of authentication, encryption, MAC and key exchange algorithm used to negotiate the security settings for a network connection using TLS or SSL network protocol. See manual page for  <code>ciphers(1)</code>  and `SSL_CTX_set_cipher_list(3). &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>ssl.key.location</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Path to client's private key (PEM) used for authentication. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>ssl.key.password</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Private key passphrase &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>ssl.certificate.location</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Path to client's public key (PEM) used for authentication. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>ssl.ca.location</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>File or directory path to CA certificate(s) for verifying the broker's key. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>ssl.crl.location</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Path to CRL for verifying broker's certificate validity. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.mechanisms</td>\n<td>*</td>\n<td>GSSAPI, PLAIN</td>\n<td style=\"text-align:right\">GSSAPI</td>\n<td>SASL mechanism to use for authentication. Supported: GSSAPI, PLAIN. <strong>NOTE</strong>: Despite the name only one mechanism must be configured. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3Nhc2wua2VyYmVyb3Muc2VydmljZS5uYW1l\">sasl.kerberos.service.name</span></td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">kafka</td>\n<td>Kerberos principal name that Kafka runs as. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.kerberos.principal</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">kafkaclient</td>\n<td>This client's Kerberos principal name. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.kerberos.kinit.cmd</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\" sasl.kerberos.principal=\"\">kinit -S &quot;%{<span class=\"exturl\" data-url=\"aHR0cDovL3Nhc2wua2VyYmVyb3Muc2VydmljZS5uYW1l\">sasl.kerberos.service.name</span>}/%{<span class=\"exturl\" data-url=\"aHR0cDovL2Jyb2tlci5uYW1l\">broker.name</span>}&quot; -k -t &quot;%{sasl.kerberos.keytab}&quot; %</td>\n<td>Full kerberos kinit command string, %{<span class=\"exturl\" data-url=\"aHR0cDovL2NvbmZpZy5wcm9wLm5hbWU=\">config.prop.name</span>} is replaced by corresponding config object value, %{<span class=\"exturl\" data-url=\"aHR0cDovL2Jyb2tlci5uYW1l\">broker.name</span>} returns the broker's hostname. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.kerberos.keytab</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Path to Kerberos keytab file. Uses system default if not set.<strong>NOTE</strong>: This is not automatically used but must be added to the template in sasl.kerberos.kinit.cmd as  <code> ... -t %&#123;sasl.kerberos.keytab&#125;</code> . &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.kerberos.min.time.before.relogin</td>\n<td>*</td>\n<td>1 .. 86400000</td>\n<td style=\"text-align:right\">60000</td>\n<td>Minimum time in milliseconds between key refresh attempts. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>sasl.username</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>SASL username for use with the PLAIN mechanism &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>sasl.password</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>SASL password for use with the PLAIN mechanism &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2dyb3VwLmlk\">group.id</span></td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Client group id string. All clients sharing the same <span class=\"exturl\" data-url=\"aHR0cDovL2dyb3VwLmlk\">group.id</span> belong to the same group. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td>partition.assignment.strategy</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">range,roundrobin</td>\n<td>Name of partition assignment strategy to use when elected group leader assigns partitions to group members. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3Nlc3Npb24udGltZW91dC5tcw==\">session.timeout.ms</span></td>\n<td>*</td>\n<td>1 .. 3600000</td>\n<td style=\"text-align:right\">30000</td>\n<td>Client group session and failure detection timeout. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2hlYXJ0YmVhdC5pbnRlcnZhbC5tcw==\">heartbeat.interval.ms</span></td>\n<td>*</td>\n<td>1 .. 3600000</td>\n<td style=\"text-align:right\">1000</td>\n<td>Group session keepalive heartbeat interval. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>group.protocol.type</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\">consumer</td>\n<td>Group protocol type &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2Nvb3JkaW5hdG9yLnF1ZXJ5LmludGVydmFsLm1z\">coordinator.query.interval.ms</span></td>\n<td>*</td>\n<td>1 .. 3600000</td>\n<td style=\"text-align:right\">600000</td>\n<td>How often to query for the current client group coordinator. If the currently assigned coordinator is down the configured query interval will be divided by ten to more quickly recover in case of coordinator reassignment. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>enable.auto.commit</td>\n<td>C</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>Automatically and periodically commit offsets in the background. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2F1dG8uY29tbWl0LmludGVydmFsLm1z\">auto.commit.interval.ms</span></td>\n<td>C</td>\n<td>0 .. 86400000</td>\n<td style=\"text-align:right\">5000</td>\n<td>The frequency in milliseconds that the consumer offsets are committed (written) to offset storage. (0 = disable) &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>enable.auto.offset.store</td>\n<td>C</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>Automatically store offset of last message provided to application. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>queued.min.messages</td>\n<td>C</td>\n<td>1 .. 10000000</td>\n<td style=\"text-align:right\">100000</td>\n<td>Minimum number of messages per topic+partition in the local consumer queue. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>queued.max.messages.kbytes</td>\n<td>C</td>\n<td>1 .. 1000000000</td>\n<td style=\"text-align:right\">1000000</td>\n<td>Maximum number of kilobytes per topic+partition in the local consumer queue. This value may be overshot by fetch.message.max.bytes. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2ZldGNoLndhaXQubWF4Lm1z\">fetch.wait.max.ms</span></td>\n<td>C</td>\n<td>0 .. 300000</td>\n<td style=\"text-align:right\">100</td>\n<td>Maximum time the broker may wait to fill the response with fetch.min.bytes. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>fetch.message.max.bytes</td>\n<td>C</td>\n<td>1 .. 1000000000</td>\n<td style=\"text-align:right\">1048576</td>\n<td>Initial maximum number of bytes per topic+partition to request when fetching messages from the broker. If the client encounters a message larger than this value it will gradually try to increase it until the entire message can be fetched. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>max.partition.fetch.bytes</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>fetch.message.max.bytes</code></td>\n</tr>\n<tr>\n<td>fetch.min.bytes</td>\n<td>C</td>\n<td>1 .. 100000000</td>\n<td style=\"text-align:right\">1</td>\n<td>Minimum number of bytes the broker responds with. If <span class=\"exturl\" data-url=\"aHR0cDovL2ZldGNoLndhaXQubWF4Lm1z\">fetch.wait.max.ms</span> expires the accumulated data will be sent to the client regardless of this setting. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2ZldGNoLmVycm9yLmJhY2tvZmYubXM=\">fetch.error.backoff.ms</span></td>\n<td>C</td>\n<td>0 .. 300000</td>\n<td style=\"text-align:right\">500</td>\n<td>How long to postpone the next fetch request for a topic+partition in case of a fetch error. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>offset.store.method</td>\n<td>C</td>\n<td>none, file, broker</td>\n<td style=\"text-align:right\">broker</td>\n<td>Offset commit store method: 'file' - local file store (offset.store.path, <span class=\"exturl\" data-url=\"aHR0cDovL2V0LmFs\">et.al</span>), 'broker' - broker commit store (requires Apache Kafka 0.8.2 or later on the broker). &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>consume_cb</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Message consume callback (set with rd_kafka_conf_set_consume_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>rebalance_cb</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Called after consumer group has been rebalanced (set with rd_kafka_conf_set_rebalance_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>offset_commit_cb</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Offset commit result propagation callback. (set with rd_kafka_conf_set_offset_commit_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>enable.partition.eof</td>\n<td>C</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>Emit RD_KAFKA_RESP_ERR__PARTITION_EOF event whenever the consumer reaches the end of a partition. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>queue.buffering.max.messages</td>\n<td>P</td>\n<td>1 .. 10000000</td>\n<td style=\"text-align:right\">100000</td>\n<td>Maximum number of messages allowed on the producer queue. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>queue.buffering.max.kbytes</td>\n<td>P</td>\n<td>1 .. 2147483647</td>\n<td style=\"text-align:right\">4000000</td>\n<td>Maximum total message size sum allowed on the producer queue. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3F1ZXVlLmJ1ZmZlcmluZy5tYXgubXM=\">queue.buffering.max.ms</span></td>\n<td>P</td>\n<td>1 .. 900000</td>\n<td style=\"text-align:right\">1000</td>\n<td>Maximum time, in milliseconds, for buffering data on the producer queue. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>message.send.max.retries</td>\n<td>P</td>\n<td>0 .. 10000000</td>\n<td style=\"text-align:right\">2</td>\n<td>How many times to retry sending a failing MessageSet. <strong>Note:</strong> retrying may cause reordering. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>retries</td>\n<td>P</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>message.send.max.retries</code></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3JldHJ5LmJhY2tvZmYubXM=\">retry.backoff.ms</span></td>\n<td>P</td>\n<td>1 .. 300000</td>\n<td style=\"text-align:right\">100</td>\n<td>The backoff time in milliseconds before retrying a message send. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>compression.codec</td>\n<td>P</td>\n<td>none, gzip, snappy, lz4</td>\n<td style=\"text-align:right\">none</td>\n<td>compression codec to use for compressing message sets. This is the default value for all topics, may be overriden by the topic configuration property  <code>compression.codec</code> .  &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>batch.num.messages</td>\n<td>P</td>\n<td>1 .. 1000000</td>\n<td style=\"text-align:right\">10000</td>\n<td>Maximum number of messages batched in one MessageSet. The total MessageSet size is also limited by message.max.bytes. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>delivery.report.only.error</td>\n<td>P</td>\n<td>true, false</td>\n<td style=\"text-align:right\">false</td>\n<td>Only provide delivery reports for failed messages. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>dr_cb</td>\n<td>P</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Delivery report callback (set with rd_kafka_conf_set_dr_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>dr_msg_cb</td>\n<td>P</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Delivery report callback (set with rd_kafka_conf_set_dr_msg_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"topic-configuration-properties\"><a class=\"anchor\" href=\"#topic-configuration-properties\">#</a> Topic configuration properties</h2>\n<table>\n<thead>\n<tr>\n<th>Property</th>\n<th>C/P</th>\n<th>Range</th>\n<th style=\"text-align:right\">Default</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>request.required.acks</td>\n<td>P</td>\n<td>-1 .. 1000</td>\n<td style=\"text-align:right\">1</td>\n<td>This field indicates how many acknowledgements the leader broker must receive from ISR brokers before responding to the request: <em>0</em>=Broker does not send any response/ack to client, <em>1</em>=Only the leader broker will need to ack the message, <em>-1</em> or <em>all</em>=broker will block until message is committed by all in sync replicas (ISRs) or broker's  <code>in.sync.replicas</code>  setting before sending response.  &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>acks</td>\n<td>P</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>request.required.acks</code></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL3JlcXVlc3QudGltZW91dC5tcw==\">request.timeout.ms</span></td>\n<td>P</td>\n<td>1 .. 900000</td>\n<td style=\"text-align:right\">5000</td>\n<td>The ack timeout of the producer request in milliseconds. This value is only enforced by the broker and relies on  <code>request.required.acks</code>  being != 0. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL21lc3NhZ2UudGltZW91dC5tcw==\">message.timeout.ms</span></td>\n<td>P</td>\n<td>0 .. 900000</td>\n<td style=\"text-align:right\">300000</td>\n<td>Local message timeout. This value is only enforced locally and limits the time a produced message waits for successful delivery. A time of 0 is infinite. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>produce.offset.report</td>\n<td>P</td>\n<td>true, false</td>\n<td style=\"text-align:right\">false</td>\n<td>Report offset of produced message back to application. The application must be use the  <code>dr_msg_cb</code>  to retrieve the offset from  <code>rd_kafka_message_t.offset</code> . &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>partitioner_cb</td>\n<td>P</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Partitioner callback (set with rd_kafka_topic_conf_set_partitioner_cb()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>opaque</td>\n<td>*</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Application opaque (set with rd_kafka_topic_conf_set_opaque()) &lt;br&gt;<em>Type: pointer</em></td>\n</tr>\n<tr>\n<td>compression.codec</td>\n<td>P</td>\n<td>none, gzip, snappy, lz4, inherit</td>\n<td style=\"text-align:right\">inherit</td>\n<td>Compression codec to use for compressing message sets.  &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>auto.commit.enable</td>\n<td>C</td>\n<td>true, false</td>\n<td style=\"text-align:right\">true</td>\n<td>If true, periodically commit offset of the last message handed to the application. This committed offset will be used when the process restarts to pick up where it left off. If false, the application will have to call  <code>rd_kafka_offset_store()</code>  to store an offset (optional). <strong>NOTE:</strong> This property should only be used with the simple legacy consumer, when using the high-level KafkaConsumer the global  <code>enable.auto.commit</code>  property must be used instead. <strong>NOTE:</strong> There is currently no zookeeper integration, offsets will be written to broker or local file according to offset.store.method. &lt;br&gt;<em>Type: boolean</em></td>\n</tr>\n<tr>\n<td>enable.auto.commit</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\"></td>\n<td>Alias for  <code>auto.commit.enable</code></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL2F1dG8uY29tbWl0LmludGVydmFsLm1z\">auto.commit.interval.ms</span></td>\n<td>C</td>\n<td>10 .. 86400000</td>\n<td style=\"text-align:right\">60000</td>\n<td>The frequency in milliseconds that the consumer offsets are committed (written) to offset storage. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>auto.offset.reset</td>\n<td>C</td>\n<td>smallest, earliest, beginning, largest, latest, end, error</td>\n<td style=\"text-align:right\">largest</td>\n<td>Action to take when there is no initial offset in offset store or the desired offset is out of range: 'smallest','earliest' - automatically reset the offset to the smallest offset, 'largest','latest' - automatically reset the offset to the largest offset, 'error' - trigger an error which is retrieved by consuming messages and checking 'message-&gt;err'. &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>offset.store.path</td>\n<td>C</td>\n<td></td>\n<td style=\"text-align:right\">.</td>\n<td>Path to local file for storing offsets. If the path is a directory a filename will be automatically generated in that directory based on the topic and partition. &lt;br&gt;<em>Type: string</em></td>\n</tr>\n<tr>\n<td><span class=\"exturl\" data-url=\"aHR0cDovL29mZnNldC5zdG9yZS5zeW5jLmludGVydmFsLm1z\">offset.store.sync.interval.ms</span></td>\n<td>C</td>\n<td>-1 .. 86400000</td>\n<td style=\"text-align:right\">-1</td>\n<td>fsync() interval for the offset file, in milliseconds. Use -1 to disable syncing, and 0 for immediate sync after each write. &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n<tr>\n<td>offset.store.method</td>\n<td>C</td>\n<td>file, broker</td>\n<td style=\"text-align:right\">broker</td>\n<td>Offset commit store method: 'file' - local file store (offset.store.path, <span class=\"exturl\" data-url=\"aHR0cDovL2V0LmFs\">et.al</span>), 'broker' - broker commit store (requires &quot;<span class=\"exturl\" data-url=\"aHR0cDovL2dyb3VwLmlk\">group.id</span>&quot; to be configured and Apache Kafka 0.8.2 or later on the broker.). &lt;br&gt;<em>Type: enum value</em></td>\n</tr>\n<tr>\n<td>consume.callback.max.messages</td>\n<td>C</td>\n<td>0 .. 1000000</td>\n<td style=\"text-align:right\">0</td>\n<td>Maximum number of messages to dispatch in one  <code>rd_kafka_consume_callback*()</code>  call (0 = unlimited) &lt;br&gt;<em>Type: integer</em></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"cp-legend-c-consumer-p-producer-both\"><a class=\"anchor\" href=\"#cp-legend-c-consumer-p-producer-both\">#</a> C/P legend: C = Consumer, P = Producer, * = both</h3>\n",
            "tags": [
                "计算机科学",
                "kafka"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/kafka/kafkademo/",
            "url": "https://echidna-sxh.github.io/computer-science/kafka/kafkademo/",
            "title": "kafka示例",
            "date_published": "2021-08-11T06:29:28.000Z",
            "content_html": "<h1 id=\"一个简易的kafka客户端\"><a class=\"anchor\" href=\"#一个简易的kafka客户端\">#</a> 一个简易的 Kafka 客户端</h1>\n<h2 id=\"kafka_clienth\"><a class=\"anchor\" href=\"#kafka_clienth\">#</a> kafka_client.h</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">//#include&lt;memory></span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">//#include&lt;getopt.h></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;string></span></span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"librdkafka/rdkafkacpp.h\"</span></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>class kafka_consumer<span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 消费者类</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    private<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">handle_message</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Message <span class=\"token operator\">*</span>msg<span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 消费者处理每次 consume 来的信息</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        std<span class=\"token operator\">::</span>string brokers_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 代理，格式 host:port，多个代理用逗号隔开</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        std<span class=\"token operator\">::</span>string topics_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 消费的目标话题</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        std<span class=\"token operator\">::</span>string groupid_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 消费者所属的组 id</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">int</span> last_offset_<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 本次消费的最后偏移</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        RdKafka<span class=\"token operator\">::</span>Consumer <span class=\"token operator\">*</span>kafka_consumer_<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 原生消费者类对象指针，由后续 create 赋值</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        RdKafka<span class=\"token operator\">::</span>Topic <span class=\"token operator\">*</span>topic_<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 原生话题类对象指针，有后续 create 赋值</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">int</span> offset_<span class=\"token operator\">=</span>RdKafka<span class=\"token operator\">::</span>Topic<span class=\"token operator\">::</span>OFFSET_BEGINNING<span class=\"token punctuation\">;</span><span class=\"token comment\">// 默认的初始偏移，构造时可自定义</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">int</span> partition_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 读取的 partition 编号</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token function\">kafka_consumer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> brokers<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> topics<span class=\"token punctuation\">,</span>std<span class=\"token operator\">::</span>string groupid<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> partitition <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 构造函数</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        virtual <span class=\"token operator\">~</span><span class=\"token function\">kafka_consumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        bool <span class=\"token function\">initclient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 初始化客户端</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        bool <span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> timeout_ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 循环消费</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>class kfk_producer_delivery_report_callback<span class=\"token operator\">:</span>public RdKafka<span class=\"token operator\">::</span>DeliveryReportCb<span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 发包完的回调</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">dr_cb</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Message <span class=\"token operator\">&amp;</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 重载虚函数</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            std<span class=\"token operator\">::</span>cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Message delivery for (\"</span><span class=\"token operator\">&lt;&lt;</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"bytes):\"</span><span class=\"token operator\">&lt;&lt;</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">errstr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span>std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                std<span class=\"token operator\">::</span>cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"Key:\"</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">.</span><span class=\"token function\">key</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;&lt;</span>std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>class kfk_producer_event_callback<span class=\"token operator\">:</span>public RdKafka<span class=\"token operator\">::</span>EventCb<span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 事件回调</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">event_cb</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Event <span class=\"token operator\">&amp;</span>event<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 重载虚函数</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>            <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>                <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>Event<span class=\"token operator\">::</span>EVENT_ERROR<span class=\"token operator\">:</span><span class=\"token comment\">// 如果是错误事件</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>                    std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"ERROR (\"</span> <span class=\"token operator\">&lt;&lt;</span> RdKafka<span class=\"token operator\">::</span><span class=\"token function\">err2str</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"): \"</span> <span class=\"token operator\">&lt;&lt;</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>                    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> RdKafka<span class=\"token operator\">::</span>ERR__ALL_BROKERS_DOWN<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>                        <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>                <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>Event<span class=\"token operator\">::</span>EVENT_STATS<span class=\"token operator\">:</span><span class=\"token comment\">// 如果是统计文档返回</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>                    std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"\\\"STATS\\\": \"</span> <span class=\"token operator\">&lt;&lt;</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>                <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>Event<span class=\"token operator\">::</span>EVENT_LOG<span class=\"token operator\">:</span><span class=\"token comment\">// 如果是日志返回</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>                    <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"LOG-%i-%s: %s\\n\"</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>                        event<span class=\"token punctuation\">.</span><span class=\"token function\">severity</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">fac</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>                <span class=\"token keyword\">default</span><span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>                    std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"EVENT \"</span> <span class=\"token operator\">&lt;&lt;</span> event<span class=\"token punctuation\">.</span><span class=\"token function\">type</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>                        <span class=\"token string\">\" (\"</span> <span class=\"token operator\">&lt;&lt;</span> RdKafka<span class=\"token operator\">::</span><span class=\"token function\">err2str</span><span class=\"token punctuation\">(</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>                            <span class=\"token string\">\"): \"</span> <span class=\"token operator\">&lt;&lt;</span>event<span class=\"token punctuation\">.</span><span class=\"token function\">str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>                    <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>class kafka_producer<span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    private<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        RdKafka<span class=\"token operator\">::</span>Producer <span class=\"token operator\">*</span>kafka_producer_ <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 原生生产者对象指针</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        RdKafka<span class=\"token operator\">::</span>Topic <span class=\"token operator\">*</span>topic_<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 原生话题对象指针</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        kfk_producer_delivery_report_callback delivery_callback<span class=\"token punctuation\">;</span><span class=\"token comment\">// 递送包后的回调</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        kfk_producer_event_callback event_callback<span class=\"token punctuation\">;</span><span class=\"token comment\">// 事件回调</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        std<span class=\"token operator\">::</span>string topics_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 生产的目标话题</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        std<span class=\"token operator\">::</span>string brokers_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置的代理</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        bool run<span class=\"token operator\">=</span>false<span class=\"token punctuation\">;</span><span class=\"token comment\">// 开始运行</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token keyword\">int</span> partition_<span class=\"token punctuation\">;</span><span class=\"token comment\">// 写入的 partition 编号</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    public<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token function\">kafka_producer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> brokers<span class=\"token punctuation\">,</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> topics<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> partition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        virtual <span class=\"token operator\">~</span><span class=\"token function\">kafka_producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        bool <span class=\"token function\">init_producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 初始化生产者客户端</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 发送消息</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        <span class=\"token keyword\">void</span> <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 停止该客户端</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h2 id=\"kafka_clientcpp\"><a class=\"anchor\" href=\"#kafka_clientcpp\">#</a> kafka_client.cpp</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"kafka_client.h\"</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>bool run_<span class=\"token operator\">=</span>true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>kafka_consumer<span class=\"token operator\">::</span><span class=\"token function\">kafka_consumer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> brokers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>                                <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> topics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>                                std<span class=\"token operator\">::</span>string groupid<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>                                <span class=\"token keyword\">int</span> offset<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                                <span class=\"token keyword\">int</span> partition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token operator\">:</span><span class=\"token function\">brokers_</span><span class=\"token punctuation\">(</span>brokers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token function\">topics_</span><span class=\"token punctuation\">(</span>topics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token function\">groupid_</span><span class=\"token punctuation\">(</span>groupid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token function\">offset_</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token function\">partition_</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span>   </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>kafka_consumer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">kafka_consumer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>bool kafka_consumer<span class=\"token operator\">::</span><span class=\"token function\">initclient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>Conf <span class=\"token operator\">*</span>conf<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 配置对象的指针</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    conf<span class=\"token operator\">=</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_GLOBAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 配置类型为 global</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>conf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"create error\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    std<span class=\"token operator\">::</span>string errstr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"bootstrap.servers\"</span><span class=\"token punctuation\">,</span>brokers_<span class=\"token punctuation\">,</span>errstr<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 设置代理</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka conf set brokerlist failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"group.id\"</span><span class=\"token punctuation\">,</span> groupid_<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 设置消费者组 id</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka conf set group.id failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    std<span class=\"token operator\">::</span>string strfetch_num<span class=\"token operator\">=</span><span class=\"token string\">\"1024000\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"max.partition.fetch.bytes\"</span><span class=\"token punctuation\">,</span> strfetch_num<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 每次获取的最大数据长度</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka conf set max.partition failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    kafka_consumer_ <span class=\"token operator\">=</span> RdKafka<span class=\"token operator\">::</span>Consumer<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 根据完成的配置创建消费者对象</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>kafka_consumer_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to ceate consumer\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    delete conf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>Conf <span class=\"token operator\">*</span>tconf <span class=\"token operator\">=</span> nullptr<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    tconf <span class=\"token operator\">=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_TOPIC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 进行配置，配置类型为话题类型</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>tconf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka create topic conf failed\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token comment\">//if (tconf->set (\"auto.offset.reset\", \"largest\", errstr) != RdKafka::Conf::CONF_OK)&#123;// 自动重置到最大的 offset</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tconf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto.offset.reset\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"smallest\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 自动重置到最小的 offset, 这个最小的 offset 不一定是 0, 因为 msg 可能会被过期删除掉</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka conf set auto.offset.reset failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    topic_ <span class=\"token operator\">=</span> RdKafka<span class=\"token operator\">::</span>Topic<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>kafka_consumer_<span class=\"token punctuation\">,</span> topics_<span class=\"token punctuation\">,</span> tconf<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>topic_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka create topic failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    delete tconf<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>ErrorCode resp <span class=\"token operator\">=</span> kafka_consumer_<span class=\"token operator\">-></span><span class=\"token function\">start</span><span class=\"token punctuation\">(</span>topic_<span class=\"token punctuation\">,</span> partition_<span class=\"token punctuation\">,</span> offset_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 进行配置，配置类型为话题类型</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resp <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>ERR_NO_ERROR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"failed to start consumer : %s\\n\"</span><span class=\"token punctuation\">,</span> RdKafka<span class=\"token operator\">::</span><span class=\"token function\">err2str</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>bool kafka_consumer<span class=\"token operator\">::</span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> timeout_ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>Message <span class=\"token operator\">*</span>msg <span class=\"token operator\">=</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 声明数据指针</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    <span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>run_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        msg <span class=\"token operator\">=</span> kafka_consumer_<span class=\"token operator\">-></span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span>topic_<span class=\"token punctuation\">,</span>partition_<span class=\"token punctuation\">,</span>timeout_ms<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 从目标 partition 获取对应话题信息</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token function\">handle_message</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">,</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 处理获取到的信息</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        kafka_consumer_<span class=\"token operator\">-></span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 在获取到下一条数据之前无限等待</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        delete msg<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span><span class=\"token comment\">// 如果 handle 时 run 没有置 0 则一直循环</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>    kafka_consumer_<span class=\"token operator\">-></span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span>topic_<span class=\"token punctuation\">,</span>partition_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 和 start 对应，停止客户端</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>topic_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        delete topic_<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>        topic_<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>kafka_consumer_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        delete kafka_consumer_<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        kafka_consumer_<span class=\"token operator\">=</span><span class=\"token constant\">NULL</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span><span class=\"token function\">wait_destroyed</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 等待销毁，单位 ms</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre><span class=\"token keyword\">void</span> kafka_consumer<span class=\"token operator\">::</span><span class=\"token function\">handle_message</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Message <span class=\"token operator\">*</span>message<span class=\"token punctuation\">,</span><span class=\"token keyword\">void</span> <span class=\"token operator\">*</span>opt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>    <span class=\"token keyword\">switch</span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">-></span><span class=\"token function\">err</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>        <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>ERR__TIMED_OUT<span class=\"token operator\">:</span><span class=\"token comment\">// 超时</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>ERR_NO_ERROR<span class=\"token operator\">:</span><span class=\"token comment\">// 无异常</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%.*s\\n\"</span><span class=\"token punctuation\">,</span> static_cast<span class=\"token operator\">&lt;</span><span class=\"token keyword\">int</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">-></span><span class=\"token function\">len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>                    static_cast <span class=\"token operator\">&lt;</span><span class=\"token keyword\">const</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>message<span class=\"token operator\">-></span><span class=\"token function\">payload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            last_offset_ <span class=\"token operator\">=</span> message<span class=\"token operator\">-></span><span class=\"token function\">offset</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>        <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>ERR__PARTITION_EOF<span class=\"token operator\">:</span><span class=\"token comment\">// 到达最后一条消息</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>            std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"%% Reached the end of the queue, offset: \"</span> <span class=\"token operator\">&lt;&lt;</span> last_offset_ <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>        <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>ERR__UNKNOWN_TOPIC<span class=\"token operator\">:</span><span class=\"token comment\">// 主题不对</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>        <span class=\"token keyword\">case</span> RdKafka<span class=\"token operator\">::</span>ERR__UNKNOWN_PARTITION<span class=\"token operator\">:</span><span class=\"token comment\">//partition 不对</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Consume failed: \"</span> <span class=\"token operator\">&lt;&lt;</span> message<span class=\"token operator\">-></span><span class=\"token function\">errstr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>            run_<span class=\"token operator\">=</span>false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">default</span><span class=\"token operator\">:</span><span class=\"token comment\">// 其他异常</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Consume failed: \"</span> <span class=\"token operator\">&lt;&lt;</span> message<span class=\"token operator\">-></span><span class=\"token function\">errstr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            run_<span class=\"token operator\">=</span>false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>            <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>kafka_producer<span class=\"token operator\">::</span><span class=\"token function\">kafka_producer</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> brokers<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>                               <span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> topics<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>                               <span class=\"token keyword\">int</span> partition<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token operator\">:</span><span class=\"token function\">run</span><span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">topics_</span><span class=\"token punctuation\">(</span>topics<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">brokers_</span><span class=\"token punctuation\">(</span>brokers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token function\">partition_</span><span class=\"token punctuation\">(</span>partition<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>kafka_producer<span class=\"token operator\">::</span><span class=\"token operator\">~</span><span class=\"token function\">kafka_producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>    <span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>bool kafka_producer<span class=\"token operator\">::</span><span class=\"token function\">init_producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    std<span class=\"token operator\">::</span>string errstr<span class=\"token operator\">=</span><span class=\"token string\">\"\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>Conf <span class=\"token operator\">*</span>conf <span class=\"token operator\">=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_GLOBAL<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建全局配置对象指针</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>Conf <span class=\"token operator\">*</span>tconf <span class=\"token operator\">=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_TOPIC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建话题配置对象指针</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"metadata.broker.list\"</span><span class=\"token punctuation\">,</span> brokers_<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 设置代理</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"RdKafka conf set brokerlist failed :\"</span> <span class=\"token operator\">&lt;&lt;</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"dr_cb\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>delivery_callback<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置递送完包的回调</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>    conf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"event_cb\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>event_callback<span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 设置事件回调</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    kafka_producer_<span class=\"token operator\">=</span>RdKafka<span class=\"token operator\">::</span>Producer<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>conf<span class=\"token punctuation\">,</span>errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 声明生产者对象指针</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>kafka_producer_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Failed to create producer: \"</span> <span class=\"token operator\">&lt;&lt;</span> errstr <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> </pre></td></tr><tr><td data-num=\"136\"></td><td><pre>    std<span class=\"token operator\">::</span>cout <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"% Created producer \"</span> <span class=\"token operator\">&lt;&lt;</span> kafka_producer_<span class=\"token operator\">-></span><span class=\"token function\">name</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    topic_<span class=\"token operator\">=</span>RdKafka<span class=\"token operator\">::</span>Topic<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>kafka_producer_<span class=\"token punctuation\">,</span>topics_<span class=\"token punctuation\">,</span>tconf<span class=\"token punctuation\">,</span>errstr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 创建话题对象</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>topic_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Failed to create topic: \"</span> <span class=\"token operator\">&lt;&lt;</span> errstr <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre>        <span class=\"token keyword\">return</span> false<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>    <span class=\"token keyword\">return</span> true<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre></pre></td></tr><tr><td data-num=\"145\"></td><td><pre><span class=\"token keyword\">void</span> kafka_producer<span class=\"token operator\">::</span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> std<span class=\"token operator\">::</span>string<span class=\"token operator\">&amp;</span> msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span><span class=\"token comment\">// 发送消息</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>run<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"147\"></td><td><pre>        <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"148\"></td><td><pre>    RdKafka<span class=\"token operator\">::</span>ErrorCode resp <span class=\"token operator\">=</span> kafka_producer_<span class=\"token operator\">-></span><span class=\"token function\">produce</span><span class=\"token punctuation\">(</span>topic_<span class=\"token punctuation\">,</span> partition_<span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"149\"></td><td><pre>                                                    RdKafka<span class=\"token operator\">::</span>Producer<span class=\"token operator\">::</span>RK_MSG_COPY <span class=\"token comment\">/* Copy payload */</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"150\"></td><td><pre>                                                    const_cast<span class=\"token operator\">&lt;</span><span class=\"token keyword\">char</span> <span class=\"token operator\">*</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> </pre></td></tr><tr><td data-num=\"151\"></td><td><pre>                                                    msg<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"152\"></td><td><pre>                                                     <span class=\"token constant\">NULL</span><span class=\"token punctuation\">,</span> <span class=\"token constant\">NULL</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 异步非阻塞</span></pre></td></tr><tr><td data-num=\"153\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resp <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>ERR_NO_ERROR<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"154\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Produce failed: \"</span> <span class=\"token operator\">&lt;&lt;</span> RdKafka<span class=\"token operator\">::</span><span class=\"token function\">err2str</span><span class=\"token punctuation\">(</span>resp<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"155\"></td><td><pre>    <span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"156\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Produced message (\"</span> <span class=\"token operator\">&lt;&lt;</span> msg<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\" bytes)\"</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"157\"></td><td><pre>    <span class=\"token comment\">//kafka_producer_->poll(0);</span></pre></td></tr><tr><td data-num=\"158\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>run <span class=\"token operator\">&amp;&amp;</span> kafka_producer_<span class=\"token operator\">-></span><span class=\"token function\">outq_len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"159\"></td><td><pre>        std<span class=\"token operator\">::</span>cerr <span class=\"token operator\">&lt;&lt;</span> <span class=\"token string\">\"Waiting for \"</span> <span class=\"token operator\">&lt;&lt;</span> kafka_producer_<span class=\"token operator\">-></span><span class=\"token function\">outq_len</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"160\"></td><td><pre>        kafka_producer_<span class=\"token operator\">-></span><span class=\"token function\">poll</span><span class=\"token punctuation\">(</span><span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span><span class=\"token comment\">// 由于是异步调用，是否成功是看回调函数的，这里 poll 会调用 dr_cb 函数</span></pre></td></tr><tr><td data-num=\"161\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"162\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"163\"></td><td><pre><span class=\"token keyword\">void</span> kafka_producer<span class=\"token operator\">::</span><span class=\"token function\">stop</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"164\"></td><td><pre>    delete topic_<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"165\"></td><td><pre>    delete kafka_producer_<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"166\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>main.cpp</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;iostream></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">\"kafka_client.h\"</span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> argc<span class=\"token punctuation\">,</span> <span class=\"token keyword\">char</span><span class=\"token operator\">*</span> argv<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argc<span class=\"token operator\">&lt;</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        std<span class=\"token operator\">::</span>cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"maybe you should use p or c as parameter\"</span><span class=\"token operator\">&lt;&lt;</span>std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        kafka_producer<span class=\"token operator\">*</span> Kafkapr_ <span class=\"token operator\">=</span> new <span class=\"token function\">kafka_producer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"broker1:9091,broker2:9092,broker3:9093\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Demo_Topic\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        Kafkapr_<span class=\"token operator\">-></span><span class=\"token function\">init_producer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token comment\">//Kafkapr_->send(\"hello world!\");</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        std<span class=\"token operator\">::</span>string str_msg <span class=\"token operator\">=</span> <span class=\"token string\">\"Hello Kafka!\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>true<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            std<span class=\"token operator\">::</span><span class=\"token function\">getline</span><span class=\"token punctuation\">(</span>std<span class=\"token operator\">::</span>cin<span class=\"token punctuation\">,</span>str_msg<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">size_t</span> len <span class=\"token operator\">=</span> str_msg<span class=\"token punctuation\">.</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str_msg<span class=\"token punctuation\">[</span>len <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>                str_msg<span class=\"token punctuation\">[</span><span class=\"token operator\">--</span>len<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token string\">'\\0'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>str_msg<span class=\"token operator\">==</span><span class=\"token string\">\"quit\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                <span class=\"token keyword\">break</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            Kafkapr_<span class=\"token operator\">-></span><span class=\"token function\">send</span><span class=\"token punctuation\">(</span>str_msg<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token string\">'c'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        kafka_consumer<span class=\"token operator\">*</span> kafkacs_<span class=\"token operator\">=</span>new <span class=\"token function\">kafka_consumer</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"broker1:9091,broker2:9092,broker3:9093\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"Demo_Topic\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"group_1\"</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        kafkacs_<span class=\"token operator\">-></span><span class=\"token function\">initclient</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        kafkacs_<span class=\"token operator\">-></span><span class=\"token function\">consume</span><span class=\"token punctuation\">(</span><span class=\"token number\">5000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        std<span class=\"token operator\">::</span>cout<span class=\"token operator\">&lt;&lt;</span><span class=\"token string\">\"error parameter\"</span><span class=\"token operator\">&lt;&lt;</span>std<span class=\"token operator\">::</span>endl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h2 id=\"makefile\"><a class=\"anchor\" href=\"#makefile\">#</a> makefile</h2>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cc<span class=\"token operator\">=</span>g<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>target<span class=\"token operator\">=</span>main</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>src<span class=\"token operator\">=</span>main<span class=\"token punctuation\">.</span>cpp kafka_client<span class=\"token punctuation\">.</span>cpp</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>std<span class=\"token operator\">=</span><span class=\"token operator\">--</span>std<span class=\"token operator\">=</span>c<span class=\"token operator\">++</span><span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>lib<span class=\"token operator\">=</span><span class=\"token operator\">-</span>lrdkafka<span class=\"token operator\">++</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>$<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span>$<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>\t$<span class=\"token punctuation\">(</span>cc<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span>g <span class=\"token operator\">-</span>o $<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> $<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> $<span class=\"token punctuation\">(</span>std<span class=\"token punctuation\">)</span>  $<span class=\"token punctuation\">(</span>lib<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>clean<span class=\"token operator\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\trm <span class=\"token operator\">-</span>f main</pre></td></tr></table></figure>",
            "tags": [
                "计算机科学",
                "kafka"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/kafka/kafka-intro/",
            "url": "https://echidna-sxh.github.io/computer-science/kafka/kafka-intro/",
            "title": "librdkafkacpp接口使用示例",
            "date_published": "2021-08-11T06:00:28.000Z",
            "content_html": "<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmNvbmZsdWVudC5pby8yLjAuMC9jbGllbnRzL2xpYnJka2Fma2Ev\">https://docs.confluent.io/2.0.0/clients/librdkafka/</span></p>\n<p>librdkafkacpp 是一个 kafka 的 c++ 库，使用对象的创建使用工厂模式，自定义的逻辑处理一般使用回调函数。</p>\n<p>libkafkacpp 提供的接口基本覆盖了 kafka 原生提供的功能，但也比较琐碎，可以进行进一步封装。下面是对上一章的示例的详细解读。</p>\n<h1 id=\"生产者\"><a class=\"anchor\" href=\"#生产者\">#</a> 生产者</h1>\n<ul>\n<li>首先原生生产者是 RdKafka::Producer, 其需要的其他变量有：</li>\n</ul>\n<ol>\n<li>目标 broker (s)</li>\n<li>话题对象</li>\n<li>回调函数 (可选)</li>\n<li>写入的目标 partition</li>\n</ol>\n<ul>\n<li>其初始化流程为：</li>\n</ul>\n<p><img data-src=\"https://echidna-sxh.oss-cn-beijing.aliyuncs.com/rdkafka%3A%3Aproducer.png\" alt=\"\" /></p>\n<pre><code class=\"language-c++\">std::string errstr=&quot;&quot;;\n//创建全局配置对象指针\nRdKafka::Conf *conf = RdKafka::Conf::create(RdKafka::Conf::CONF_GLOBAL);\n//创建话题配置对象指针\nRdKafka::Conf *tconf = RdKafka::Conf::create(RdKafka::Conf::CONF_TOPIC);\n</code></pre>\n<ul>\n<li>这里应用工厂模式，创建了两个配置对象。rdkafka 的类大多使用大量纯虚函数，然后使用静态函数创建对象。</li>\n</ul>\n<pre><code class=\"language-c++\">if (conf-&gt;set(&quot;metadata.broker.list&quot;, brokers_, errstr) != RdKafka::Conf::CONF_OK)&#123;//\n        std::cerr &lt;&lt; &quot;RdKafka conf set brokerlist failed :&quot; &lt;&lt; errstr.c_str() &lt;&lt; std::endl;\n    &#125;\n</code></pre>\n<ul>\n<li>关于 conf-&gt;set 可以做的事较多，这里是设置 brokers，具体可以看附录</li>\n</ul>\n<pre><code class=\"language-c++\">conf-&gt;set(&quot;dr_cb&quot;, &amp;delivery_callback, errstr);//设置递送完包的回调\nconf-&gt;set(&quot;event_cb&quot;, &amp;event_callback, errstr);//设置事件回调\n</code></pre>\n<ul>\n<li>可选，注意设置了 delivery_callback 时，一定要在发送消息后使用 poll () 来清空消息报告队列，因为 poll () 会调用上述两个回调函数。</li>\n</ul>\n<pre><code class=\"language-c++\">kafka_producer_=RdKafka::Producer::create(conf,errstr);\n</code></pre>\n<ul>\n<li>使用前面进行的配置创建生产者对象</li>\n</ul>\n<pre><code class=\"language-c++\">topic_=RdKafka::Topic::create(kafka_producer_,topics_,tconf,errstr);\n</code></pre>\n<ul>\n<li>使用生产者对象和话题以及话题配置创建话题对象</li>\n</ul>\n<p>至此生产者及其话题可以用于发送消息，接下来的内容可以封装为一个单次发送信息函数，方便多次调用。</p>\n<pre><code class=\"language-c++\">RdKafka::ErrorCode resp = kafka_producer_-&gt;produce(topic_, partition_,\n                                                    RdKafka::Producer::RK_MSG_COPY /* Copy payload */,\n                                                    const_cast&lt;char *&gt;(msg.c_str()), \n                                                    msg.size(),\n                                                     NULL, NULL);\n</code></pre>\n<ul>\n<li>\n<p>第一个参数是前面的话题对象</p>\n</li>\n<li>\n<p>第二个参数是指定写入的 partition，可以设置 RdKafka::Topic::PARTITION_UA 来自动负载均衡，可以开个类继承 PartitionerCb 类重载 partitioner_cb 函数来自定义负载均衡策略。</p>\n</li>\n<li>\n<p>第三个参数指示生产选项，这里是拷贝负载模式 RK_MSG_COPY，还有用完即释放负载模式 RK_MSG_FREE，这里两个都是异步非阻塞的，还有 RK_MSG_BLOCK 模式，这会在消息队列满时阻塞</p>\n</li>\n<li>\n<p>第四个参数是要发送的信息，一般使用 char * 类型</p>\n</li>\n<li>\n<p>第五个参数是数据长度</p>\n</li>\n<li>\n<p>第六个参数是数据的 key，可以是空</p>\n</li>\n<li>\n<p>第七个参数是隐藏信息，用作上下文。</p>\n<p>函数原型如下：</p>\n</li>\n</ul>\n<pre><code class=\"language-c++\">virtual ErrorCode produce (Topic *topic, int32_t partition, int msgflags, void *payload, size_t len, const std::string *key, void *msg_opaque)=0\n</code></pre>\n<pre><code class=\"language-c++\">if (resp != RdKafka::ERR_NO_ERROR)\n        std::cerr &lt;&lt; &quot;Produce failed: &quot; &lt;&lt; RdKafka::err2str(resp) &lt;&lt; std::endl;\n</code></pre>\n<ul>\n<li>RdKafka::err2str (RdKafka::ErrorCode resp) 是将错误代码转化为可读错误。</li>\n</ul>\n<pre><code class=\"language-c++\">while (run &amp;&amp; kafka_producer_-&gt;outq_len() &gt; 0) &#123;\n        std::cerr &lt;&lt; &quot;Waiting for &quot; &lt;&lt; kafka_producer_-&gt;outq_len() &lt;&lt; std::endl;\n        kafka_producer_-&gt;poll(1000);//由于是异步调用，是否成功是看回调函数的，这里poll会调用dr_cb函数\n    &#125;\n</code></pre>\n<ul>\n<li>本次调用退出前处理完消息队列中的消息。</li>\n</ul>\n<h1 id=\"消费者\"><a class=\"anchor\" href=\"#消费者\">#</a> 消费者</h1>\n<p>对于消费者，有一个消费者组的概念，同一消费者组的消费者无法重复消费同一 partition，librdkafkacpp 提供两种消费者的 api，分别为高级 api 和低级 api，高级 api 拥有更好的负载均衡策略，即会更好的分配给每个消费者 partition。</p>\n<p>本示例使用低级 api，即指定 partition 进行消费。</p>\n<pre><code class=\"language-c++\">RdKafka::Conf *conf=RdKafka::Conf::create(RdKafka::Conf::CONF_GLOBAL);\n</code></pre>\n<ul>\n<li>同样是 GLOBAL 类型配置对象。</li>\n</ul>\n<pre><code class=\"language-c++\">if(conf-&gt;set(&quot;bootstrap.servers&quot;,brokers_,errstr)!=RdKafka::Conf::CONF_OK)&#123;\n        fprintf(stderr, &quot;RdKafka conf set brokerlist failed : %s\\n&quot;, errstr.c_str());\n    &#125;\n</code></pre>\n<ul>\n<li>设置 brokers</li>\n</ul>\n<pre><code class=\"language-c++\">if (conf-&gt;set(&quot;group.id&quot;, groupid_, errstr) != RdKafka::Conf::CONF_OK)&#123;\n        fprintf(stderr, &quot;RdKafka conf set group.id failed : %s\\n&quot;, errstr.c_str());\n    &#125;\n</code></pre>\n<ul>\n<li>设置消费者组 id</li>\n</ul>\n<pre><code class=\"language-c++\">std::string strfetch_num=&quot;1024000&quot;;\n    if(conf-&gt;set(&quot;max.partition.fetch.bytes&quot;, strfetch_num, errstr) != RdKafka::Conf::CONF_OK)&#123;\n        fprintf(stderr, &quot;RdKafka conf set max.partition failed : %s\\n&quot;, errstr.c_str());\n    &#125;\n</code></pre>\n<ul>\n<li>设置每次获取的最大数据长度</li>\n</ul>\n<pre><code class=\"language-c++\">kafka_consumer_ = RdKafka::Consumer::create(conf, errstr);\n</code></pre>\n<ul>\n<li>根据完成的配置创建消费者对象</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>RdKafka<span class=\"token operator\">::</span>Conf <span class=\"token operator\">*</span>tconf <span class=\"token operator\">=</span>  RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span><span class=\"token function\">create</span><span class=\"token punctuation\">(</span>RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_TOPIC<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><ul>\n<li>创建话题的配置对象</li>\n</ul>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>tconf<span class=\"token operator\">-></span><span class=\"token function\">set</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"auto.offset.reset\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"smallest\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> RdKafka<span class=\"token operator\">::</span>Conf<span class=\"token operator\">::</span>CONF_OK<span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>        <span class=\"token function\">fprintf</span><span class=\"token punctuation\">(</span><span class=\"token constant\">stderr</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"RdKafka conf set auto.offset.reset failed : %s\\n\"</span><span class=\"token punctuation\">,</span> errstr<span class=\"token punctuation\">.</span><span class=\"token function\">c_str</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><ul>\n<li>设置每次连接自动重置到最小的 offset（即最早的信息）, 这个最小的 offset 不一定是 0, 因为 msg 可能会被过期删除掉</li>\n</ul>\n<pre><code>topic_ = RdKafka::Topic::create(kafka_consumer_, topics_, tconf, errstr);\n</code></pre>\n<ul>\n<li>根据话题的配置对象创建话题对象</li>\n</ul>\n<pre><code class=\"language-c++\">RdKafka::ErrorCode resp = kafka_consumer_-&gt;start(topic_, partition_, offset_);\n</code></pre>\n<ul>\n<li>开启消费通道</li>\n</ul>\n<pre><code class=\"language-c++\">RdKafka::Message *msg = NULL;//声明数据指针\n    while(run_)&#123;\n        msg = kafka_consumer_-&gt;consume(topic_,partition_,timeout_ms);//从目标partition获取对应话题信息\n        handle_message(msg,NULL);//处理获取到的信息\n        kafka_consumer_-&gt;poll(0);//在获取到下一条数据之前无限等待\n        delete msg;\n    &#125;//如果handle时run没有置0则一直循环\n</code></pre>\n<ul>\n<li>开始循环监听消息</li>\n</ul>\n<pre><code class=\"language-c++\">kafka_consumer_-&gt;stop(topic_,partition_);\n</code></pre>\n<ul>\n<li>和 start 对应，停用消费通道</li>\n</ul>\n<p>之后销毁创建的两个对象，注意销毁后调用 RdKafka::wait_destroyed (5000); 来确保销毁所需时间。</p>\n<p>低级消费者的函数原型如下：</p>\n<pre><code class=\"language-c++\">virtual Message* RdKafka::Consumer::consume\t(Topic * topic,int32_t \tpartition,int timeout_ms )\n</code></pre>\n<ul>\n<li>第一个参数是目标话题，第二个参数是目标 partition，第三个参数是等待接受消息的最长时间</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "kafka"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/Linux/shell%20script/",
            "url": "https://echidna-sxh.github.io/computer-science/Linux/shell%20script/",
            "title": "section.6 shell脚本",
            "date_published": "2021-07-17T08:29:28.000Z",
            "content_html": "<h1 id=\"shell脚本\"><a class=\"anchor\" href=\"#shell脚本\">#</a> shell 脚本</h1>\n<ul>\n<li>\n<p>shell 脚本之于 Linux，就类似于批处理文件 (.bat) 之于 windows，都是可以 one touch 的情况下执行复数条命令，可以省去重复工作时每次都要输入又臭又长的命令的苦恼，并且其语法和 c 有不少共通之处，拥有基本的数组、循环、条件判断与转移等基本语法功能，可以直接用于编写程序。</p>\n</li>\n<li>\n<p>shell 脚本有着以下的几个注意事项：</p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>命令自上而下自左向右执行</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>命令参数之间以空格分开，多个空格会被忽略</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>读取到 Enter，就开始试图执行命令</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>注释符号为 #</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>一行命令内容过多可以用 \\ 收尾一行，然后回车，来换行继续写</pre></td></tr></table></figure><p>脚本以 sh 方式执行需要 r 权限，以./ 方式执行需要 x 权限。</p>\n<h2 id=\"程序头\"><a class=\"anchor\" href=\"#程序头\">#</a> 程序头</h2>\n<ul>\n<li>shell 脚本一般使用 vim 编辑，除此之外还有一些应尽事项，如：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>程序的第一行一般是：</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#！/bin/bash</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>这句话指定了程序所用的shell，即bash。</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>接下来是一些注释内容，包括：程序内容的说明、版本信息、作者信息、日期信息等。</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>然后是环境变量的声明，如果用到系统环境变量以外的环境变量，需要设置环境变量，以执行一些外部命令。</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>之后是程序主体，完成程序功能。</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>最后定义程序退出的返回值，一般定义为0.</pre></td></tr></table></figure><h2 id=\"括号的使用\"><a class=\"anchor\" href=\"#括号的使用\">#</a> 括号的使用</h2>\n<ul>\n<li>shell 脚本的语法里对括号的应用较为复杂，具体有以下几种。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>符号</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>(cmd)</code></td>\n<td>另开一个子 shell 完成 cmd，可使用父 shell 变量，父 shell 无法使用子 shell 中变量</td>\n</tr>\n<tr>\n<td><code>(cmds)</code></td>\n<td>同上，多条命令用分号隔开</td>\n</tr>\n<tr>\n<td><code>$(cmd)</code></td>\n<td>命令替换，扫描命令后先将 cmd 执行，用其标准输出替换这个表达式原来的位置，再执行总命令</td>\n</tr>\n<tr>\n<td><code>$((exp))</code></td>\n<td>表达式计算，最终结果为一个值，表达式支持 c 语言规则即可，使用较多</td>\n</tr>\n<tr>\n<td><code>array=(a,b,c,d)</code></td>\n<td>数组赋值</td>\n</tr>\n<tr>\n<td><code>((exp))</code></td>\n<td>计算一个表达式，同 [exp]</td>\n</tr>\n<tr>\n<td><code>[exp]</code></td>\n<td>可以使用 ((exp)) 功能外，还可以当作 test 使用</td>\n</tr>\n<tr>\n<td><code>[[exp]]</code></td>\n<td>比 [] 更通用，如可以不使用转义字符</td>\n</tr>\n<tr>\n<td><code>&#123;cmds&#125;</code></td>\n<td>一个代码块，不另开 shell</td>\n</tr>\n<tr>\n<td><code>$&#123;var&#125;</code></td>\n<td>大括号有时可省略，但最好还是加上</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"test和\"><a class=\"anchor\" href=\"#test和\">#</a> test 和 []</h2>\n<ul>\n<li>在需要检测文件相关属性时，我们可以使用 test 或 [] 来进行。注意使用 [] 时，你需要在所有独立含义的字符组之间加上空格，包括中括号闭区间的两端。[] 命令常和 if、while 等一起执行。</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">test</span> -<span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> filename</pre></td></tr></table></figure><ul>\n<li>相关检测选项如下</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>意义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-e</td>\n<td>文件存在返回 true，否则 false</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>是否为文件</td>\n</tr>\n<tr>\n<td>-d</td>\n<td>是否为目录</td>\n</tr>\n<tr>\n<td>-w</td>\n<td>文件是否可写</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>文件是否可读</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>文件是否可执行</td>\n</tr>\n<tr>\n<td>-eq</td>\n<td>(整数) 相等</td>\n</tr>\n<tr>\n<td>-ne</td>\n<td>(整数) 不等</td>\n</tr>\n<tr>\n<td>-gt</td>\n<td>(整数) 大于</td>\n</tr>\n<tr>\n<td>-lt</td>\n<td>(整数) 小于</td>\n</tr>\n<tr>\n<td>-z</td>\n<td>(字符串)</td>\n</tr>\n<tr>\n<td>-a</td>\n<td>and，逻辑 &amp;</td>\n</tr>\n<tr>\n<td>-o</td>\n<td>or 逻辑 |</td>\n</tr>\n<tr>\n<td>!</td>\n<td>not, 逻辑非</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"shell脚本的args和argv\"><a class=\"anchor\" href=\"#shell脚本的args和argv\">#</a> shell 脚本的 &quot;args&quot; 和 &quot;argv&quot;</h2>\n<p>命令可以带有参数，而 shell 脚本接受参数的方式和 c 语言有相似之处。我们可以用 $# 得到参数个数，用 $@代表全部参数，用 $1、$2、$3 等依次代表各个参数。而 $0 可以代表脚本文件的文件名 (可执行文件)。</p>\n<h2 id=\"条件判断ifthen\"><a class=\"anchor\" href=\"#条件判断ifthen\">#</a> 条件判断 (if...then)</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> 条件判断式1 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    actions</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">elif</span> <span class=\"token punctuation\">[</span> 条件判断式2 <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    actions</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    actions</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><p>注意事项：</p>\n<ul>\n<li>1. 虽然不一定要用中括号作为判断命令，但这样较为方便，注意中括号里的空格，如 [a==b];</li>\n<li>2. 可以使用 [[]] 代替 [] 以获得更好的扩展功能，如正则表达式等；</li>\n<li>3. 可以使用 (()) 代替 [] 以使用复杂表达式；</li>\n</ul>\n<h2 id=\"条件判断caseesac\"><a class=\"anchor\" href=\"#条件判断caseesac\">#</a> 条件判断 (case...esac)</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">case</span> <span class=\"token variable\">$var</span> <span class=\"token keyword\">in</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token string\">\"string1\"</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#建议使用双引号把变量内容括起来，这边单走一个右圆括号</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    actions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span>       <span class=\"token comment\">#这里需要双分号代表一个分支结束 (为了和上面操作的分号区分开)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token string\">\"string2\"</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    actions</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  *<span class=\"token punctuation\">)</span>         <span class=\"token comment\">#剩余内容一律使用 * 来匹配。</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token builtin class-name\">exit</span> <span class=\"token number\">1</span>   <span class=\"token comment\">#匹配不上的退出</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">;</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">esac</span>         <span class=\"token comment\">#老规矩</span></pre></td></tr></table></figure><h2 id=\"循环whiledodone\"><a class=\"anchor\" href=\"#循环whiledodone\">#</a> 循环 (while...do...done)</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  actions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h2 id=\"循环untildodone\"><a class=\"anchor\" href=\"#循环untildodone\">#</a> 循环 (until...do...done)</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">until</span> <span class=\"token punctuation\">[</span> 条件判断 <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  actions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>没什么好说的，各个式子语法规范好就行。</p>\n<h2 id=\"循环fordodone\"><a class=\"anchor\" href=\"#循环fordodone\">#</a> 循环 (for...do...done)</h2>\n<p>for 语句可以使用类似 python 的写法，即 for var in vars 语法。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token for-or-select variable\">var</span> <span class=\"token keyword\">in</span> var1 var2 <span class=\"token punctuation\">..</span>.<span class=\"token comment\">#如果数值连续可以使用 in $(seq n1 n2)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  actions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><p>也可以使用类似 c 的写法，即 for ((初值；条件；增长步长))。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token variable\"><span class=\"token punctuation\">((</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;=</span>$max<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">))</span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">do</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  actions</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">done</span></pre></td></tr></table></figure><h2 id=\"内置的脚本调试方法\"><a class=\"anchor\" href=\"#内置的脚本调试方法\">#</a> 内置的脚本调试方法</h2>\n<p>即调用 sh 来允许脚本，且加上相应的调试参数。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sh</span> -<span class=\"token punctuation\">[</span>nvx<span class=\"token punctuation\">]</span> xxx.sh</pre></td></tr></table></figure><table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>n</td>\n<td>不执行脚本，只检查语法</td>\n</tr>\n<tr>\n<td>v</td>\n<td>执行脚本前先打印脚本</td>\n</tr>\n<tr>\n<td>x</td>\n<td>将脚本按照运行步骤打印出来</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "计算机科学",
                "linux"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/Linux/RE/",
            "url": "https://echidna-sxh.github.io/computer-science/Linux/RE/",
            "title": "section.5 正则表达式",
            "date_published": "2021-07-16T08:29:28.000Z",
            "content_html": "<h1 id=\"re相关\"><a class=\"anchor\" href=\"#re相关\">#</a> RE 相关</h1>\n<ul>\n<li>正则表达式用来描述字符串匹配的复杂规则。</li>\n</ul>\n<h2 id=\"元字符\"><a class=\"anchor\" href=\"#元字符\">#</a> 元字符</h2>\n<ul>\n<li>元字符属于正则表达中的基础字符，代表符合特殊规则的单个字符.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>元字符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>.</td>\n<td>匹配除换行符以外的任意字符</td>\n</tr>\n<tr>\n<td>\\w</td>\n<td>匹配字母数字下划线汉字</td>\n</tr>\n<tr>\n<td>\\s</td>\n<td>匹配所有空白字符</td>\n</tr>\n<tr>\n<td>\\d</td>\n<td>匹配数字</td>\n</tr>\n<tr>\n<td>\\b</td>\n<td>该位置是单词的开始结束</td>\n</tr>\n<tr>\n<td>^</td>\n<td>匹配字符串的开始</td>\n</tr>\n<tr>\n<td>$</td>\n<td>匹配字符串的结束</td>\n</tr>\n<tr>\n<td>()</td>\n<td>对括号内的表达式分组，视作整体</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"字符转义\"><a class=\"anchor\" href=\"#字符转义\">#</a> 字符转义</h2>\n<ul>\n<li>对于可显示的元字符本身，需要作为普通字符查找时，需要使用反斜杠 \\ 进行转义。</li>\n</ul>\n<h2 id=\"字符串重复\"><a class=\"anchor\" href=\"#字符串重复\">#</a> 字符（串）重复</h2>\n<ul>\n<li>重复符是指将该字符前的字符 (串) 重复若干次.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>字符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>前置字符（串）重复 &gt;=0 次</td>\n</tr>\n<tr>\n<td>+</td>\n<td>前置字符（串）重复 &gt;=1 次</td>\n</tr>\n<tr>\n<td>?</td>\n<td>前置字符（串）重复 &lt;=1 次</td>\n</tr>\n<tr>\n<td><code>&#123;n&#125;</code></td>\n<td>前置字符（串）重复 n 次</td>\n</tr>\n<tr>\n<td><code>&#123;n1,n2&#125;</code></td>\n<td>前置字符（串）重复 n1 到 n2 次，n2 可缺省</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"自定义字符类\"><a class=\"anchor\" href=\"#自定义字符类\">#</a> 自定义字符类</h2>\n<ul>\n<li>正则表达式中允许使用 [] 来自定义字符类，表示可以从类中取一个字符参与匹配，如元音类 [aeiou]，[0-9], 即 \\d, 小写字母类 [a-z], 大写字母类 [A-Z], 数字字母类 [a-zA-Z0-9]。其中，[a-z][A-Z] 的表示方法基于 LANG=C，否则需要用 [:alpha:][:lower:][:upper:] 来替代。</li>\n</ul>\n<h2 id=\"分支条件\"><a class=\"anchor\" href=\"#分支条件\">#</a> 分支条件</h2>\n<ul>\n<li>用 | 分隔开来，可以表示 or 的含义，如:<br />\n\\d {5}-\\d {4}|\\d {5}, 表示五个数字 - 四个数字，或者五个数字，这个表达式左右不能互换，否则无法匹配 5-4 的后四个数字。</li>\n</ul>\n<h2 id=\"分组\"><a class=\"anchor\" href=\"#分组\">#</a> 分组</h2>\n<ul>\n<li>元字符中的 () 字符用于分组，其原理是每一个 () 都会被看作一个整体，且被分配一个组号，可以用于后向引用。</li>\n<li>分组最基本的功能是，确保表达式中的语义准确，且可以对整个分组使用重复字符 *、+、？和 {}，如 (\\d {2} 0)+, 表示任意两个数字加一个 0，整体重复 1 次以上。</li>\n</ul>\n<h2 id=\"反义\"><a class=\"anchor\" href=\"#反义\">#</a> 反义</h2>\n<ul>\n<li>即反向匹配元字符，一般是正常元字符的大写形式。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>反义元字符</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>\\W</td>\n<td>匹配不是字母下划线数字汉字的字符</td>\n</tr>\n<tr>\n<td>\\S</td>\n<td>匹配不是空白符的字符</td>\n</tr>\n<tr>\n<td>\\D</td>\n<td>匹配不是数字的字符</td>\n</tr>\n<tr>\n<td>\\B</td>\n<td>该位置不是开头或结尾</td>\n</tr>\n<tr>\n<td>[^string]</td>\n<td>匹配不含有组成 string 中字符的字符</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"后向引用\"><a class=\"anchor\" href=\"#后向引用\">#</a> 后向引用</h2>\n<p>前面提到，用 () 进行分组后，会从 1 开始按照左括号顺序从左到右给该分组一个组号，该分组工作后匹配到的字符 (串) 会被这个组号捕获，这时我们使用反斜杠加组号，就能复现出这个字符 (串)，注意这个不是单纯的重复表达式，而是重复匹配通过的内容，适用于匹配重复单词，如 soso，可以用 \\b (so)\\1\\b 匹配。</p>\n<h2 id=\"零宽断言\"><a class=\"anchor\" href=\"#零宽断言\">#</a> 零宽断言</h2>\n<p>这种语法存在的意义是，查找出现在特定表达式前 (后) 的内容，以？代指自己。</p>\n<ul>\n<li>\n<p>(?=word), 断言自己出现在 word 前面，并取自己作为表达式结果。如，\\bw+(?=ion\\b)，意思是匹配一段字符，如果该字符串以 ion 结尾，则取 ion 前的内容作为匹配对象，action 匹配 act。</p>\n</li>\n<li>\n<p>(?&lt;=word), 断言自己出现在 word 后面，并取自己作为表达式结果。如，(?&lt;=res)\\w+\\b, 取 res 后的内容作为比配对象，restart 匹配 tart。</p>\n</li>\n<li>\n<p>(?!word), 断言自己不会出现在 word 前面，并取自己作为表达式结果。如，\\d {3}(?![a-z]), 匹配三个数字，且这三个数字不能后接一个小写字母，1234 匹配出 123，123z 不能匹配。</p>\n</li>\n<li>\n<p>(?&lt;!word), 断言自己不会出现在 word 后面，如，(?&lt;[A-Z])\\d {2}\\b, 匹配两个数字，且这两个数字不能在大写字母后面，a12 匹配出 12，A12 不能匹配。</p>\n</li>\n</ul>\n<p>总结：断言属于额外条件，是在其他表达式完成匹配后进行的一步判断，将字符串代入？，取判断条件通过的进行匹配，匹配结果不包括断言条件。</p>\n<h2 id=\"贪婪匹配与懒惰匹配\"><a class=\"anchor\" href=\"#贪婪匹配与懒惰匹配\">#</a> 贪婪匹配与懒惰匹配</h2>\n<ul>\n<li>正则表达式默认进行贪婪匹配，即尽可能多的匹配字符，如果我们需要尽可能少的匹配字符，可以在重复符的后面加上？，即 *?、+?、??、{n1,n2}?、{n}?。</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "linux"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/Linux/VIM/",
            "url": "https://echidna-sxh.github.io/computer-science/Linux/VIM/",
            "title": "section.4 VIM使用",
            "date_published": "2021-07-15T08:29:28.000Z",
            "content_html": "<h1 id=\"vim相关\"><a class=\"anchor\" href=\"#vim相关\">#</a> VIM 相关</h1>\n<h2 id=\"按键说明\"><a class=\"anchor\" href=\"#按键说明\">#</a> 按键说明</h2>\n<ul>\n<li>\n<p>命令模式下：</p>\n<p>数字 + 操作符一般指循环该操作的次数，下面列举一些常用操作，包括移动光标，检索，复制粘贴，撤销重做等。</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>箭头</td>\n<td style=\"text-align:center\">光标移动一个单位，前可加数字</td>\n</tr>\n<tr>\n<td>home/end</td>\n<td style=\"text-align:center\">光标移动到该行开头 / 结尾</td>\n</tr>\n<tr>\n<td>gg/G</td>\n<td style=\"text-align:center\">光标移动到第一行 / 最后一行</td>\n</tr>\n<tr>\n<td>数字 + gg</td>\n<td style=\"text-align:center\">光标移动到该数字行第一字符处</td>\n</tr>\n<tr>\n<td>数字 + G</td>\n<td style=\"text-align:center\">同上</td>\n</tr>\n<tr>\n<td>数字 + 回车</td>\n<td style=\"text-align:center\">光标向下 n 行</td>\n</tr>\n<tr>\n<td>/word</td>\n<td style=\"text-align:center\">从光标向下搜索 word</td>\n</tr>\n<tr>\n<td>?word</td>\n<td style=\"text-align:center\">从光标向上搜索 word</td>\n</tr>\n<tr>\n<td>n</td>\n<td style=\"text-align:center\">重复前述查找操作</td>\n</tr>\n<tr>\n<td>N</td>\n<td style=\"text-align:center\">反向重复前述查找操作</td>\n</tr>\n<tr>\n<td>:n1,n2s/old/new/g</td>\n<td style=\"text-align:center\">将 n1 到 n2 行的所有 old 换成 new</td>\n</tr>\n<tr>\n<td>:n1,n2s/old/new/gc</td>\n<td style=\"text-align:center\">c 意指每次替换都要确认</td>\n</tr>\n<tr>\n<td>dd</td>\n<td style=\"text-align:center\">剪切光标行，前可加数字</td>\n</tr>\n<tr>\n<td>yy</td>\n<td style=\"text-align:center\">复制光标行，前可加数字</td>\n</tr>\n<tr>\n<td>p</td>\n<td style=\"text-align:center\">paste, 粘贴到光标下一行</td>\n</tr>\n<tr>\n<td>u</td>\n<td style=\"text-align:center\">undo，撤销上一操作</td>\n</tr>\n<tr>\n<td>ctrl+r</td>\n<td style=\"text-align:center\">redo，重做上一被撤销的操作</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>接下来是文件编辑完后的一些操作，这里的一些命令可以加 &quot;!&quot; 用于强制执行。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:w</td>\n<td style=\"text-align:center\">最终写入，可加！，也可加文件名表示另存为</td>\n</tr>\n<tr>\n<td>:q</td>\n<td style=\"text-align:center\">退出，可加！</td>\n</tr>\n<tr>\n<td>:wq</td>\n<td style=\"text-align:center\">写入后退出，可加！</td>\n</tr>\n<tr>\n<td>:n1,n2 w filename</td>\n<td style=\"text-align:center\">将 n1 到 n2 行之间的内容另存为一个文件</td>\n</tr>\n<tr>\n<td>!command</td>\n<td style=\"text-align:center\">暂时去执行命令行命令，然后回车返回 vim</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>VIM 支持多文件操作，vim file1 file2 即可，相关命令如下</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:n</td>\n<td style=\"text-align:center\">编辑下一个文件，可加数字</td>\n</tr>\n<tr>\n<td>:N</td>\n<td style=\"text-align:center\">编辑上一个文件，可加数字</td>\n</tr>\n<tr>\n<td>:files</td>\n<td style=\"text-align:center\">列表当前打开的所有文件</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>VIM 支持多窗口操作，相关命令如下</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>操作</th>\n<th style=\"text-align:center\">含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>:sp</td>\n<td style=\"text-align:center\">将当前文件重新打开一份</td>\n</tr>\n<tr>\n<td>:sp newfile</td>\n<td style=\"text-align:center\">开一个新窗口打开 newfile 文件</td>\n</tr>\n<tr>\n<td>ctrl+w + 上下箭头</td>\n<td style=\"text-align:center\">光标转移大法</td>\n</tr>\n</tbody>\n</table>\n<p>ctrl+w+q 或者 :q 或者 :close 关闭光标所在窗口</p>\n<h2 id=\"vim环境设置\"><a class=\"anchor\" href=\"#vim环境设置\">#</a> vim 环境设置</h2>\n<ul>\n<li>保存在 /etc/vimrc, 不建议直接修改，可以在～/.vimrc 中对用户单独设置。</li>\n</ul>\n<p> 显示行号比较重要，可以加入 set nu 行。</p>\n",
            "tags": [
                "计算机科学",
                "linux"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/Linux/tube/",
            "url": "https://echidna-sxh.github.io/computer-science/Linux/tube/",
            "title": "section.3 管道命令",
            "date_published": "2021-07-14T08:29:28.000Z",
            "content_html": "<h1 id=\"管道命令\"><a class=\"anchor\" href=\"#管道命令\">#</a> 管道命令</h1>\n<ul>\n<li>管道命令是将上一条命令的标准输出转化为下一条命令的标准输入，如：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> /etc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">ls</span> pass?? <span class=\"token operator\">|</span> <span class=\"token function\">cat</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>output:passwd</pre></td></tr></table></figure><ul>\n<li>上述命令将列表内容作为标准输入传递给 cat，也就是说在 cat 看来，它执行的命令是：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$cat</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>output:passwd</pre></td></tr></table></figure><ul>\n<li>而不是：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token function\">cat</span> <span class=\"token function\">passwd</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>output:<span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><p>这一点很重要.</p>\n<ul>\n<li>选取命令 grep 和 cut 内容在上一章，本章主要介绍数据处理的 sed 命令和 awk 命令。</li>\n</ul>\n<h2 id=\"sed命令\"><a class=\"anchor\" href=\"#sed命令\">#</a> sed 命令</h2>\n<ul>\n<li>sed 命令是一个非常好用的对行操作命令，其格式如下：</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>sed  - 选项   &#39; 操作字符串 &#39;  &#x2F;&#x2F; 无选项时默认带 - e，即直接执行操作字符串</pre></td></tr></table></figure><ul>\n<li>sed 命令的选项和含义：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-n</td>\n<td>安静模式，只列出处理相关行，否则打印所有标准输入数据</td>\n</tr>\n<tr>\n<td>-e</td>\n<td>直接在命令行上列出 sed 操作命令，可省略，后接单引号操作字符串</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>运行文件中的 sed 操作，后接文件名</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>使用扩展的正则语法，否则只支持标准正则</td>\n</tr>\n<tr>\n<td>-i</td>\n<td>直接修改文件内容而不是屏幕输出</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>sed 操作字符串语法</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>&#39;n1,n2 [function]&#39; &#x2F;&#x2F; 其中 n1 和 n2 指操作范围</pre></td></tr></table></figure><ul>\n<li>function 包括以下几种：</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>function</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>a</td>\n<td>add, 空格后接字符串，在指定行的下一行新增一行</td>\n</tr>\n<tr>\n<td>c</td>\n<td>change, 空格后接字符串，将 n1 和 n2 之间的行修改为这一行</td>\n</tr>\n<tr>\n<td>d</td>\n<td>delete，删除这些行</td>\n</tr>\n<tr>\n<td>i</td>\n<td>insert，空格后接字符串，在指定行的上一行新增一行</td>\n</tr>\n<tr>\n<td>p</td>\n<td>print，打印 n1 到 n2 行，一般和 - n 参数一起使用，否则没啥意义</td>\n</tr>\n<tr>\n<td>s</td>\n<td>swap，格式为 s/old/new/g，在 n1 和 n2 之间搜索替换</td>\n</tr>\n</tbody>\n</table>\n<p>例如</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nl</span> /etc/passwd <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'2，5d'</span>   <span class=\"token comment\">#删除 2-5 行</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nl</span> /etc/passwd <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'1i I am the first'</span>  <span class=\"token comment\">#添加第一行</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">nl</span> /etc/passwd <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> -n <span class=\"token string\">'2,5p'</span> <span class=\"token comment\">#安静模式下输出 2-5 行（不加 - n 会输出所有内容，2-5 行双倍输出） </span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">ls</span> -l /bin/*sh <span class=\"token operator\">|</span> <span class=\"token function\">sed</span> <span class=\"token string\">'s/^.*.\\. 1//g'</span>  <span class=\"token comment\">#把所有 bin 目录下带 sh 的信息删除前两字段后打印出来</span></pre></td></tr></table></figure><h2 id=\"awk\"><a class=\"anchor\" href=\"#awk\">#</a> awk</h2>\n<p>就像 cut 相对于 grep 一样，awk 命令相对于 sed 命令也是对每一行的特殊字段进行处理，以行为一次处理单位，以字段为最小处理单位，不同点是，awk 默认以单个或连续的空格和 tab 为分隔符，并自动给字段分组，awk 基本可以替代 cut，其命令格式如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">awk</span> <span class=\"token string\">'条件1&#123;操作1&#125; 条件2&#123;操作2&#125; 条件3&#123;操作3&#125;'</span> filename</pre></td></tr></table></figure><ul>\n<li>这里必须使用单引号。awk 可以配合很多操作，例如：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>last -n <span class=\"token number\">5</span><span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'&#123;print $1\"\\t\"$2&#125;'</span></pre></td></tr></table></figure><ul>\n<li>\n<p>其中 $1 是指由空白符分隔开的第一个字段，后续字段依次，$0 可以表示整个字段</p>\n</li>\n<li>\n<p>除了分段变量，awk 还有三个内置变量：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>变量</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>NF</td>\n<td>每一行的字段数（分别计算）</td>\n</tr>\n<tr>\n<td>NR</td>\n<td>目前是第几行</td>\n</tr>\n<tr>\n<td>FS</td>\n<td>目前的分隔字符，默认是空格</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>awk 允许逻辑运算判定作为条件，逻辑判断方法和 c 语言一致。</p>\n</li>\n<li>\n<p>例如：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> /etc/passwd <span class=\"token operator\">|</span><span class=\"token function\">awk</span> <span class=\"token string\">'BEGIN&#123;FS=\":\"&#125; $3&lt;10 &#123;print $1 \"\\t\" $3&#125;'</span></pre></td></tr></table></figure><ul>\n<li>\n<p>这个命令的意思是，选取 passwd 文件中的行，预设定冒号为分隔符，当第三字段值小于 10 时，打印出第一三字段。</p>\n</li>\n<li>\n<p>操作区允许进行逻辑运算，单个操作区允许多条命令用分号隔开，且 awk 中的内置变量不需要 $，只有分段数据需要 $ 加分段号来引用。</p>\n</li>\n<li>\n<p>例如：</p>\n</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">cat</span> payment.txt <span class=\"token operator\">|</span><span class=\"token punctuation\">\\</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token operator\">></span>awk <span class=\"token string\">'NR==1&#123;printf \"%10s %10s %10s %10s\\n\",$1,$2,$3,\"total\"&#125;</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>>NR>=2&#123;total=$2+$3</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>>printf \"%10s %10d %10d %10.2f\\n\",$1,$2,$3,total&#125;'</span></pre></td></tr></table></figure><h1 id=\"xargs\"><a class=\"anchor\" href=\"#xargs\">#</a> xargs</h1>\n<p>xargs 本质上也是管道命令，但和管道的基础功能有着差异。<br />\n还是使用类似的命令进行对比，如下：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ <span class=\"token builtin class-name\">cd</span> /etc</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>$ <span class=\"token function\">ls</span> pass?? <span class=\"token operator\">|</span><span class=\"token function\">xargs</span> <span class=\"token function\">cat</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>output:</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>root:x:0:0:root:/root:/bin/bash</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bin:x:1:1:bin:/bin:/sbin/nologin</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>daemon:x:2:2:daemon:/sbin:/sbin/nologin</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span></pre></td></tr></table></figure><p>这个例子和上述例子差距就在一个 xargs，这也就是 xargs 的功能，将上一条命令的输出作为下一条命令的参数，而不是像普通管道一样转到下一条命令的标准输入去。</p>\n<h1 id=\"管道和重定向的区别\"><a class=\"anchor\" href=\"#管道和重定向的区别\">#</a> 管道和重定向的区别</h1>\n<p>这两个命令都是对标准输出输入进行改变</p>\n<ul>\n<li>重定向是直接把输出转到文件去，重定向符号后面接文件</li>\n<li>管道后面应该接的是命令，不是文件。</li>\n<li>管道左侧命令的输出作为管道右侧命令的输入</li>\n</ul>\n",
            "tags": [
                "计算机科学",
                "linux"
            ]
        },
        {
            "id": "https://echidna-sxh.github.io/computer-science/Linux/bash/",
            "url": "https://echidna-sxh.github.io/computer-science/Linux/bash/",
            "title": "section.2 bash学习笔记",
            "date_published": "2021-07-13T08:29:28.000Z",
            "content_html": "<h1 id=\"bash\"><a class=\"anchor\" href=\"#bash\">#</a> bash</h1>\n<ul>\n<li>bash 是 Linux 标准下的 shell，Linux 通过 /etc/passwd 文件里的内容分配 bash 给用户用于工作。</li>\n</ul>\n<h2 id=\"变量\"><a class=\"anchor\" href=\"#变量\">#</a> 变量</h2>\n<ul>\n<li>\n<p>变量是 bash 的重要内容，变量默认为字符串类型，所有变量前都需要加 $, 推荐使用 ${} 的形式，以免产生命令歧义。（$ 其实也是一个变量，其值为当前 shell 终端的进程号 PID）</p>\n</li>\n<li>\n<p>变量设置规则</p>\n</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>变量以 &#x3D; 赋值，&#x3D; 两边不能有空格；</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>变量内容若有空格可以用 \\ 转义空格，或者用单双引号圈起来，\\ 用于将特殊字符去除特性；</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>变量内容中，双引号中的特殊字符保留特性，单引号中的特殊字符失去特性；</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>变量内容中若需要有其他命令的输出结果，需要将命令用 $() 括起来，命令在子 shell 中完成；</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>变量内容中使用的变量可以使用 $&#123;&#125; 括起来后直接拼接，如 PATH&#x3D;$&#123;PATH&#125;:&#x2F;home&#x2F;bin;</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>需要将变量传递给子 shell 时需要将该变量声明为环境变量，可以使用 declare -x 或 export；</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>一般自设变量使用小写，取消变量使用 unset；</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>需要设置数值变量类型时使用 declare -i 声明后赋值，declare 还有一个 - r 是设置只读变量。</pre></td></tr></table></figure><h2 id=\"声明变量\"><a class=\"anchor\" href=\"#声明变量\">#</a> 声明变量</h2>\n<p>在 bash 中我们使用 declare 来显式地声明变量类型，其格式为:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">declare</span> -<span class=\"token punctuation\">[</span>option<span class=\"token punctuation\">]</span> <span class=\"token assign-left variable\">var</span><span class=\"token operator\">=</span>?</pre></td></tr></table></figure><p>选项如下:</p>\n<table>\n<thead>\n<tr>\n<th>选项</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-i</td>\n<td>声明为整数类型</td>\n</tr>\n<tr>\n<td>-A</td>\n<td>声明为关联数组，即 map</td>\n</tr>\n<tr>\n<td>-a</td>\n<td>声明为整形数组</td>\n</tr>\n<tr>\n<td>-g</td>\n<td>声明为全局变量</td>\n</tr>\n<tr>\n<td>-r</td>\n<td>声明为只读变量</td>\n</tr>\n<tr>\n<td>-x</td>\n<td>声明为环境变量</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"配置文件\"><a class=\"anchor\" href=\"#配置文件\">#</a> 配置文件</h2>\n<table>\n<thead>\n<tr>\n<th>文件</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>/etc/profile</td>\n<td>系统路径，整体环境配置文件，不建议修改</td>\n</tr>\n<tr>\n<td>~/.bashprofile</td>\n<td>用户首选路径，读取～/.bashrc 后加个人设置</td>\n</tr>\n<tr>\n<td>~/.bashrc</td>\n<td>读取 /etc/bashrc，加入个人 alias 等</td>\n</tr>\n<tr>\n<td>/etc/bashrc</td>\n<td>设置 umask 和 PS1 提示变量，调用 profile.d 下的 sh 脚本</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>一般来说，环境变量修改～/.bash_profile, 偏好设置修改～/.bashrc, 但也可以在.bashrc 中加入环境变量然后 export 出去。</li>\n<li>修改完配置后需要使用 source 命令（或者小数点 '.', 记得空格）执行配置文件，可以在不重启 bash 的情况下生效。</li>\n</ul>\n<h2 id=\"bash下的通配符\"><a class=\"anchor\" href=\"#bash下的通配符\">#</a> bash 下的通配符</h2>\n<table>\n<thead>\n<tr>\n<th>通配符</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>*</td>\n<td>任意种类和数量的字符</td>\n</tr>\n<tr>\n<td>?</td>\n<td>一个任意字符</td>\n</tr>\n<tr>\n<td>[...]</td>\n<td>中括号内取一字符</td>\n</tr>\n<tr>\n<td>[...-...]</td>\n<td>范围内取一字符</td>\n</tr>\n<tr>\n<td>[^...]</td>\n<td>反向选择</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"数据重定向\"><a class=\"anchor\" href=\"#数据重定向\">#</a> 数据重定向</h2>\n<ul>\n<li>\n<p>bash 中命令执行的输入输出有三种，标准输入代码为 0，标准输出代码为 1, 标准错误输出为 2.</p>\n</li>\n<li>\n<p>特殊字符如下：</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>特殊字符</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>&lt;</td>\n<td>输入重定向</td>\n</tr>\n<tr>\n<td>1&gt;</td>\n<td>覆盖方式正常输出重定向</td>\n</tr>\n<tr>\n<td>1&gt;&gt;</td>\n<td>累加方式正常输出重定向</td>\n</tr>\n<tr>\n<td>2&gt;</td>\n<td>覆盖方式异常输出重定向</td>\n</tr>\n<tr>\n<td>2&gt;&gt;</td>\n<td>累加方式异常输出重定向</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p>&gt; 和 &gt;&gt; 默认为代码 1，即标准输出重定向，代码和重定向符中间没有空格，是一个整体。</p>\n</li>\n<li>\n<p>除了重定向到文件，我们还可以将正常输出和异常输出互相重定向，如：</p>\n</li>\n<li>\n<p>  1&gt;&amp;2, 将正常输出当作错误处理，即将标准输出转为标准错误。</p>\n</li>\n<li>\n<p>  2&gt;&amp;1，将错误输出通过标准输出打印出来，即将标准错误转为标准输出。</p>\n</li>\n</ul>\n<h2 id=\"逻辑判断\"><a class=\"anchor\" href=\"#逻辑判断\">#</a> 逻辑判断</h2>\n<ul>\n<li>命令顺序执行使用；分隔各个命令</li>\n<li>&amp;&amp; 连接：前置命令成功后才能执行后置命令</li>\n<li>|| 连接：前置命令失败后才能执行后置命令</li>\n</ul>\n<p>一般来说，我们的命令结构是：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>command1 <span class=\"token operator\">&amp;&amp;</span> command2 <span class=\"token operator\">||</span> command3</pre></td></tr></table></figure><p>类似于:</p>\n<figure class=\"highlight c\"><figcaption data-lang=\"c\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> cmd1<span class=\"token operator\">?</span>cmd2<span class=\"token operator\">:</span>cmd3<span class=\"token punctuation\">.</span></pre></td></tr></table></figure><h2 id=\"管道命令\"><a class=\"anchor\" href=\"#管道命令\">#</a> 管道命令</h2>\n<ul>\n<li>通过 | 将两条命令连接起来，使得后一条命令使用前一天命令的输出作为输入，相关命令在下一章进行列举。</li>\n</ul>\n<h2 id=\"选取命令\"><a class=\"anchor\" href=\"#选取命令\">#</a> 选取命令</h2>\n<ul>\n<li>\n<p>一般指 cut 命令和 grep 命令，其中管道使用较多；</p>\n</li>\n<li>\n<p>cut 命令是用于对每一行进行处理，参数如下</p>\n</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>含义</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-d</td>\n<td>divide, 后接字符，表示将字符串按照该字符分割为若干块，和 - f 一起使用</td>\n</tr>\n<tr>\n<td>-f</td>\n<td>field，后接数字，可用逗号隔开写多个，表示取第几块</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>character，后接 n1-n2，表示范围，意指取每行的 n1 到 n2 之间的字符，n1 和 n2 可缺省其一</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>grep 命令是用于筛选文件输入或标准输入中的行（如果需要筛选目录中的文件或目录，请用 ls 配合通配符查找或通过管道传输给 grep），可以配合基础正则表达式，如果需要使用复杂正则表达式，请使用 egrep，其语法如下：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">grep</span> -options <span class=\"token string\">'查找的字符（串）'</span> filename</pre></td></tr></table></figure><ul>\n<li>其中 filename 经常使用重定向来取前置命令输出，以此完成前一条命令的结果筛选，如：</li>\n</ul>\n<figure class=\"highlight raw\"><figcaption data-lang=\"\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>- ls -l | grep &quot;sh&quot; &#x2F;&#x2F; 筛选该目录下的包含 sh 的文件</pre></td></tr></table></figure><ul>\n<li>其中可选参数 - i 忽略大小写，-n 顺便输出行号，-c 计算字符出现次数，-v 反向查询。</li>\n</ul>\n<h2 id=\"排序和计算\"><a class=\"anchor\" href=\"#排序和计算\">#</a> 排序和计算</h2>\n<ul>\n<li>这些命令最后一个参数是文件，同样一般搭配管道使用。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>命令</th>\n<th>用途</th>\n<th>参数</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>sort</td>\n<td>排序</td>\n<td>-f 忽略大小写，-b 忽略开头空格，-u 去除重复，-t 分隔，-kn 取上一参数的第 n 区间排序</td>\n</tr>\n<tr>\n<td>uniq</td>\n<td>去除重复</td>\n<td>-i 忽略大小写，-c 进行计数</td>\n</tr>\n<tr>\n<td>wc</td>\n<td>计算数量</td>\n<td>-l 多少行，-w 计算字母数，-m 计算字符数</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"格式化输出\"><a class=\"anchor\" href=\"#格式化输出\">#</a> 格式化输出</h2>\n<ul>\n<li>printf 函数，和 c 语言一样的函数，使用方法如下：</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'输出格式（使用占位符）'</span> 实际内容</pre></td></tr></table></figure><p>注意，printf 不是管道命令，不能使用管道作为标准输入，实际内容一般采用 $() 的形式以变量方式传递，如：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">printf</span> <span class=\"token string\">'%10s\\t %5i\\t %8.2f\\n'</span> <span class=\"token variable\"><span class=\"token variable\">$(</span><span class=\"token function\">cat</span> data.txt<span class=\"token variable\">)</span></span></pre></td></tr></table></figure><p>此命令意为，将数据以 10 位字符、5 位整数、8 个字符的 2 位小数格式输出，每个数据之间间隔一个 Tab 加一个空格，每份数据另起一行。</p>\n",
            "tags": [
                "计算机科学",
                "linux"
            ]
        }
    ]
}